"title","body","isPullRequest","labels"
"Line comment disappears.","## Issue **Impacted version**: 4.24.1  **Deployment mode**: glassfish5.0  **Problem description**: - It will disappear when reloading the browser after entering line comments for commit.  ![01](https://user-images.githubusercontent.com/4468822/39901215-1325449c-5502-11e8-84cc-f52830f190b9.png) ![02](https://user-images.githubusercontent.com/4468822/39901222-1b1cabc2-5502-11e8-8608-07eb63a2b71e.png)  Reload browzer.  ![03](https://user-images.githubusercontent.com/4468822/39901225-1d36a52a-5502-11e8-8152-3e121724b6b0.png)  ","false","bug"
"sbt 1.1.5",,"true",
"Cannot edit a pull request title","## Issue **Impacted version**: 4.24.x  **Deployment mode**: standalone app  **Problem description**:  Cannot edit a pull request title. Until 4.23.1, it work fine. ","false","bug"
"Windows - Tomcat - Where is ~/.gitbucket/gitbucket.conf?","Hi, i wanted to try out GitBucket. I used it via Tomcat on Windows: Gitbucket 4.24.1 Tomcat 9.0.8 (as service) Windows 10  After some playing around with it, and doing some initial configurations, I broke it because I forgot to add the protocol to the URL base just as in https://github.com/gitbucket/gitbucket/issues/1071 . But because I'm on Windows I have issues locating the configuration file.","false",
"ZIP/tar.gz archive doesn't contain LFS files","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.24.1, current master  **Deployment mode**: standalone/sbt jetty:start  **Problem description**:  step to reproduce: - push some files as LFS - get ZIP by use ""Download ZIP"" button or 0tag/release page's link  problem: ZIP doesn't contains LFS file contents. It only contain pointer.","false",
"[WIP] Experimental use webpack","I tried to introduce webpack. This PR contains the result.  ## advantage to current implementation  - resource bundling  Now, many resources are included from every page. Webpack can bundle these resources.  before: ![20180505-161911](https://user-images.githubusercontent.com/6997928/39669286-c6e6893e-5122-11e8-8894-69b23fdef261.png)  after: ![20180505-162116](https://user-images.githubusercontent.com/6997928/39669295-ef55bb9c-5122-11e8-93cb-09aaeda76fec.png)  Of cource, these resources are cached by browser normally.  - minification  In webpack and sbt-webpack, minify js/css is simply done by `webpack prod` on sbt.  ## advantage to Webjars (#1595)  - Webjars is hard-tied to sbt and node.js  Rather, I think that it is appropriate to say that ""Webjars is overkill"". It imports npm dependency to jars one, so more lines required to write in build.sbt.  Webjars also has more complicated dependency by webjars classic/npm/bower jars. At least I know, trouble will occur when using mixed them.  - management library  webpack uses simple npm's `package.json`. It can use GitHub's repo directory. So, we can manage our customized `jsdifflib` as gitbucket/jsdifflib.  - simplicity  If we needs new javascript library, adding it is very easy. `npm install --save` and `require('library');` to `main.js`.  ## disadvantage  - need node.js/npm install for developer  **User** doesn't need node/npm. Simply run `java -jar gitbucket.war`. But for building GitBucket, `npm install` downloads node_modules and sbt-webpack requires node.js.  ## TODOs  I didn't check all functionality behavior. At least, diff doesn't work yet. It is required to do modulerize our javascript files. ","true",
"Fix JSON diff issue.","This PR fix Problem: JSON file's diff doesn't appear in the commit page.  In #1871, `data-val` contains contents for diff. But it read by `$().data(""val"")`. But `.data()` parses contents. For example: content is a JSON file.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Introduce new Renderer","# Introduce **new** rendering approach  This PR introduce `EnhancedRenderer` and some extended classes.  ## Changes  ### All files rendered by `EnhancedRenderer`.  - It makes more simple logic for blob/diff view. - Previous `Renderer` assumes used for render *Markup*. So, image/video/audio renderer is tricky.  ### correct handling image files  Previously, GitBucket detects image files by MIME-type. But, some `image/xxx` files can't render by browser. for example tiff file can't render by `img` tag.  `EnhancedRenderer` provides `ImageRenderer` trait. It represents ""file can render by img tag"".  ### Image file is not limited to binary  For example, SVG file is text but it can rendered by img tag. So this PR introduce `TextImageRenderer`. It extends `TextRenderer` and `ImageRenderer`. For `TextImageRenderer` repository viewer and diff viewer render both image and source text .  ![image](https://user-images.githubusercontent.com/6997928/39613099-e4fc15a8-4f9f-11e8-8c59-5ea88eaca86e.png)  ![image](https://user-images.githubusercontent.com/6997928/39613109-f626d142-4f9f-11e8-986b-31d2b5fd0a8f.png)   ### Allow read file as string or binary for `EnhancedRenderer`  `EnhancedRenderer` can read file as binary. So, it can render with format converter (for example, tiff to png).  It enables direct serving image file with data-URI. It reduce number of connections.  ![20180503-132639](https://user-images.githubusercontent.com/6997928/39613137-371a0be2-4fa0-11e8-84fc-7f4c16ccd606.png)   ### Diffs rendered by `EnhancedRenderer`.  If plugin has new renderer which extends `ImageRenderer`, automatically rendered with Image Diff tool.  or, If renderer extends `DiffRenderer`, diffs are rendered with custom diff rendering.  for example: JSON diff by [benjamine/JsonDiffPatch](https://github.com/benjamine/JsonDiffPatch)  ![image](https://user-images.githubusercontent.com/6997928/39614069-acee711c-4fa7-11e8-8ebe-b658b268ad2d.png)   ## Compatibility  The `RendererWrapper` wraps old-style `Renderer` to new-style `EnhancedRenderer`. So, no changes required for old-style Renderer plugins.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Show SMTP Error message in testing email settings","This PR add show SMTP error message as follows:  before:  ![image](https://user-images.githubusercontent.com/6997928/39505995-028d94e2-4e11-11e8-876f-540374337786.png)    after: ![image](https://user-images.githubusercontent.com/6997928/39505977-db182724-4e10-11e8-8aa3-d43021970886.png)   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"What if forks button be at the top right","What if the forks button leave the side menu to the top right of the repository. Just thinking aloud. ","false","improvement"
"Internal Server Error java.lang.NullPointerException when uploading or creating a file to gitBucket"," ## Issue **Impacted version4.20.0:    gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$commitFiles$1(RepositoryViewerController.scala:705) -- scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:234) scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:32) scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:29) scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38) scala.collection.TraversableLike.map(TraversableLike.scala:234) scala.collection.TraversableLike.map$(TraversableLike.scala:227) scala.collection.AbstractTraversable.map(Traversable.scala:104) gitbucket.core.controller.RepositoryViewerControllerBase.commitFiles(RepositoryViewerController.scala:704) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$26(RepositoryViewerController.scala:255) gitbucket.core.util.WritableUsersAuthenticator.$anonfun$writableUsersOnly$2(Authenticator.scala:141) gitbucket.core.util.WritableUsersAuthenticator.$anonfun$authenticate$14(Authenticator.scala:148) scala.Option.map(Option.scala:146) gitbucket.core.util.WritableUsersAuthenticator.$anonfun$authenticate$13(Authenticator.scala:146) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.WritableUsersAuthenticator.authenticate(Authenticator.scala:145) gitbucket.core.util.WritableUsersAuthenticator.$anonfun$writableUsersOnly$1(Authenticator.scala:141) gitbucket.core.controller.ValidationSupport.$anonfun$post$3(ValidationSupport.scala:25) org.scalatra.forms.FormSupport.validate(FormSupport.scala:14) org.scalatra.forms.FormSupport.validate$(FormSupport.scala:8) gitbucket.core.controller.ControllerBase.validate(ControllerBase.scala:33) gitbucket.core.controller.ValidationSupport.$anonfun$post$1(ValidationSupport.scala:25) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33) org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) scala.Option.flatMap(Option.scala:171) org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) scala.collection.immutable.Stream.flatMap(Stream.scala:490) org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) I have tried both of creating and   uploading and got the same error       org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:48) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:46) scala.collection.immutable.List.foreach(List.scala:389) scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:46) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:44) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650) org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457) org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown   Source) java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown   Source) org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) java.lang.Thread.run(Unknown   Source)  ","false","waiting 4 user feedback"
"Fix branch protection problem","In 4.24.0, branch protection setting has problem. This PR fix it.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Add absolute date/time display option","This PR can close #816. Add ""Absolute/Relative"" time option to system settings. By default, it still uses relateive time format.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Show mail address in profile page","Discussed in #673. It can be controlled by system settings. And it also show extra mail address introduced in #1939  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Fix editor preview bug","This bug introduced by #1962. It changed [diffUsingJS](https://github.com/gitbucket/gitbucket/pull/1962/files#diff-be5f4a4353aa2e21e8c7b9ccfb598651) but it didn't fix `editor.scala.html`.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Unable to fork a forked private repo !","## Members are unable to to fork a forked private repo. **Impacted version**: 4.23.1  **Problem description**: - I'm new to gitbucket. So I'll explain the scenario in details. - we've the following type of users :  (1. Admin(root), 2. Team Leader (Standard user), 3 Team Member (Standard user) ) ******************** - A private repo was created by an admin(admin/TestRepo) and an leader was added under Collaborators. Then the Team leader forked the same repo. - Again the team leader added a team member to the forked repo (Leader/TestRepo) under Collaborators. - But when the team member login in he's able to see the repo, but he is unable to fork it. - Error says Failed to create repository (screenshot attached) with a database error. I'm unable to find out the issue, I've installed the same version of gitbucket in other computers , but same issue. - Please help. - But the same issue doesn't occur when the admin creates a public repo.  ![issue](https://user-images.githubusercontent.com/15172478/39404385-d8328a1c-4baf-11e8-9a9e-be3b7e46ab80.png) ","false",
"set ace editor mode by ext-modelist.js","ace editor has [many modes](https://github.com/ajaxorg/ace/blob/0155d37327fd08b9b7c6d033621b7ba6d8918622/lib/ace/ext/modelist.js#L45-L195). This PR enables all modes by javascript mode lookup method instead of scala method.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Issue/PullRequest hooks doesn't called when issue/pr closed by pushed commit","In #1880 I figured out this problem. #1880 is **webhook** issue. This issue is **plugin hook** issue.  > the commit pushed from ssh also should fires webhook and plugin's hook. But plugin's hook requires gitbucket.core.controller.Context (which requires HttpServletRequest). I can't create Context in ssh session.  At least, I know issue hook used by notification plugin. Then, it affects ""No mail send when issue closed by commit comment"". ","false","bug"
"call issue closed webhook when pushed commit contains keywords","This PR fixes #1880.  But, it doesn't call plugin's hooks.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"close and mark as merged PR by pushed commits","In [git-flow](https://github.com/nvie/gitflow), developer creates feature branch and make PR on web UI. and reviewer merges it by `git flow feature finish`. `git flow feature finish` merges feature branch into develop branch locally.  In this flow, created PR isn't closed automatically. Of course, user can close PR manually, but it doesn't show that this PR is merged or not.  This PR solves this problem. PRs are marked as merged and closed if:  - PR is open - PR's branch is pushed branch - pushed commits contains PR's commitIdTo  I can't decide last condition is valid or not. Perhaps, it should be change to ""pushed commits contains all commits in PR""...?  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"don't separate user:branch in PR message","PR message shows ""into user:branch from user :branch"". There is unexpected space.  ![image](https://user-images.githubusercontent.com/6997928/39396607-1c07d294-4b2c-11e8-9fe3-a2e7e2f7af2b.png)  This PR removes it.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"show file icons"," ![20180428-163537](https://user-images.githubusercontent.com/6997928/39393746-0565c9ec-4b04-11e8-84da-b4551d6dec7d.png)   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"show tags on commits page","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Scala 2.12.6",,"true",
"Trigger a Jenkins Pipeline after a Push","Hi.  I try to trigger a jenkins pipeline after i do a push in a gitbucket repo.  The GitBucket plugin in jenkins only alows me to add this trigger in a freestyle project and not in a pipeline.  My try with the github jenkins plugin was not successfully. If i use the github plugin, i see the push in jenkins log, but no builds are triggered. Can anyone help how to trigger a jenkins pipeline build after push in gitbucket?   Thank you very much.  ","false","question"
"[WIP]Fix column type and validation for long webhook URL","This fixes #1951.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Internal server error when you try to download Patch for PR without fork","GitBucket 4.23.1.  Create a repo, then create a new branch in the same repo, do some changes on this new branch, commit, then open a pullreq.  Then if you click the ""Patch"" button, you get the following error:  ~~~ Apr 25 20:40:46 code server: 20:40:46.871 [http-bio-8080-exec-6459] ERROR g.c.c.RepositoryViewerController - Catch unhandled error in request: org.apache.catalina.connector.RequestFacade@63eb34f2 Apr 25 20:40:46 code server: java.util.NoSuchElementException: null Apr 25 20:40:46 code server: at java.util.ArrayList$Itr.next(ArrayList.java:862) Apr 25 20:40:46 code server: at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:40) Apr 25 20:40:46 code server: at scala.collection.IterableLike.head(IterableLike.scala:106) Apr 25 20:40:46 code server: at scala.collection.IterableLike.head$(IterableLike.scala:105) Apr 25 20:40:46 code server: at scala.collection.AbstractIterable.head(Iterable.scala:54) Apr 25 20:40:46 code server: at gitbucket.core.util.JGitUtil$.getPatch(JGitUtil.scala:621) Apr 25 20:40:46 code server: at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$64(RepositoryViewerController.scala:543) Apr 25 20:40:46 code server: at gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:40) Apr 25 20:40:46 code server: at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$63(RepositoryViewerController.scala:542) Apr 25 20:40:46 code server: at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:105) Apr 25 20:40:46 code server: at scala.Option.map(Option.scala:146) Apr 25 20:40:46 code server: at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:103) Apr 25 20:40:46 code server: at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) Apr 25 20:40:46 code server: at gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:102) Apr 25 20:40:46 code server: at gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:97) Apr 25 20:40:46 code server: at gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:97) Apr 25 20:40:46 code server: at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32) Apr 25 20:40:46 code server: at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$62(RepositoryViewerController.scala:539) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) Apr 25 20:40:46 code server: at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) Apr 25 20:40:46 code server: at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) Apr 25 20:40:46 code server: at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) Apr 25 20:40:46 code server: at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) Apr 25 20:40:46 code server: at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) Apr 25 20:40:46 code server: at scala.Option.flatMap(Option.scala:171) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) Apr 25 20:40:46 code server: at scala.collection.immutable.Stream.flatMap(Stream.scala:490) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) Apr 25 20:40:46 code server: at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) Apr 25 20:40:46 code server: at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:74) Apr 25 20:40:46 code server: at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:52) Apr 25 20:40:46 code server: at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:49) Apr 25 20:40:46 code server: at scala.collection.immutable.List.foreach(List.scala:389) Apr 25 20:40:46 code server: at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) Apr 25 20:40:46 code server: at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) Apr 25 20:40:46 code server: at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) Apr 25 20:40:46 code server: at gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:49) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Apr 25 20:40:46 code server: at gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:49) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) Apr 25 20:40:46 code server: at scala.Option.getOrElse(Option.scala:121) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) Apr 25 20:40:46 code server: at scala.Option.getOrElse(Option.scala:121) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) Apr 25 20:40:46 code server: at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) Apr 25 20:40:46 code server: at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Apr 25 20:40:46 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) Apr 25 20:40:46 code server: at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) Apr 25 20:40:46 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Apr 25 20:40:46 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) Apr 25 20:40:46 code server: at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) Apr 25 20:40:46 code server: at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:74) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Apr 25 20:40:46 code server: at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) Apr 25 20:40:46 code server: at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) Apr 25 20:40:46 code server: at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) Apr 25 20:40:46 code server: at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) Apr 25 20:40:46 code server: at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) Apr 25 20:40:46 code server: at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) Apr 25 20:40:46 code server: at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) Apr 25 20:40:46 code server: at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Apr 25 20:40:46 code server: at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Apr 25 20:40:46 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Apr 25 20:40:46 code server: at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:218) Apr 25 20:40:46 code server: at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110) Apr 25 20:40:46 code server: at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:506) Apr 25 20:40:46 code server: at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) Apr 25 20:40:46 code server: at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103) Apr 25 20:40:46 code server: at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:962) Apr 25 20:40:46 code server: at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) Apr 25 20:40:46 code server: at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:445) Apr 25 20:40:46 code server: at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1087) Apr 25 20:40:46 code server: at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637) Apr 25 20:40:46 code server: at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316) Apr 25 20:40:46 code server: at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) Apr 25 20:40:46 code server: at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) Apr 25 20:40:46 code server: at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) Apr 25 20:40:46 code server: at java.lang.Thread.run(Thread.java:748) ~~~ ","false","bug"
"Update with propper mobile/tablet scalling","### Before submitting a pull-request to GitBucket I have first:  - [v] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [v] rebased my branch over master - [v] verified that project is compiling - [v] verified that tests are passing - [v] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [v] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"demo instance credencials are only available in readme","In the current setup is the login information only available in the Github Readme: Consider to place it somewhere on either the homepage as well, since some people reach the homepage directly.  And those one have no clue or hint, how to login","false",
"limits tags just on commit, show tags on commits page. close #1968","This PR is answer for #1968. It limits tags on commit.  ![image](https://user-images.githubusercontent.com/6997928/39200252-9beca4ac-4826-11e8-8409-684c184e0842.png)   And this PR also provide tag list on commit history page.  ![image](https://user-images.githubusercontent.com/6997928/39200148-497b4f02-4826-11e8-8306-70bbc67d8896.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"add sbt-updates","Check newer versions of dependencies via `sbt dependencyupdates`  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"update scalafmt","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Turn of ""Compare & pull request"" button","## Issue **Impacted version**: 4.20.0  **Deployment mode**: *standalone app with http frontend (apache using mod_proxy)*  **Problem description**: Hi, how do I turn off the ""Compare & pull request"" button that appears below the repository description without turning off pull request just the list of suggestions? ","false","improvement"
"Bump bundled gitbucket-gist-plugin","[gitbucket-gist-plugin](https://github.com/gitbucket/gitbucket-gist-plugin) is renewed (but it hasn't been released yet). The bundled plugin must be updated in GitBucket 4.24.0.","false","plugin"
"too many tags on commit page","I wrote adding tag feature in #1967. But I wondered tag list on commit page.  This image shows gitbucket source on local GitBucket. ![image](https://user-images.githubusercontent.com/6997928/39096457-524c0bf4-468b-11e8-928d-47be6aeed257.png)  It shows many many tags on this commit.  It is similar to GitHub behavior (tag sorting has different) https://github.com/gitbucket/gitbucket/commit/7f78a98de03a0874e1d3a2cc1099392245d3f9e2  Who want these tags list? I think it is enough information that which tag on this commit.  ### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki) ","false",
"add tag on commit.","Discussed in #1265.  ![20180423-00088](https://user-images.githubusercontent.com/6997928/39096428-ee0e1fe2-468a-11e8-9bd1-a54769d42f44.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Support EditorConfig for online browser/editor.","This PR add [EditorConfig](http://editorconfig.org/) support for online browser/editor. It reads  - `indent_style` - `indent_size` (`tab_width`) - `end_of_line`  from `.editorconfig` file. and reflects to online browser/editor.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"force eol to lf by editorconfig / allow trailing space to *.md","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [ ] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"sort username for issue comments","Sort usernames for useful order.  ![20180419-225236](https://user-images.githubusercontent.com/6997928/39050999-5a5ddc32-44e2-11e8-89bb-0c54f459c82e.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"""Copy existing git repository"" fails if remote repo needs authentication","Title pretty much says it all. When you try to create a new repo, and specify an existing repo to copy, you get the following error if the repo is not anon-clone:  ![image](https://user-images.githubusercontent.com/5798552/38998811-b29290e8-43f0-11e8-83c3-ddd31fef6af3.png)  ~~~ org.eclipse.jgit.api.errors.TransportException: <remote url>: Authentication is required but no CredentialsProvider has been registered ~~~  Since GitBucket already provides a way to add SSH keys, it'd be great if we could select those keys during repo copy.","false",
"Fix  #1871: Fixed breaking newlines when starting with multiple blank…","Fix for [#1871](https://github.com/gitbucket/gitbucket/issues/1871) By entering directly in the textarea tag, the first line feed is omitted, so use the custom data attribute  When calling prettyPrintOne, since two leading carriage returns were treated as one, replace only the leading newline  testing environment  Mac   Firefox 59.0.2 (64 bit)   Chrome 65.0.3325.181（64 bit） ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  ","true",
"Improve pull request comments presentation","In the conversation tab of pull requests, do grouping comments for code and fold outdated comments and display diff fragment with these comments.  ![review-comments](https://user-images.githubusercontent.com/1094760/39358179-3fa5d28c-4a50-11e8-82fe-dd7948b0fe8c.png)  See also #1897.","true","improvement"
"git mv should be displayed as renaming in the web viewer","Currently it is shown as a full remove diff for the old filename and full add diff for the new filename.  Example:  ~~~ [root@ansible tasks]# git status # On branch master # Changes to be committed: #   (use ""git reset HEAD <file>..."" to unstage) # #       renamed:    nginx.yml -> restart.yml # # Changes not staged for commit: #   (use ""git add <file>..."" to update what will be committed) #   (use ""git checkout -- <file>..."" to discard changes in working directory) # #       modified:   main.yml # ~~~  After `git add . && git commit && git push` it is shown in the web UI like this:  ![image](https://user-images.githubusercontent.com/36212739/38888040-c6cd0182-427a-11e8-9e07-baf9eb5013c1.png)  While a simple  ~~~ roles/nginx/tasks/nginx.yml -> roles/nginx/tasks/restart.yml ~~~  line would suffice imo. This only adds noise the UI and looks like there were code changes while in fact there weren't.  GitBucket 4.23.1 ","false",
"Apply ApiAuthenticationFilter to /api/* to cover APIs other than GitHub API","and some enhancements about internal processing for Web API to be able to add new API from plugins.","true","improvement"
"Internal Server Error - java.lang.NoSuchMethodError","## Internal Server Error - java.lang.NoSuchMethodError **Impacted version**: 4.23.1  **Deployment mode**: deployed under Tomcat, behind apache proxy  **Problem description**: When I try to access repository page I get Internal Server Error ``` java.lang.NoSuchMethodError: gitbucket.core.helper.html.dropdown$.apply$default$5()Lscala/Tuple2; gitbucket.notifications.html.watch$.apply(watch.template.scala:22) Plugin.$anonfun$repositoryHeaders$2(Plugin.scala:48) scala.Option.map(Option.scala:146) Plugin.$anonfun$repositoryHeaders$1(Plugin.scala:39) gitbucket.core.html.menu$.$anonfun$apply$6(menu.template.scala:99) scala.collection.immutable.Stream.map(Stream.scala:415) gitbucket.core.html.menu$.apply(menu.template.scala:98) gitbucket.core.repo.html.files$.apply(files.template.scala:42) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$fileList$3(RepositoryViewerController.scala:1046) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$fileList$2(RepositoryViewerController.scala:1026) scala.Option.map(Option.scala:146) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$fileList$1(RepositoryViewerController.scala:1024) gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:40) gitbucket.core.controller.RepositoryViewerControllerBase.fileList(RepositoryViewerController.scala:1019) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$10(RepositoryViewerController.scala:214) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:105) scala.Option.map(Option.scala:146) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:103) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:102) gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:97) gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:97) gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$9(RepositoryViewerController.scala:211) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) scala.Option.flatMap(Option.scala:171) org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) scala.collection.immutable.Stream.flatMap(Stream.scala:490) org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:74) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:52) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:49) scala.collection.immutable.List.foreach(List.scala:389) scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:49) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:49) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:74) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:94) org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504) org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620) org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:502) org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1132) org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684) org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2521) org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2510) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) java.lang.Thread.run(Thread.java:748) ```","false",
"fix #1956","This PR fix #1956  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Issue closed by commit comment on any branch (only web interface)","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.23.1, current master  **Deployment mode**: standalone app  **Problem description**: - create an issue (#1) - create branch on web interface (branch `test`) - commit any file with comment `close #1`  **results**: - #1 is closed  **expected**: - #1 is not closed before merged ","false","bug"
"Improve webhook payload compatibility for discord.","This PR adds dummy `id` field for user/repository/issue/PR.  ![20180415-144812](https://user-images.githubusercontent.com/6997928/38775516-cd5b2342-40bf-11e8-8b15-ead208a88d2d.png)  Because this test runs on localhost, then it doesn't show avatar.  This PR can close #1888.   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Keep wrap mode of Ace editor using localStorage",,"true","improvement"
"Disable removed user's repositories","Closes #1924","true","bug"
"Disallow users and repositories which have different letter cases","See #1826 to know details of the issue.","true","improvement"
"AWS CodeBuild requires a very long webhook URL and token","I am trying GitBucket and AWS CodeBuild for continuous integration. AWS CodeBuild can generate a webhook URL and token but they are too long and GitBucket does not accept them.  For example, in the us-west-2 zone, a webhook URL seems 280~290 chars as like:  ``` https://codebuild.us-west-2.amazonaws.com/webhooks?t=[VERY LONG STRING]&v=1 ```  and a token seems 1000~1100 chars. As far as I know, AWS does not provide max length of webhook URL and token, but I think the followings are enough:  - Webhook URL: 1024 chars - Security token: 2048 chars  Currently the webhook form accepts a very long string because it does not have length validation, but finally it causes a database error.  ## Issue **Impacted version**: 4.23.0  **Deployment mode**: Running in a container behind a reverse proxy and SSL load balancer on AWS ","false","improvement"
"ERRORclass java.net.SocketException Socket is closed","## Issue **Impacted version**: 4.20.0  **Deployment mode**: standalone app with http frontend (apache using mod_proxy)  **Problem description**: When testing a service hook(Test Hook button) the response would always be returned with an error ""ERRORclass java.net.SocketException Socket is closed""  ","false","question"
"Maintenance/1.11","### Before submitting a pull-request to GitBucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Maintenance/1.11","### Before submitting a pull-request to GitBucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Request:  Support for LDAP group sync","## Issue **Impacted version**: all  **Deployment mode**: web container /w nginx  **Problem description**: Support for syncing LDAP groups would be incredibly valuable and reduce the maintenance burden of adding users to repos, etc. ","false","LDAP/SSO,feature"
"Jenkins Github Organization job type not discovering Jenkinsfile in `master`","## Issue **Impacted version**: 4.23.0 * jenkins: 2.107.1 * github-branch-source: 2.3.3 * github-api: 1.90  **Deployment mode**: Standalone war file  **Problem description**:  I'm pretty confident this used to work, but I haven't been able to play with my jenkins/gitbucket setup at home in a while. The problem I'm seeing is that jenkins is no longer picking up the master branch to do builds on. It's not selecting the branch to do work.  ```text Organization URL: https://gitbucket.light.kow.is/dkowis [Sun Apr 08 21:33:23 CDT 2018] Consulting GitHub Organization 21:33:23 Connecting to https://gitbucket.light.kow.is/api/v3 using dkowis/****** (David Kowis' Credentials) 21:33:23 Looking up repositories of myself dkowis Proposing monopolytracker Examining dkowis/monopolytracker    Checking branches...    Getting remote branches...      Checking branch master    Getting remote pull requests...       ‘Jenkinsfile’ not found     Does not meet criteria    1 branches were processed    Checking pull-requests...    0 pull requests were processed  Finished examining dkowis/monopolytracker ```  There's only one branch, and it's got a `Jenkinsfile`, so it should be selected to build, but it appears that it's somehow unable to find that Jenkinsfile, and so is not building anything at all.  It will pick up pull requests, and other branches and build those, but it doesn't seem to do it until after the scan happens. I'm not sure if the pull request payload changed, but I don't think that's it. There's no errors in the log from Jenkins.  ```text INFO: dkowis_organization #20180408.212946 organization scan action completed: SUCCESS in 1.4 sec Apr 08, 2018 9:30:22 PM org.jenkinsci.plugins.github.webhook.WebhookManager$1 run INFO: GitHub webhooks activated for job dkowis_organization with [] (events: [REPOSITORY]) Apr 08, 2018 9:30:22 PM org.jenkinsci.plugins.github_branch_source.GitHubOrgWebHook register WARNING: Failed to register GitHub Org hook to https://gitbucket.light.kow.is/dkowis (missing permissions?): {""message"":""Not Found""} Apr 08, 2018 9:30:30 PM jenkins.branch.OrganizationFolder$OrganizationScan run INFO: dkowis_organization #20180408.213022 organization scan action completed: SUCCESS in 7.8 sec ``` ","false","duplicate"
"Javascript slowdowns for large pull requests","## Issue **Impacted version**: 4.23.0  **Deployment mode**: Deployed standalone .war file  **Problem description**: Basically, with a large pull request, the page lags on javascript execution long enough to cause firefox to ask if I want to wait or kill the script.   It's pretty easy to recreate, just make a significant amount of changes. It'd be a good first step to at least only execute that javascript when the tab for viewing the source files is executed. Long term would be to implement some kind of perpetual loading, or efficient loading of those diffs so that it doesn't cause slowdowns trying to do it all at once.  Sample of size that causes a problem: https://gitbucket.light.kow.is/dkowis/monopolytracker/pull/1 is the actual pull request ![image](https://user-images.githubusercontent.com/28048/38473290-4235e5a2-3b53-11e8-929f-ccfe8625eb18.png)  ","false","improvement"
"sbt 1.1.3",,"true",
"Contents API seems unavailable in Version 4.23.0","## Issue **Impacted version**: 4.23.0 (possibly also 4.22.0 but can't test right now)  **Deployment mode**: war deployed in Tomcat 8.0.36 **Problem description**: - Access to /api/v3/repos/:owner/:repo/contents/:path results in a 404 error code - Unfortunately there are no exceptions visible in logging - Therefore build tools like Jenkins can't find e.g. Jenkinsfile  **Tomcat access log prior to 4.23.0 (should have been version 4.21.2)** `[29/Mar/2018:13:45:32 +0200] ""GET /api/v3/repos/:owner/:repo/branches HTTP/1.1"" 200 721 [29/Mar/2018:13:45:32 +0200] ""GET /api/v3/repos/:owner/:repo/contents/?ref=refs%2Fheads%2F:branch HTTP/1.1"" 200 3270`  **Tomcat access with 4.23.0** `[06/Apr/2018:11:20:02 +0200] ""GET /api/v3/repos/:owner/:repo/branches HTTP/1.1"" 200 721 [06/Apr/2018:11:20:02 +0200] ""GET /api/v3/repos/:owner/:repo/contents/?ref=refs%2Fheads%2F:branch HTTP/1.1"" 404 23`  Note that i replaced the exact owner, repository and branch with the respective placeholder _:owner_, _:repo_ and _:branch_   ","false","bug"
"Add X-Forwarded-Proto support for baseurl parsing","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct   close #1941","true","improvement"
"OIDC redirect URI does not respect x-forwarded-proto header","I am using GitBucket behind a SSL load balancer. I found an OpenID Connect redirect URI is `http` even if `x-forwarded-proto` header is set to `https`. It is strange that others such as login redirect are `https`.  We can fix a redirect URI to `https` by setting Base URL in the system settings for now, but it should be set by the `x-forwarded-proto` header.  ## Issue **Impacted version**: 4.23.0  **Deployment mode**:  ``` Web Browser ↓HTTPS AWS ALB (with ACM SSL certiticate) ↓HTTP nginx (Kubernetes Ingress Controller) ↓HTTP GitBucket (Kubernetes pod) ```  The nginx is configured to passthrough `x-forwarded-*` headers. ","false","improvement"
"Fix a bug that fails to get the list of files of the repository root","Caused by changing tail slash handling in GitBucket 4.23.0.  Reported in the Japanese gitter room: https://gitter.im/gitbucket/gitbucket_ja?at=5ac1e74f1130fe3d36919b4a","true","bug"
"Add extra mail address support.","This PR adds extra mail address support. If merged this PR, we can close #652.  User can fill ""Additional mail address"" fields. If user inputs mail address to empty field, new empty input field added automatically. And empty field automatically removed when user deletes mail address.  ![20180402-010417](https://user-images.githubusercontent.com/6997928/38175089-fbf538c2-3611-11e8-96c8-5975f470bbd7.png)  Additional mail addresses are used for resolving account from commit log. For example, this repository has two commits as:  1. root's primary mail address: root@localhost 2. root's additional mail address: root+1@localhost  ![20180402-010916](https://user-images.githubusercontent.com/6997928/38175136-c697c522-3612-11e8-9a28-26c02cfff805.png)  In history view, These two addresses are resolved to root account.  ![20180402-011142](https://user-images.githubusercontent.com/6997928/38175162-dc439a68-3612-11e8-9257-97c3022fbb68.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"add -Xfuture option. fix warnings","view bounds and procedure syntax are deprecated ","true",
"sbt 1.1.2",,"true",
"check scalafmt in travis","format test and sbt files","true",
"two or more e-mail address","GitBucket requires just one e-mail address.  Many companies sometimes change their name. In most case the e-mail address will change as well.  In such situation, user (or administrator) can change user's e-mail address. However, in such case GitBucket will not be able to resolve the old commit's name for that user.  I think it is better that:  - user has one primary mail address which used for notifications and lookup for git commit log - user can has more mail address which used only lookup for git commit log","false",
"Apply scalafmt","See #1904 and #1923","true","task"
"cleanup travis","### Before submitting a pull-request to GitBucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [X] verified that tests are passing - [X] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [X] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"better looking gitter badge","### Before submitting a pull-request to GitBucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [X] verified that tests are passing - [X] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [X] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Fix file upload bug in the release page","Fixes #1930","true",
"Can't attach release file when editing release","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.23.0  **Deployment mode**: Standalone  **Problem description**: - Create release without any attachment files - Edit release and attach a file(aaa.zip) - Push Update release  **result**: file(aaa.zip) is not attached. But `.gitbucket/repositories/root/repo/release/tag/XXXXXXXXX` exists.  **Expected result**: file(aaa.zip) attached in release  ","false","bug"
"503 Application Error at https://gitbucket.herokuapp.com","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ![image](https://user-images.githubusercontent.com/35812002/38124025-9f8c1dc8-3411-11e8-91f4-1e8353173cd5.png)  ","false",
"Fix that Tomcat deployed with GitBucket can not shutdown.","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  When GitBucket is deployed to Tomcat, Tomcat will not be able to shutdown. This seems to be caused by the JVM shutdown hook registered by Akka. This problem was solved by preventing registration of Akka's JVM shutdown hook.  In addition, `daemonic = on` is set for just in case.","true","improvement"
"Render by plugin even if file is binary","I wrote [gitbucket-html5media-plugin](https://github.com/kounoike/gitbucket-html5media-plugin). But sometimes it can't render media file.  This PR changes rendering logic. Current version checks isText first. When merged this PR, it checks isRenderable first.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Gitmesh integration","i just felt like to start this discussion . How is gitmesh going to marry gitbucket? is it as a plugin or as a merge to the upstream ? And is it not time to start testing the marriage.","false",
"Uploading file with api (File Crud)","I think it will be fine to add an api to upload files to a repository. This will enable the upload of job artifacts from builds and other integrations . Github actually supports all create update delete (crud) . I am thinking this should try and fix #1892 ","false","feature"
"Disable webhook in repositories of disabled user","Webhook still works after the repository owner is disabled and it causes a following exception:  ``` java.util.NoSuchElementException: None.get         at scala.None$.get(Option.scala:349)         at scala.None$.get(Option.scala:347)         at gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$35(RepositorySettingsController.scala:273) ``` Webhook (and all other repository features) should be disabled when user is disabled.","false","bug"
"Add scalafmt","This PR adds scalafmt with configs, let's discuss the configuration here. The reformatted code will be in [this](https://github.com/yaroot/gitbucket/commits/scalafmt-code) branch.  We should also have a plan for merging this with minimum impact on existing PRs, so I suggest that we do this after next release and require every PR remaining open to do a rebase.  refs #1904 ","true","task"
"How Lfs is enabled?","Git works fine. Use lfs push to receive the error:   `Git LFS: (0 of 80 files) 0 B / 19.03 MB batch response: Repository or object not found: http://myserver:8080/root/Test Check that it exists and that you have proper access to it error: failed to push some refs to 'http://myserver:8080/git/root/Test.git'`  .git/config: [lfs ""http://myserver:8080/git/root/Test.git/info/lfs""] 	access = basic 	locksverify = false   ","false","question"
"Support all of paths which end with slash","Covers #604","true","improvement"
"Cannot login or access repos after upgrade from 4.4. to 4.22.","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.22.0  **Deployment mode**: Standalone java -jar gitbucket.war  **Problem description**: I upgraded from gitbucket 4.4. to 4.22.0. The described is to replace the github.war, so I did it. After replacing I can't login and can't push repositories.  Log after login with loginform(credentials are correct): `INFO  g.core.service.AccountService - Failed to authenticate:`  Trying to access the repos url throws 404. At .gitbucket/data and .gitbucket/repositories all repos and user are present. ","false","waiting 4 user feedback"
"scala: 2.12.4 -> 2.12.5","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Remove unused action in AccountController","This action looks not to be used in anywhere. I added this action in a14394dd88f639bd0ca4dd734bf40fc11c961d2f but I don't remember why I added. 😢 ","true",
"Add plugin list API","I want this feature to use in plugin building farm.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Rename table RELEASE to RELEASE_TAG","`RELEASE` is a reserved word in MySQL. So the database exporting is fails with MySQL and we have to quote a table name with backquote at the database viewer. It's troublesome situation. To solve this situation, rename `RELEASE` table to `RELEASE_TAG`.  #1915 is not related.","true",
"Gitbucket crash after update from 4.20 to higher version","Cannot update from 4.20 version. In log I getting this error: ``` 2018-03-17 18:54:08.704:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@7a24eb3{/,file:///C:/Data/Gitbucket/tmp/webapp/,UNAVAILABLE}{file:/C:/Data/Gitbucket/ServerApp/gitbucket.war} java.sql.SQLException: (conn=19) Cannot add foreign key constraint 	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:198) 	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:110) 	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:228) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:216) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:150) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeUpdate(MariaDbPreparedStatementClient.java:183) 	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) 	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) 	at io.github.gitbucket.solidbase.migration.MigrationUtils.updateDatabase(MigrationUtils.java:20) 	at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:93) 	at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:54) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:45) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:29) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1(InitializeListener.scala:66) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1$adapted(InitializeListener.scala:57) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:57) 	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890) 	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532) 	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853) 	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344) 	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1514) 	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1476) 	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785) 	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261) 	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113) 	at org.eclipse.jetty.server.handler.StatisticsHandler.doStart(StatisticsHandler.java:252) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.server.Server.start(Server.java:449) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113) 	at org.eclipse.jetty.server.Server.doStart(Server.java:416) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at JettyLauncher.main(JettyLauncher.java:127) Caused by:  java.sql.SQLException: Cannot add foreign key constraint|Query is: ALTER TABLE repository_gitbucket_git.`RELEASE` ADD CONSTRAINT IDX_RELEASE_FK0 FOREIGN KEY (USER_NAME, REPOSITORY_NAME) REFERENCES repository_gitbucket_git.REPOSITORY (USER_NAME, REPOSITORY_NAME) 	at org.mariadb.jdbc.internal.util.LogQueryTool.exceptionWithQuery(LogQueryTool.java:153) 	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:253) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:209) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:150) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeUpdate(MariaDbPreparedStatementClient.java:183) 	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) 	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) 	at io.github.gitbucket.solidbase.migration.MigrationUtils.updateDatabase(MigrationUtils.java:20) 	at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:93) 	at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:54) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:45) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:29) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1(InitializeListener.scala:66) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1$adapted(InitializeListener.scala:57) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:57) 	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:890) 	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:532) 	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:853) 	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:344) 	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1514) 	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1476) 	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:785) 	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261) 	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113) 	at org.eclipse.jetty.server.handler.StatisticsHandler.doStart(StatisticsHandler.java:252) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.server.Server.start(Server.java:449) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113) 	at org.eclipse.jetty.server.Server.doStart(Server.java:416) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at JettyLauncher.main(JettyLauncher.java:127) ``` I use MySQL 5.7.21 How i can update Gitbucket?","false","question"
"Prevent parsing filename as Markdown in conflict message","Filenames shown in conflict message are parsed as Markdown.  ex. `module/__init__.py` is displayed like module/__init__.py I set filename in conflict message as code.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [ ] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct","true","bug"
"GitBucket should not omit closed milestones in issue list filter","## Issue **Impacted version**: 4.22.0  **Deployment mode**: war  The issue list (/rep/issuues) should not omit closed milestones filter.  Example: the milestone 1.0 is closed. ![gitbucket1](https://user-images.githubusercontent.com/5445929/37494034-f3f7856a-2885-11e8-9b26-52d12be16b58.png)  But I can't filter the milestone 1.0 in issue list because it doesn't show in milestones filter: ![gitbucket2](https://user-images.githubusercontent.com/5445929/37494062-0f4bbfac-2886-11e8-986e-fdea02cbbb5d.png) ","false","improvement"
"Unable to view ""Branches"" via link on repository fork","Version 4.22.0  I get the following error when clicking on the ""Branches"" link of a repository fork:   > Internal Server Error java.lang.NullPointerException org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:138) org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:875) org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:790) gitbucket.core.util.JGitUtil$.$anonfun$getBranches$2(JGitUtil.scala:952) scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:234) scala.collection.Iterator.foreach(Iterator.scala:929) scala.collection.Iterator.foreach$(Iterator.scala:929) scala.collection.AbstractIterator.foreach(Iterator.scala:1417) scala.collection.IterableLike.foreach(IterableLike.scala:71) scala.collection.IterableLike.foreach$(IterableLike.scala:70) scala.collection.AbstractIterable.foreach(Iterable.scala:54) scala.collection.TraversableLike.map(TraversableLike.scala:234) scala.collection.TraversableLike.map$(TraversableLike.scala:227) scala.collection.AbstractTraversable.map(Traversable.scala:104) gitbucket.core.util.JGitUtil$.$anonfun$getBranches$1(JGitUtil.scala:949) gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38) gitbucket.core.util.JGitUtil$.getBranches(JGitUtil.scala:945) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$89(RepositoryViewerController.scala:587) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:101) scala.Option.map(Option.scala:146) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98) gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93) gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93) gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:33) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$88(RepositoryViewerController.scala:581) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) scala.Option.flatMap(Option.scala:171) org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) scala.collection.immutable.Stream.flatMap(Stream.scala:490) org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:48) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:46) scala.collection.immutable.List.foreach(List.scala:389) scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:46) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:45) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220) org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122) org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505) org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169) org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103) org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:956) org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:436) org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1078) org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:625) org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2517) org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2506) java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) java.lang.Thread.run(Unknown Source)","false","waiting 4 user feedback"
"Cannot remove labels from Issues list","## Issue **Impacted version**: 4.22.0  **Deployment mode**: Tomcat using .war file  **Problem description**: - I'm trying to remove a specific label from several issues. I selected them using checkboxes, opened the Label dropdown button and pressed the corresponding label, then nothing happened. - The expected behavior is the label to be removed from the selected issues. ","false","improvement"
"mariadb-java-client: 2.2.2 -> 2.2.3","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"jgit: Updated to 4.11.0.201803080745-r","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Add labels to ApiIssue/ApiPullRequest","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Display commit message of tags in the release page","Closes #1898  In default, a commit message is displayed for each tags in the releases page:  ![releases_message_1](https://user-images.githubusercontent.com/1094760/37244829-e1b31b6a-24d1-11e8-9b2c-4ae4990cb747.png)  When creating a release, the commit message of the tag is displayed as the initial value of the release description.  ![releases_message_2](https://user-images.githubusercontent.com/1094760/37244831-f453c2ce-24d1-11e8-958f-5551a6ecba78.png) ","true","improvement"
"Any reason, why markdown editor is absent?","**Problem description**: For some users markdown editing without visual editor not so easy is there a reason for the lack?  where are few nice editors:  https://github.com/sparksuite/simplemde-markdown-editor https://pandao.github.io/editor.md/ https://rawgit.com/Grafikart/JS-Markdown-Editor/master/dist/demo.html","false","duplicate"
"allow to accept PR via fast-forward","a lot has been done in the area of choosing merge strategy when accepting a PR but still gitbucket lack the possibility to `merge fast-forward` from the UI.  It is an extremely used practice to ask people to rebase their PR but in order to keep a linear history, still with #898 (and above) corrected, a repository maintainer has to do the `merge fast-forward` by hand.","false","feature"
"Add scalafmt to improve code style consistency","The code style is fairly inconsistency, and start using a code formatter is the first step to improve it.  I have tested some scalafmt configurations in my [fork](https://github.com/yaroot/gitbucket/tree/scalafmt), this [commit](https://github.com/yaroot/gitbucket/commit/4a7e8ab51a919c25f3868b514929d1b39d740cde) has the reformatted code.  The goal of this ticket is to first discuss if a code formatter is fit for this project, and then to find a suitable configuration.","false","task"
"LDAP Authentication: Login works although I see this in the log: LDAP error: User does not exist.","## Issue **Impacted version**: 4.22.0 (and probably many older versions)  **Deployment mode**: standalone app behind an apache reverse proxy  **Problem description**: - I'm using LDAP authentication - I've added an additional filter recently:   `|(memberOf=cn=gitbucket,ou=group,dc=daemons-point,dc=com)` - I've tried to verify this filter: I removed my personal user from this LDAP group and tried to   login - Expected behavior: I'm unable to login - Observed behavior: I am able to login!   Within the log file, a message like this shows up:     ```    2018-03-07 14:18:43.978 [qtp321001045-18] INFO  g.core.service.AccountService - LDAP error: User does not exist.      ``` - I browsed the database tables and I think the ACCOUNT table and the password field are responsible for this behavior. Once I delete the password by setting the password column to '' for my user, everything works as expected! ","false","LDAP/SSO"
"Show banner to create a personal access token for OIDC users","This pull request adds a banner to create a personal access token for OpenID Connect (OIDC) users. It improves OIDC users easily understand how to use the `git` command line.  ### Screentshots  If the current user is logged in via OIDC and does not have any token, the banner is shown:  ![image](https://user-images.githubusercontent.com/321266/37201384-e35599dc-23ca-11e8-9e3e-46b7d247e564.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"plugin update failure on windows"," ## Issue **Impacted version**: 4.22  **Deployment mode**: executable war on windows  **Problem description**:  While performing some local trials to test the upgrade to 4.22, I faced the following bug, clicking 2 times on the button ""Reload plugins"" on the `/admin/plugins` page leads to the following error  ![image](https://user-images.githubusercontent.com/1119660/37079176-fb1f458a-21e1-11e8-8a48-a4da8a873f54.png)  ``` 08:31:31.591 [qtp1044036744-13] ERROR g.c.c.SystemSettingsController - Catch unhandled error in request: Request(POST //localhost:8080/admin/plugins/_reload)@50c33f7b java.io.IOException: Unable to delete file: D:\dev\gitbucket\agfa\gitbucket\data\plugins\.installed\gitbucket-notifications-plugin_2.12-1.2.0.jar         at org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:2400)         at org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1721)         at org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1617)         at gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistry.scala:260)         at gitbucket.core.plugin.PluginRegistry$.reload(PluginRegistry.scala:209)         at gitbucket.core.controller.SystemSettingsControllerBase.$anonfun$$init$$23(SystemSettingsController.scala:300)         at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280)         at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273)         at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272)         at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34)         at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34)         at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82)         at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81)         at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248)         at scala.Option.flatMap(Option.scala:171)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246)         at scala.collection.immutable.Stream.flatMap(Stream.scala:490)         at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245)         at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243)         at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)         at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59)         at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:48)         at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:46)         at scala.collection.immutable.List.foreach(List.scala:389)         at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35)         at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35)         at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44)         at gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:46)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:45)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)         at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207)         at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207)         at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629)         at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)         at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)         at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)         at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)         at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)         at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)         at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)         at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.eclipse.jetty.server.Server.handle(Server.java:561)         at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334)         at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)         at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)         at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104)         at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)         at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)         at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)         at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243)         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679)         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597)         at java.lang.Thread.run(Thread.java:748)``` ","false","bug"
"Git authentication by personal access tokens","This pull request allows Git authentication by personal access tokens. This fixes #1877.  ### Steps to verify this feature  1. Create a personal access token. 1. Perform `git clone` with username and the personal access token. 1. Delete the personal access token. 1. Perform `git clone`. It should fail.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Group view as administrator","Hi, As an administrator, should I be able to view all the Groups, projects, create project in any groups etc ?  Regards  Jonathan","false","question"
"Add tag message column to tag list","It would be nice to have a column with tag descriptions in tags page.","false","improvement"
"Keeping commit comments visible after rebase","**Impacted version**: 4.22.0 **Deployment mode**: standalone  Consider the following scenario:  A PR is created for a change. Then a long going conversation is started on the PR, mentioning specific lines in various commits. In the meanwhile, the master branch is updated by new commits from other PRs. When the discussion is over on the PR mentioned before, turns out that there are some conflicts and the PR cannot be merged with GitBucket's online interface. The developer then rebases the PR-branch on master, so it can be merged successfully.  The problem is that after this scenario the PR comments that were addressing specific lines in specific commits are not visible anymore (although on the PR listing page the comment counter still counts them).  In my opinion it would be helpful if these comments could be still read, since they may contain important change requests or discussion that are the integral history of the PR and the development process.  To indicate that the *reference* to the specific line is no longer valid, the comment could be faded out or may be collapsed somehow, or other visual indication could be used. ","false","improvement"
"Simple css change.","Keep everything nice and tidy in database viewer without having to scroll the whole page.  ### Before submitting a pull-request to GitBucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Add ssh_url to webhook payload","https://github.com/gitbucket/gitbucket/issues/1894","false","improvement,invalid"
"Create ability to define default Git URL (http/ssh)","## Issue **Impacted version**: 4.21.2  **Deployment mode**: standalone app (/var/lib/gitbucket/gitbucket.war)  **Problem description**: - I need the webhooks to send the ssh url not the http to our Jenkins server. I see no option to change the default, though. - It would be nice if in the system admin area or within the webhook configuration, you were able to define what link is presented by default.  See image for example:  ![image](https://user-images.githubusercontent.com/10331721/36856675-921ff79c-1d44-11e8-9baa-5c82c9e69ce1.png) ","false",
"update to Ace-1.3.1","This PR updates Ace editor to ver.1.3.1.  Many issues are solved, especially Japanese IME problem on Chrome 53~.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Too tight file size limitation in Release page (it's 3MB)","Release page accepts only 3MB by default. 3MB is reasonable limitation for attachment to issues, but it is almost impossible to distribute modern software binaries. (We know that gitbucket.war is bigger than 50MB)  https://github.com/gitbucket/gitbucket/blob/02a8540875abf8aea26163673cfdb48954f5d531/src/main/twirl/gitbucket/core/releases/form.scala.html#L63  https://github.com/gitbucket/gitbucket/blob/f64d4843f328cbbc8884d309cb6802146d521f7f/src/main/scala/gitbucket/core/util/FileUtil.scala#L82","false","improvement"
"mariadb-java-client: 2.2.1 -> 2.2.2","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Confirmation dialog for password changing","If something filled in he password field when account modification form is going to be submitted, a confirmation dialog is shown to conform you are sure that you want to change password. It works at the account maintenance form for administrators as well.  ![confirm-password-changing-1](https://user-images.githubusercontent.com/1094760/36583255-3edb5594-18b8-11e8-9566-8adfc939f30f.png)  ![confirm-password-changing-2](https://user-images.githubusercontent.com/1094760/36583262-45d26ed2-18b8-11e8-9f35-d962593498b5.png)  ","true","improvement"
"Set autocomplete=off to almost forms",,"true","improvement"
"Question: Is gitbucket compatibile with Discord Webhooks?","I got curious because gitbucket claims to be compatible with Github's API.  How can i set up [this](https://support.discordapp.com/hc/en-us/articles/228383668) using gitbucket?  Thanks a lot!","false","question"
"Running in raspbian","Hi! I'm a bit newbie in linux and i'm trying to use my raspberry 3 model b as a git server, and i'm trying to use gitbucket as server.  i currently trying to run the .war in a USB stick (mounted at /mnt/usb0) in a folder called `gitbucket`. The `start.sh` is the following:  ``` #!/bin/sh  cd /mnt/usb0/gitbucket/ while true; do java -jar gitbucket.war --port=15829 --gitbucket.home=/mnt/usb0/gitbucket/data/ --temp_dir=/mnt/usb0/gitbucket/temp &>/mnt/usb0/logs/gitbucket.log; sleep 1; done ```  And then i've added the entry on rc.local, based on [this tutorial](https://www.raspberrypi.org/documentation/linux/usage/rc-local.md):  `/mnt/usb0/gitbucket/start.sh &`  But when i reboot nothing appear in `<pi_ip>:15829`, it always gives me timeout.  What could i do to determine what its not working?","false",
"Updated jgit to 4.10.0.201712302008-r","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Fixed years within README.md (closes #1884)","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"README.md dates 2019?","## Issue **Impacted version**: N.A.  **Problem description**: README.md lists 2 dates in 2019... Suspect they need to be 2018","false",
"Add a option to enable/disable merge strategies","Closes #1859  ![2018-02-11 13 38 36](https://user-images.githubusercontent.com/1094760/36069624-eb5c5aac-0f30-11e8-9d47-4773a251877b.png)","true",
"sbt 1.1.1",,"true",
"Webinterface: Max filesize","## Issue **Impacted version**: 4.21.2 **Deployment mode**: with an http frontend (nginx)  Hi,  apparently, #1816 has not been fixed with commit [f64d4843f328cbbc8884d309cb6802146d521f7f](https://github.com/gitbucket/gitbucket/commit/f64d4843f328cbbc8884d309cb6802146d521f7f). Despite of starting gitbucket via ""java -jar gitbucket.war --max_file_size=600000000"", I still get the ""File is too big (XX.XXMiB). Max filesize: 10MiB."" error when trying to upload a file > 10MiB via the Webinterface.  Regards Michael","false","bug"
"Using keywords in commit do not fire Slack webhook events","## Issue **Impacted version**: 4.21.2  **Deployment mode**: Standalone app  **Problem description**: When using keywords in commits to close an issue (e.g. ""Close #42""), it successfully closes the issue in the tracker, but it does not fire the event for the Slack webhook.  **Steps to reproduce**: - Setup a Slack webhook with the issue tracker checked - Create an issue   - It should fire the issue created event - Create a commit, with a keyword to close the issue (e.g. ""Close #42)   - No event was fired","false",
"tag compare isn't work","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.21.2  **Deployment mode**: *Tomcat behind Apache*  **Problem description**: - *create two tag* - *compare tag ex.http://localhost/gitbucket/root/test/compare/v1.0.0...v1.1.0* - *view the next log*         org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:167)        --        org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(RevWalk.java:903)        org.eclipse.jgit.revwalk.RevCommit.parseHeaders(RevCommit.java:155)        org.eclipse.jgit.revwalk.RevWalk.markStart(RevWalk.java:293)        org.eclipse.jgit.api.LogCommand.add(LogCommand.java:339)        org.eclipse.jgit.api.LogCommand.add(LogCommand.java:198)        org.eclipse.jgit.api.LogCommand.addRange(LogCommand.java:255)        gitbucket.core.service.PullRequestService.$anonfun$getRequestCompareInfo$1(PullRequestService.scala:227)        gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:41)        gitbucket.core.service.PullRequestService.getRequestCompareInfo(PullRequestService.scala:223)        gitbucket.core.service.PullRequestService.getRequestCompareInfo$(PullRequestService.scala:218)        gitbucket.core.controller.PullRequestsController.getRequestCompareInfo(PullRequestsController.scala:24)        gitbucket.core.controller.PullRequestsControllerBase.$anonfun$$init$$81(PullRequestsController.scala:388)        gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:41)        gitbucket.core.controller.PullRequestsControllerBase.$anonfun$$init$$80(PullRequestsController.scala:370)        scala.Option.map(Option.scala:146)        gitbucket.core.controller.PullRequestsControllerBase.$anonfun$$init$$79(PullRequestsController.scala:365)        scala.Option.flatMap(Option.scala:171)        gitbucket.core.controller.PullRequestsControllerBase.$anonfun$$init$$74(PullRequestsController.scala:349)        gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:101)        scala.Option.map(Option.scala:146)        gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99)        gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12)        gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98)        gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93)        gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93)        gitbucket.core.controller.PullRequestsController.referrersOnly(PullRequestsController.scala:24)        gitbucket.core.controller.PullRequestsControllerBase.$anonfun$$init$$73(PullRequestsController.scala:343)        org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280)        org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274)        org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178)        org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164)        gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34)        org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273)        org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272)        gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34)        org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88)        org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178)        org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164)        gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34)        org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82)        org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81)        gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34)        org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248)        scala.Option.flatMap(Option.scala:171)        org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246)        scala.collection.immutable.Stream.flatMap(Stream.scala:490)        org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245)        org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243)        gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34)        org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169)        org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199)        org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181)        org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150)        gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)        org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)        org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)        gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)        org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)        org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)        gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)        org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)        org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)        gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)        org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123)        org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119)        gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)        org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)        org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)        gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)        org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)        org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)        gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)        org.scalatra.FlashMapSupport.handle(FlashMap.scala:145)        org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144)        gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)        org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41)        org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36)        gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59)        gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:48)        gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:46)        scala.collection.immutable.List.foreach(List.scala:389)        scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35)        scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35)        scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44)        gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:46)        org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)        org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)        gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:44)        org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)        org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)        org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172)        scala.Option.getOrElse(Option.scala:121)        org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172)        scala.Option.getOrElse(Option.scala:121)        org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172)        org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199)        org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181)        org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150)        gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)        org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)        org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)        gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)        org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)        org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)        gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)        org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)        org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)        gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)        org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123)        org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119)        gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)        org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)        org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)        gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)        org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)        org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)        gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)        org.scalatra.FlashMapSupport.handle(FlashMap.scala:145)        org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144)        gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)        org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41)        scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)        scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)        org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41)        org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36)        gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59)        org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)        org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)        gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39)        gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30)        com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207)        slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26)        com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207)        com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200)        com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207)        gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30)        org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)        org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)        org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)        org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)        org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)        org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)        org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)        org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)        org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)        org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)        org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)        org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)        org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)        org.apache.coyote.ajp.AjpProcessor.service(AjpProcessor.java:486)        org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)        org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)        org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)        org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)        java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)        java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)        org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)        java.lang.Thread.run(Thread.java:748) ","false","bug"
"Assign dummy password to newly created users","Closes #1877   Set's the passwords of users created through OpenId connect to a dummy value.  This allows the user to reset their passwords at their convenience.  This then let's them use ""git"" command line to authenticate push/pull requests.   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  ","true",
"Openid Connect users ca not authenticate using git CLI client.","## Issue **Impacted version**: 4.21.2 (but I suspect affects versions from 4.20 onwards)  **Deployment mode**: standalone app with an http frontend (apache httpd reverse proxy)  **Problem description**: - Users created used OpenId Connect are not able to authenticate using the ""git"" command line.   This means that users can't do `git clone` or `git clone`. - This is because users created using ""OpenId Connect"" do not get assigned a password in the   ""ACCOUNT"" database table (this is expected, as the authentication is done via OpenId).  This   is a problem because if the ""git"" command tries to authenticate with username and password,   gitbucket only checks the ""ACCOUNT"" database table. - A possible solution would be, that when the account is created in [AccountFederationService](https://github.com/gitbucket/gitbucket/blob/master/src/main/scala/gitbucket/core/service/AccountFederationService.scala#L37), line 37, instead of using an empty string for the password, a default   possible random password is assigned.  That way, when the user sees their own profile   they can change it to a known.  Then they can use this known password to authenticate. - Using the database viewer, I was able to set a password in the Account's table.  Doing so   allowed me to use the git CLI.","false","bug"
"Added a couple features to the database viewer.","* Auto query on selection * Choice of insert full query or just name based on auto checkbox * A ""select"" on child menu item in left list.  I am not sure this is the right layout you want but this is a general idea if one chooses to adjust for project goals.  ### Before submitting a pull-request to GitBucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Missing Credentials Provider when cloning private github repo","# Issue  **Impacted version**: 4.21.2  **Deployment mode**: Standalone  **Problem description**: Trying to clone a private repository from Github ends in a ""Failed to create repository"" exception:  ```` error Failed to create repository org.eclipse.jgit.api.errors.TransportException: https://github.com/me/myprivaterepo: Authentication is required but no CredentialsProvider has been registered ````  Are there any plans for providing such credentialProviders?  Best regards","false","feature"
"Some repos don't clone properly through the web","If you try to create a new repo with a url from the gui. You will notice that some repos are cloned properly but some don't .  For example try to create a rethinkdb repo with this url https://github.com/rethinkdb/rethinkdb on the 4.21.2 demo install .  It creates but not properly.","false","question"
"fix 1872.","java.io.File#getParent returns path with ""\"" instead of ""/"". so don't use this method.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"get-contents API returns Not Found","## Issue **Impacted version**: 4.21.2  **Deployment mode**: standalone  **OS**: Windows  **Problem description**: - create repository - create files `1/README.md` `1/2/README.md` - `curl http://localhost:8080/api/v3/repos/root/test/contents/1/README.md`     - returns contents as JSON. - `curl http://localhost:8080/api/v3/repos/root/test/contents/1/README.md`     - returns Not Found. But I expected returns contents as JSON.  I found root cause is directory separator problem.  at https://github.com/gitbucket/gitbucket/blob/952c916e33f89f356691504690f948ae26a67935/src/main/scala/gitbucket/core/controller/ApiController.scala#L148-L152  on Windows, `path.getParent` is `1\2`. but it isn't expected directory separator for JGit. So `getFileList(...).find()` returns `None`.","false","bug"
"File differences starting from multiple blank lines are strange","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ## Issue **Impacted version**: 4.21.2  **Deployment mode**: standalone/tomcat  **Problem description**:  **STEP 1**: commit the file `test.txt` which contains as below  ```   aaa bbb ccc ```  (starts two empty line)  **STEP2**: edit this file with:  ```   aaa BBB ccc ```  **STEP3**: push two commits  **STEP4**: show commit diff  ### result  ![20180131-031008](https://user-images.githubusercontent.com/6997928/35583561-aeff2d36-0635-11e8-8735-984cd4c53526.png)   ### expected result  diff shows `bbb` line with red background, `BBB` line with green background   ","false","bug"
"New database viewer concatenates table names","When clicking on table names, the expected behavior is that it replaces the old table name with the new one. Instead, they're concatenated infinitely, e.g.:  ~~~ SELECT * FROM ACCESS_TOKENACCOUNTACCOUNT_FEDERATIONACCOUNT_WEB_HOOK ~~~  GB 4.21.2","false","improvement"
"Release 4.21.2 won't start","## Issue **Impacted version**: 4.21.2  **Deployment mode**: Tomcat 7  **Problem description**: Trying to update from 4.20.0 to 4.21.2 to get new Release Page functionality, but application will not start.  I have GitBucket set as the root application and the war is extracted to a folder (d:\gitbucket_app).  I stopped the application, renamed the app folder and extracted the war to the the original folder and tried restarting the application. The relevant part of the Tomcat error log is attached. Going back to the original 4.20.0 app folder works without problem. [tomcat_error.log](https://github.com/gitbucket/gitbucket/files/1673048/tomcat_error.log)  ","false",
"We are unable  to see the wiki page https://github.com/gitbucket/gitbucket/wiki/Enabling-SSH-access-to-repository because location header is specified","## Issue  **Impacted version**: N/A  **Deployment mode**: N/A  **Problem description**: This is not a problem of GitBucket software, but may be caused by setting of wiki page.   We are unable  to see the wiki page https://github.com/gitbucket/gitbucket/wiki/Enabling-SSH-access-to-repository because location header is specified at that page.  If we visit the page, we are redirected to https://github.com/gitbucket/gitbucket/wiki .  Please see the following screen shot of Firefox's log of response header.  ![screenshot 2018-01-29 16 32 09](https://user-images.githubusercontent.com/3684590/35498812-2d463d98-0513-11e8-9ed4-ee3367fef16b.png) ","false","document"
"Refine the system settings page","![settings1](https://user-images.githubusercontent.com/1094760/35484373-733a4474-0492-11e8-8c1d-40404e4b75a5.png)  ![settings2](https://user-images.githubusercontent.com/1094760/35484378-7c66b334-0492-11e8-8d46-c1fdfac9e1b3.png)  Fixes #1860  ","true","improvement"
"Add new initialize option as `git commit -m ""..."" --allow-empty""`"," ![20180128-185751](https://user-images.githubusercontent.com/6997928/35480969-99ed20e4-045d-11e8-931c-173fec2062a8.png)   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Remove extra close div tag which introduced by #1829","This PR removes extra close div tag which introduced by #1829. It was breaking pull request page's tab pane markup.","true","bug"
"Save more actions as issue comments.","This PR closes #1855.  ![20180127-164409](https://user-images.githubusercontent.com/6997928/35469923-e165f706-0382-11e8-942c-61961454b411.png)   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"links to files in file finder are encoded in an unexpected manner","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.20.0, 4.21.1 (maybe earlier)  **Deployment mode**: Tomcat behind Nginx   **Problem description**: - in the _file_ _finder_ mode, links to the file blob pages are generated. - path separators in the links are encoded as `%2F`. - when trying to open the link with `%2F`, `400 Bad Request` occurs - the built-in jetty handles this okay, though ![incremental_search](https://user-images.githubusercontent.com/18342/35469572-b26dce54-037a-11e8-89e1-4d356907c236.png) ","false","bug"
"fix #1861","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Internal Server Error when viewing issues which owned by disabled user","## Issue  **Impacted version**: I checked with 4.18.0/Tomcat, 4.21.0/standalone  **Problem description**: - create user (test) - create repository (test/test) - create an issue - disable the user by administrator - view test/test, it shows Internal Server Error  ``` scala.None$.get(Option.scala:349) -- scala.None$.get(Option.scala:347) gitbucket.core.service.IssuesService.getAssignableUserNames(IssuesService.scala:474) gitbucket.core.service.IssuesService.getAssignableUserNames$(IssuesService.scala:472) gitbucket.core.controller.IssuesController.getAssignableUserNames(IssuesController.scala:15) gitbucket.core.controller.IssuesControllerBase.$anonfun$searchIssues$1(IssuesController.scala:392) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.controller.IssuesControllerBase.searchIssues(IssuesController.scala:382) gitbucket.core.controller.IssuesControllerBase.$anonfun$$init$$2(IssuesController.scala:84) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:101) scala.Option.map(Option.scala:146) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98) gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93) gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93) gitbucket.core.controller.IssuesController.referrersOnly(IssuesController.scala:15) gitbucket.core.controller.IssuesControllerBase.$anonfun$$init$$1(IssuesController.scala:79) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) scala.Option.flatMap(Option.scala:171) org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) scala.collection.immutable.Stream.flatMap(Stream.scala:490) org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:48) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:46) scala.collection.immutable.List.foreach(List.scala:389) scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:46) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:44) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:59) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629) org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) org.eclipse.jetty.server.Server.handle(Server.java:561) org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) java.lang.Thread.run(Thread.java:748) ```","false","bug"
"Clean up the system settings page","The system setting page has grown, and now it has too much configuration items in one page. They should be organized. For example, it would be nice if it""s isolated to pages or tabs by category.","false","improvement"
"Option to enable/disable merge strategies","Now GitBucket has three merge options as same as GitHub. It would be better if we can disable some of these options. In GitHub, we can disable them at the repository settings as below:  ![merge-options](https://user-images.githubusercontent.com/1094760/35454926-5e931c06-0313-11e8-8cae-ac57fecc3327.png) ","false","improvement"
"Internal Server Error when attempting to view snippets after upgrade to 4.21.0","## Issue **Impacted version**: 4.21.0  **Deployment mode**: standalone app  **Problem description**: I upgraded gitbucket from v4.20.0, which appeared to work normally including snippets, to v4.21.0 by replacing the 4.20.0 war file with the 4.21.0 one downloadable from github. After restarting, I am given an Internal Server Error when I attempt to view my snippets. The specific error is:  ```Internal Server Error java.lang.NoSuchMethodError: gitbucket.core.util.JGitUtil$.getFileList(Lorg/eclipse/jgit/api/Git;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/immutable/List;```  My expectation is to see my list of snippets.  The latest version of the gist plugin appears to be 4.11.0 at the time of this writing, which is what I have installed.","false","bug"
"Return 401 for non-browsers when authentication is failed","The current version of GitBucket redirects to the sign-in page when authentication is failed. By this behavior, if we try to download a zip file from a repository using CLI tool like curl and authentication is failed, CLI gets HTML of the sign-in page with 200.  It confuses us because request appears to be successful.  This pull request makes the authentication error doesn't redirect for non-browser clients and just returns 401 to them.","true","improvement"
"OpenID Connect authentication","This pull request allows OpenID Connect authentication. It contains following parts:  - Add the Sign in with OpenID Connect button. - Add following handlers.   - POST `/signin/oidc` (initiates an authentication)   - GET `/signin/oidc` (handles a redirect back from the IdP) - Add items to the system settings. - Add the table `ACCOUNT_FEDERATION` to associate a GitBucket user and an external identity.  Please let me know if you have any questions or suggestions.  ### How to use  I have tested with Google Identity Provider and Keycloak. I will add below to the Wiki if this PR is merged.  #### Google Identity Provider tutorial:  Setup Google Identity Provider:  1. Open https://console.developers.google.com/apis/credentials and create an OAuth client ID. 1. Application type: web application 1. Authorized redirect URIs: `http://localhost:8080/signin/oidc` 1. Check the client ID and client secret of the created client.  Setup GitBucket:  1. Open the system settings and turn on OpenID Connect. 1. Issuer: `https://accounts.google.com` 1. Client ID: See Google Identity Provider 1. Client secret: See Google Identity Provider 1. Expected signature algorithm: RS256  Note that any Google user can sign in to your GitBucket and make sure restricted people can access to your GitBucket.  See also https://developers.google.com/identity/protocols/OpenIDConnect.  #### Keycloak tutorial:  Setup Keycloak:  1. Create a new Client on your Keycloak. 1. Client ID: `gitbucket` 1. Client Protocol: openid-connect 1. Access Type: confidential 1. Valid Redirect URIs: `http://localhost:8080/signin/oidc`  Setup GitBucket:  1. Open the system settings and turn on OpenID Connect. 1. Issuer: `https://keycloak.example.com/auth/realms/YOUR_REALM` (replace `keycloak.example.com` with your host name and `YOUR_REALM` with your realm) 1. Client ID: `gitbucket` 1. Client secret: See Credetials tab in Keycloak 1. Expected signature algorithm: RS256  ### Future work  Followings are not implemented yet:  - Administrator can remove association. - Existent user can associate an external identity. (currently existent user cannot sign in with OIDC)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Add visibility of Labels/Priority/Milestone/Assignee changes in an issue","## Improvement **Impacted version**: 4.20.0  In Github, an issue documents who changes labels/priority/milestone/assignment.  Could this feature be added to make these changes visible?  Example representation in Github: ![image](https://user-images.githubusercontent.com/6574969/35289462-b48e54c6-0067-11e8-8b98-55ff39e5f0e0.png)  ","false","feature"
"Commit hook for Web editor required","I'm writing [heatmap plugin](https://github.com/kounoike/gitbucket-heatmap-plugin). It collects commit information with `git push`. But, it can't count commit which created by Web editor/uploader. I need such plugin hook.","false",
"Fix #1707.","This PR fixes #1707. `div.source-line-num` doesn't updated when collapsed/expanded.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Add support for new JRebel agent","This allows using [the new JRebel agent](https://zeroturnaround.com/software/jrebel/jrebel7-agent-upgrade-cli/). The legacy agent does not run on Java 9. This is tested on JRebel 7.1.4, Java 9 and macOS.  ``` sbt:gitbucket> jetty:quickstart [info] Generating .../gitbucket/target/scala-2.12/resource_managed/main/rebel.xml. [info] waiting for server to shut down... [info] starting server ... [success] Total time: 2 s, completed Jan 20, 2018, 2:54:59 PM sbt:gitbucket> 2018-01-20 14:55:03 JRebel: Directory '.../gitbucket/target/scala-2.12/classes' will be monitored for changes. 2018-01-20 14:55:03 JRebel: Directory '.../gitbucket/target/scala-2.12/test-classes' will be monitored for changes. 2018-01-20 14:55:03 JRebel: Directory '.../gitbucket/target/webapp' will be monitored for changes. 2018-01-20 14:55:04 JRebel: 2018-01-20 14:55:04 JRebel: A newer version '7.1.5' is available for download 2018-01-20 14:55:04 JRebel: from http://zeroturnaround.com/software/jrebel/download/ 2018-01-20 14:55:04 JRebel: 2018-01-20 14:55:04 JRebel: Contacting myJRebel server .. 14:55:05.598 [main] INFO  org.eclipse.jetty.util.log - Logging initialized @7164ms to org.eclipse.jetty.util.log.Slf4jLog 14:55:05.932 [main] INFO  org.eclipse.jetty.runner.Runner - Runner 14:55:07.034 [main] INFO  org.eclipse.jetty.server.Server - jetty-9.4.6.v20170531 14:55:07.766 [main] INFO  o.e.j.a.AnnotationConfiguration - Scanning elapsed time=4ms 2018-01-20 14:55:07 JRebel:  Starting logging to file: .../.jrebel/jrebel.log 2018-01-20 14:55:07 JRebel: 2018-01-20 14:55:07 JRebel:  ############################################################# 2018-01-20 14:55:07 JRebel: 2018-01-20 14:55:07 JRebel:  JRebel Agent 7.1.4 (201712200830) 2018-01-20 14:55:07 JRebel:  (c) Copyright ZeroTurnaround AS, Estonia, Tartu. 2018-01-20 14:55:07 JRebel: 2018-01-20 14:55:07 JRebel:  Over the last 2 days JRebel prevented 2018-01-20 14:55:07 JRebel:  at least 5 redeploys/restarts saving you about 0.2 hours. 2018-01-20 14:55:07 JRebel: 2018-01-20 14:55:07 JRebel:  Licensed to Hidetake Iwata (using myJRebel). 2018-01-20 14:55:07 JRebel: 2018-01-20 14:55:07 JRebel: 2018-01-20 14:55:07 JRebel:  ############################################################# 2018-01-20 14:55:07 JRebel: 14:55:10.397 [main] INFO  org.eclipse.jetty.server.session - DefaultSessionIdManager workerName=node0 14:55:10.397 [main] INFO  org.eclipse.jetty.server.session - No SessionScavenger set, using defaults 14:55:10.400 [main] INFO  org.eclipse.jetty.server.session - Scavenging every 600000ms ```  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","document,task"
"Add ""include group accounts"" checkbox in User management","A few days ago, I worked disabling about 10 users. In such work, the group accounts in the list are noisy for me.  In this PR, add ""Include group accounts"" checkbox in Manage Users page. It hides group accounts from the list.  ![20180120-130452](https://user-images.githubusercontent.com/6997928/35179700-a42bc078-fde2-11e7-8084-b410137f6af3.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Add ability for branch restrictions",,"false","duplicate"
"add 'state' attribute to ApiPullRequest object","fixes #1844  ### Before submitting a pull-request to GitBucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [X] verified that tests are passing - [X] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [X] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"NPE calling /api/v3/repos/USER/REPO/git/refs/tags","## Issue **Impacted version**: LATEST master 4.21.0 HEAD == 2ee70dc1  **Deployment mode**: standalone app with an http frontend nginx  **Problem description**: Having a project __WITHOUT__ any git tag & pursuing trials & investigations using Jenkins & jgitver, I tried to build automatically tags _(that I would have created after)_ from Jenkins Multi Branch project. I thus added the 'Discover tags' strategy to my job in Jenkins;  ![image](https://user-images.githubusercontent.com/1119660/35142832-db17342a-fcff-11e7-9d4b-74c501d59d0d.png)  This lead to a call to http//gitbucket.my.pc/api/v3/repos/john/demo-ci/git/refs/tags (a demo/test repo) that ended into the following NPE:   ``` 09:16:10.432 [qtp1044036744-40] ERROR g.core.controller.ApiController - Catch unhandled error in request: Request(GET //gitbucket.my.pc/api/v3/repos/john/demo-ci/git/refs/tags)@5cd5451d java.lang.NullPointerException: null         at gitbucket.core.controller.ApiControllerBase.$anonfun$$init$$37(ApiController.scala:211)         at gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38)         at gitbucket.core.controller.ApiControllerBase.$anonfun$$init$$36(ApiController.scala:208)         at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:101)         at scala.Option.map(Option.scala:146)         at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99)         at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12)         at gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93)         at gitbucket.core.controller.ApiController.referrersOnly(ApiController.scala:22)         at gitbucket.core.controller.ApiControllerBase.$anonfun$$init$$35(ApiController.scala:206)         at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280)         at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273)         at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272)         at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33)         at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33)         at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82)         at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81)         at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248)         at scala.Option.flatMap(Option.scala:171)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246)         at scala.collection.immutable.Stream.flatMap(Stream.scala:490)         at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245)         at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243)         at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:58)         at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:48)         at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:46)         at scala.collection.immutable.List.foreach(List.scala:389)         at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35)         at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35)         at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44)         at gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:46)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:44)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:58)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at gitbucket.core.servlet.ApiAuthenticationFilter.doFilter(ApiAuthenticationFilter.scala:29)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207)         at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207)         at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629)         at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)         at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)         at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)         at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)         at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)         at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)         at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)         at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.eclipse.jetty.server.Server.handle(Server.java:561)         at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334)         at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)         at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)         at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104)         at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)         at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)         at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)         at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)         at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243)         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679)         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597)         at java.lang.Thread.run(Thread.java:748) ```","false","bug"
"Jenkins GitHub Plugin v1.29.0 breaks web hooks with GitBucket","**Impacted version**: 4.18.0  **Deployment mode**: Tomcat  **Problem description**: Have a successful connection between my Jenkins 2.101 server and my GitBucket 4.18.0 server (sorry for not getting latest version of GB yet). After upgrading some Jenkins plugins, one was the [GitHub Plugin](https://plugins.jenkins.io/github) from v1.28.1 to v1.29.0.   After the plugin upgrade, my web hooks would fail and running a test would give a message like ""Problem accessing /github-webhook/ Signature was expected, but not provided.""  This seems to correspond to [GitHub Plug v1.29.0](https://github.com/jenkinsci/github-plugin/releases/tag/v1.29.0) release notes which point to a pull request to [Require a X-Hub-Signature header when receiving a hook payload](https://github.com/jenkinsci/github-plugin/pull/188).   I hope this research is helpful.   In the meantime, downgrading to v1.28.1 fixes the incompatibility.   Sorry for overlooking if this was already addressed in GB 4.19 or 4.20. ","false",
"GitBucket displays ""Not Found"" error when copying existing repo","## Issue **Impacted version**: 4.20.0  **Deployment mode**: gitbucket war running under Tomcat 7.0.76 on CentOS 7.4. Nginx reverse proxy is also used.  **Problem description**: When trying to create a new repo by copying an existing one, for a specific repo it shows a ""Not Found"" error, like this:  https://imgur.com/a/K6bjP  Strangely enough, no error in the Tomcat logs, and it even seems to create the repo nevertheless. No apparent error anywhere, besides this initial one. We already copied another 5 repos from the same host this way without any warning, but this one specific repo errors out first. Any ideas how to track this down?","false","bug"
"SELinux policy module, deploy script and instructions","To make it easier for EL Tomcat users to deploy GitBucket with SELinux enabled.","true","document"
"Jenkins Github Organization plugin difficulties","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ## Issue **Impacted version**: 4.20.0  **Deployment mode**: Running as a standalone application  **Problem description**:  I started setting up gitbucket to have a personal ""github"" to use the Github branch source plugin and Blue Ocean on jenkins. It is able to scan the organization, and that seems to be about as far as it goes.  I'm going to enumerate the problems I had here, and we can talk about how to fix them:  1. Jenkins wants to use a personal access token to authenticate, but gitbucket needs user/password. This is pretty minor, but it'd be nice to be consistent. 1. Jenkins doesn't seem to do anything when the push events happen. I'm not really sure what's going on here, because there were no particular errors, just jenkins didn't build the project as I expected... There's not a history of payloads sent in gitbucket, so I don't know if something went wrong there, or what payload was sent. 1. Jenkins wants to manage webhooks for the organization and the repo. Without having scopes on the access tokens, I guess the user just has to be a manager of the organization. I think the api is not implemented on gitbucket to do this. That might be pretty easy.  Sadly, I'm not actually able to use gitbucket with jenkins to automatically build all my things for me :( Maybe we can easily write the code to do this, but I'm not yet familiar with the code base. Any feedback or ""look here"" type info would be good.  I'm really impressed with Gitbucket, and I hope we can get this working seamlessly!  EDIT: Updated to reference the plugin I'm using correctly.","false","bug"
"Implement GitHub Pull Request API","> _Edit by McFoggy_ ; final need is: > > I would like gitbucket to implement GitHub Pull Request API _(included creation)_ so that from an external process (jenkins for exemple) we can fire the creation of a Pull-Request. > > see messages in thread for clarification ------  ### Before submitting an issue to GitBucket I have first: ## Issue **Impacted version**: 4.18.0  **Deployment mode**: *standalone*  **Problem description**: I have a forked repository and I want to trigger a pull-request using jenkins when a given branch on forked  #repo is pulled. I tried already with ""Jenkins-GitHub-pull-request-builder-plugin"" but I think I'm missing something.  This is how I'm doing:  1. Create repo: /Team/duck-project.git 2. Create a fork at: /Rob/duck-project.git 3. Create a jenkins bot user with privileges. 4. Setup the Hooks  /github-webhook/ and ghprbhook/   for repo /Rob/duck-project.git   5. Setup jenkins those plugins and required credentials. 6. Create a job with  ""GitHub Pull Request Builder"" and ""GitHub hook trigger for GITScm polling""  (awaiting for pushes on branch master) 7. Then I made some commits and push over branch master for repo /Rob/duck-project.git 8. I see job runs, but does not trigger a pull-request.  Is there any way I can trigger a pull-request from jenkins or from a curl batch?  I've tried using /api/v3 but, it seems there is not POST method enabled.  Thanks in advance.    ","false","APIv3,improvement"
"Internal Server Error when delete a repository","**Impacted version**: 4.20.0  **Deployment mode**: standalone app (Windows 10 64bit) ``` java version ""1.8.0_151"" Java(TM) SE Runtime Environment (build 1.8.0_151-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode) ```  **Problem description**: GitBucket reports Internal Server Error when try to delete a repository ![error](https://user-images.githubusercontent.com/8023087/34986362-a6031cf6-fafa-11e7-8b53-6c785e077623.jpg)  **Reproduction steps**  1. execute gitbucket ```shell java -jar gitbucket.war ``` 2. create a new repository (named 'test') 3. clone the repository ```shell git clone http://localhost:8080/root/test.git cd test ``` 4. push a new file ```shell echo hello > hello.txt git add . git commit -m ""init"" git push origin master ``` 5. try to delete the repo `GitBucket > Settings > Dander Zone > ""Delete This Repository"" button`  6. You'll see the error message","false","duplicate"
"Webhook over SSL not sendig ""Host"" header","## Issue **Impacted version**: 4.19.3  **Deployment mode**: WAR depolyed in Tomcat, behind nginx reverse proxy  **Problem description**: I am trying to set up a Push webhook to trigger a Jenkins job. Jenkins is encrypted and behind an nginx reverse proxy. Nginx has a number of vhosts configured, all with different SSL certificates. When testing the Gitbucket webhook I get a `ERRORclass javax.net.ssl.SSLPeerUnverifiedException Certificate for <iljenkins> doesn't match any of the subject alternative names: [ilkeycloak]`. The reason for this error is to my knowledge that the webhook is not sent with an unencryptet ""Host"" header which causes Nginx to send the SSL certificate of the first vhost (in my case ""ilkeycloak"") and not explicitly the one I need (in my case ""iljenkins""; webhook url `https://iljenkins/jenkins/gitbucket-webhook/`). The same webhook over HTTP worked. And my guess about the missing ""Host"" header comes from analyzing the network traffic with tcpdump and ssldump.  Can anyone confirm this? Thanks","false",
"404 accessing repo with trailing slash and nginx reverse proxy","Using the nginx config provided in the Wiki article for a reverse proxy, I'm getting 404 errors when accessing a repo and using a trailing slash on the url. This is currently breaking my jenkins integration.  Browsing to: `https://gitbucket.tld/Group/Repo` works just fine as expected.  Browsing to: `https://gitbucket.tld/Group/Repo/` returns a 404 from nginx.  Given the absence of logs from gitbucket during this, I'm assuming it's an nginx config issue. However, I'm using the config provided in the wiki write up for it.  This is on the latest version of Gitbucket. ","false",
"nginx reverse proxy with lfs support","Hi,  I have installed gitbucket with default port 80 (http://exemple.org) and I want to use nginx reverse proxy to access it with http://different.domain.com/repository  All nginx settings redirect me to http://exemple.org when i enter to http://different.domain.com/repository Can you write me correct nginx config settings And tel me - i must set default gitbucket url to exemple.org or must change it to different.domain.com/repository I use LFS in all my repos Thx ","false",
"Rebase-Merge reverts previous commit/merge","## Issue **Impacted version**: 4.20.0  **Deployment mode**: deployed as standalone jar  **Problem description**: - 'Confirm merge' with 'Rebase' reverts a previous commit when target review branch is out-of-date with the base branch - The example of operation for reproducing this problem: 1. `$ git checkout -b branch_a` 1. modify files 1. `$ git push origin branch_a` 1. update base branch such as directly commit-push to base branch, merge through gitbucket, ...etc 1. merge branch_a by 'Confirm merge' with 'Rebase' ===> previous update is removed","false","bug"
"Fork for a repository with no permissions ends up in invalid state","## Issue **Impacted version**: 4.19.3  **Deployment mode**: deployed as standalone jar  **Problem description**: - try to fork a repo where you are not a collaborator - repo forking throws internal server error - fork is visible in the repo list but clicking it gives and internal server error - admin trying to access the visible fork yields a stack trace starting from `org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: /home/`.. ","false","waiting 4 user feedback"
"Database viewer UI","In database viewer provided by #1825, when clicking TABLE_NAME, it adds `SELECT * FROM TABLE_NAME`. even if already some SQL in textbox.  ![20180107-144443](https://user-images.githubusercontent.com/6997928/34646983-5d584f64-f3b9-11e7-8d1b-ce260dea43bf.png)  It's not useful. So I think it is better behavior:  - Add ""Clear"" button - and/or replace all SQL when clicked TABLE_NAME","false","improvement"
"Database Editor","Sometimes I used H2 console for editing some database fields. By #1825, H2 concole is removed new database viewer is provided. But it doesn't provide editing operation.  I want to   - add editing operation to new database viewer  or  - provide H2 console again ","false","improvement"
"Links submodule to the online repository viewer","Links submodule to the online repository viewer instead of the git repository itself.  Supports following services:  - GitBucket (need to set the base url at the system settings) - GitHub - BitBucket - GitLab.com  If a repository url doesn't match above services, generate a link to the git repository as before.  Fixes #1832 ","true","improvement"
"sbt 1.1.0",,"true",
"Clicking on Submodule requires additional login","## Issue **Impacted version**: 4.20.0  **Deployment mode**: Both as Standalone and under Tomcat 7  **Problem description**: When clicking on a submodule and the System Setting **Anonymous Access** is set to Deny, you are always asked to log in again even though the link is opening in GitBucket in the same browser where you are already logged in. This is quite frustrating:  ![image](https://user-images.githubusercontent.com/20796832/34569178-42e36c70-f168-11e7-87a6-2216a6401681.png)  Cancelling results in an Authorization error:  ![image](https://user-images.githubusercontent.com/20796832/34569337-c1e9e92c-f168-11e7-9f6a-a8f857c46b4b.png)  Is it not possible to somehow use the original session when clicking on a submodule?  If you do log in again for this submodule, then the authentication in the new session is retained and you no longer have to log in again when clicking on this submodule in other projects. ","false","improvement"
"Default Pull Request Strategy Setting","### Feature request:  The new squash and rebase strategies for merging PRs are really nice! Now it would be very nice to be able to change the default strategy through either system-wide or repository settings (or both).","false","feature"
"use addSbtCoursier","- https://github.com/coursier/coursier/blob/v1.0.0/sbt-coursier/src/main/scala/coursier/CoursierPlugin.scala#L57-L59 - https://github.com/coursier/coursier/commit/a743f1183e6412c205b17d52f7bf1d6e3cd09161 ","true",
"Change Close/Reopen button to dropdown-selectable button.","Now, GitBucket (and GitHub) shows ""Close"" or ""Reopen"" button at left side on ""Comment"" button. Some users confused this button as ""Cancel"".  In this PR, change this button to dropdown menu. (I use dropup by scroll reason)  ![20180104-004640 png](https://user-images.githubusercontent.com/6997928/34527721-d6ffe71e-f0e9-11e7-8df1-2aaf93d36b3b.png)  ![20180104-004645 png](https://user-images.githubusercontent.com/6997928/34527731-dc6ab68e-f0e9-11e7-9bf8-ce5722a0a546.png)   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Branches list not showing open pull request","It seems to be because the existing Pull Request destination is not the Default Branch, but a Feature Branch.  Although there is an open Pull Request on a branch it does not show up when seeing the list of branches, it just shows the ""New pull request"" button.","false","improvement"
"每次都得手动运行吗?","1. 我下载了v4.2gitbucket.war到centos6.5服务器上;并且在mac上用""终端""java -var gitbucket.war运行起来了;但问题如下: 2. 我关闭终端时,gitbucket跟着关闭; 3. 我每次都必须手动运行终端;并运行java -var gitbucket.war才可以跑起来; #### 问:我能否不这么麻烦;让gitbucket一直运行在linux服务器上;我随时可以通过xxx.xxx.xxx.xxx:8080访问;","false","question"
"Deleting repository not case sensitive","# Issue **Impacted version**: 4.18.0 + 4.20.0  **Deployment mode**: standalone app  ## Problem description: When you have two different repositories, for example ""test"" and ""Test"", and you delete the repo ""test"", intern both are deleted from the database/filesystem but the ""Test"" repository still exists in the list of repos. </br> At both situations, when deleting the repository ""test"" and when taking a look after that at the ""Test"" repository, the following error message occours:  ### Error message: ```` error Internal Server Error repository not found: <pathToGitbucket>\home\repositories\<group>\Test.git   org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:582) -- org.eclipse.jgit.api.Git.open(Git.java:117) org.eclipse.jgit.api.Git.open(Git.java:99) gitbucket.core.util.JGitUtil$.getRepositoryInfo(JGitUtil.scala:225) gitbucket.core.service.RepositoryService.$anonfun$getRepository$2(RepositoryService.scala:227) scala.Option.map(Option.scala:146) gitbucket.core.service.RepositoryService.getRepository(RepositoryService.scala:220) gitbucket.core.service.RepositoryService.getRepository$(RepositoryService.scala:219) gitbucket.core.controller.RepositoryViewerController.getRepository(RepositoryViewerController.scala:32) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98) gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93) gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93) gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$3(RepositoryViewerController.scala:155) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285) ... ````   ### Conclusion It seems that *deleting* a repository is *not* case sensitive.","false",
"Replace H2 console","GitBucket includes H2 console as a database viewer. However, it has some problems like following:  - User interface isn't fit with GitBucket - We have to fill connection information every time - We can't add new features  So we will replace it with GitBucket native feature. I'm working on `features/dbviewer` branch and this is a current screenshot:  ![2017-12-29 18 04 49](https://user-images.githubusercontent.com/1094760/34441144-399668a8-ecfd-11e7-9e05-fb9ab428a2b2.png) ","true","feature"
"Treat LFS files as large binaries in the web viewer","Currently in master, if you point the web ui to a file stored with LFS, it will dump the pointer file instead of the actual content (except for images). This PR makes the viewer treats LFS files as binaries, allow users to download them without seeing the gibberish text (does not affect images).  Another solution would be treating the LFS file the same as normal file, show the content if it's a text file.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Migration Question","I have an instance of GB and could use a bit of help with:  - Want to move ONLY the repos and the user/group configs to a brand new GB instance on another machine.   - IOW, do not want to copy the entire GB dir tree just the user, groups, admin perms, and repos.  In essence we want to start with a completely clean slate GB instance with no gists or other remnants from the old install.  Is this possible?  TIA,","false","question"
"Upgraded to mariadb-java-client-2.2.1","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"jgit-4.9.2.201712150930-r","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Installing an not existing plugin uninstalls all others","# Issue Impacted version: 4.20 Deployment mode: native (war executed with java)  ## Problem description: Installing the pages plugin **without** having the source jar in your pluginsfolder causes an error which additionally **removes all other plugins**(sources). Due to that that all sources are removed to you also cant reinstall them without fetching the sources again.  Happened during **upgrade** from gitbucket version **4.18** to **4.20**. Used existing installation for testing.  ## Error message: Internal Server Error java.io.IOException: Unable to delete file:  ...\Gitbucket\source\plugins\.installed\gitbucket-pages-plugin_2.12-1.5.0.jar  org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:2381) org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1679) org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1575) gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistry.scala:260) gitbucket.core.plugin.PluginRegistry$.install(PluginRegistry.scala:239) gitbucket.core.controller.SystemSettingsControllerBase.$anonfun$$init$$20(SystemSettingsController.scala:252) scala.Option.foreach(Option.scala:257) gitbucket.core.controller.SystemSettingsControllerBase.$anonfun$$init$$19(SystemSettingsController.scala:246)  ","false","waiting 4 user feedback"
"Update Dependencies and Plugins","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate  This updates all dependencies and plugins **except** blocking-slick32, Jetty and Scalatra.  It includes a fix for an api breaking change in Cache2K Final ","true",
"Internal Server Error when pressing ""Pull requests"" or ""Issues"" button","## Issue **Impacted version**: 4.18.0  **Deployment mode**: standalone app  **Problem description**: When I first install the gitbucket both buttons didn't have any issues.  I had created new pulls and issues without any problem and I could press the buttons and get list of them. When I started I had few repos but know I have about 190 repositories. Since yesterday when pressing the ""Pull requests"" or ""Issues"" button I get an Internal Server Error  Below is the results from UI ``` slick.ast.TypeUtil$$colon$at$.unapply(Type.scala:325)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:311)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$expr$8$adapted(JdbcStatementBuilderComponent.scala:381)  slick.util.SQLBuilder.sep(SQLBuilder.scala:31)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:381)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildWhereClause$2(JdbcStatementBuilderComponent.scala:214)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildWhereClause$2$adapted(JdbcStatementBuilderComponent.scala:214)  scala.Option.foreach(Option.scala:257)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildWhereClause$1(JdbcStatementBuilderComponent.scala:214)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildWhereClause(JdbcStatementBuilderComponent.scala:214)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:145)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:275)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3$adapted(JdbcStatementBuilderComponent.scala:209)  slick.util.SQLBuilder.$anonfun$sep$1(SQLBuilder.scala:23)  slick.util.SQLBuilder.$anonfun$sep$1$adapted(SQLBuilder.scala:21)  scala.collection.immutable.List.foreach(List.scala:389)  slick.util.SQLBuilder.sep(SQLBuilder.scala:21)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$1(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFromClause(JdbcStatementBuilderComponent.scala:205)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:143)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:275)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3$adapted(JdbcStatementBuilderComponent.scala:209)  slick.util.SQLBuilder.$anonfun$sep$1(SQLBuilder.scala:23)  slick.util.SQLBuilder.$anonfun$sep$1$adapted(SQLBuilder.scala:21)  scala.collection.immutable.List.foreach(List.scala:389)  slick.util.SQLBuilder.sep(SQLBuilder.scala:21)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$1(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFromClause(JdbcStatementBuilderComponent.scala:205)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:143)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:275)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildJoin(JdbcStatementBuilderComponent.scala:281)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:273)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3$adapted(JdbcStatementBuilderComponent.scala:209)  slick.util.SQLBuilder.$anonfun$sep$1(SQLBuilder.scala:23)  slick.util.SQLBuilder.$anonfun$sep$1$adapted(SQLBuilder.scala:21)  scala.collection.immutable.List.foreach(List.scala:389)  slick.util.SQLBuilder.sep(SQLBuilder.scala:21)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$1(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFromClause(JdbcStatementBuilderComponent.scala:205)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:143)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:275)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildJoin(JdbcStatementBuilderComponent.scala:281)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:273)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3$adapted(JdbcStatementBuilderComponent.scala:209)  slick.util.SQLBuilder.$anonfun$sep$1(SQLBuilder.scala:23)  slick.util.SQLBuilder.$anonfun$sep$1$adapted(SQLBuilder.scala:21)  scala.collection.immutable.List.foreach(List.scala:389)  slick.util.SQLBuilder.sep(SQLBuilder.scala:21)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$1(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFromClause(JdbcStatementBuilderComponent.scala:205)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:143)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:275)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildJoin(JdbcStatementBuilderComponent.scala:281)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:273)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3$adapted(JdbcStatementBuilderComponent.scala:209)  slick.util.SQLBuilder.$anonfun$sep$1(SQLBuilder.scala:23)  slick.util.SQLBuilder.$anonfun$sep$1$adapted(SQLBuilder.scala:21)  scala.collection.immutable.List.foreach(List.scala:389)  slick.util.SQLBuilder.sep(SQLBuilder.scala:21)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$1(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFromClause(JdbcStatementBuilderComponent.scala:205)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:143)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:275)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildJoin(JdbcStatementBuilderComponent.scala:281)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFrom$1(JdbcStatementBuilderComponent.scala:273)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFrom(JdbcStatementBuilderComponent.scala:266)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$3$adapted(JdbcStatementBuilderComponent.scala:209)  slick.util.SQLBuilder.$anonfun$sep$1(SQLBuilder.scala:23)  slick.util.SQLBuilder.$anonfun$sep$1$adapted(SQLBuilder.scala:21)  scala.collection.immutable.List.foreach(List.scala:389)  slick.util.SQLBuilder.sep(SQLBuilder.scala:21)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.$anonfun$buildFromClause$1(JdbcStatementBuilderComponent.scala:209)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.building(JdbcStatementBuilderComponent.scala:123)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildFromClause(JdbcStatementBuilderComponent.scala:205)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildComprehension(JdbcStatementBuilderComponent.scala:143)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:423)  slick.jdbc.H2Profile$QueryBuilder.expr(H2Profile.scala:99)  slick.jdbc.JdbcStatementBuilderComponent$QueryBuilder.buildSelect(JdbcStatementBuilderComponent.scala:116)  slick.jdbc.JdbcProfile.$anonfun$queryCompiler$1(JdbcProfile.scala:30)  slick.jdbc.JdbcMappingCompilerComponent$JdbcCodeGen.compileServerSideAndMapping(JdbcMappingCompilerComponent.scala:57)  slick.compiler.CodeGen.$anonfun$apply$3(CodeGen.scala:22)  slick.ast.ClientSideOp$.mapServerSide(ClientSideOp.scala:20)  slick.compiler.CodeGen.$anonfun$apply$2(CodeGen.scala:20)  slick.ast.ClientSideOp$.mapResultSetMapping(ClientSideOp.scala:23)  slick.compiler.CodeGen.apply(CodeGen.scala:16)  slick.compiler.CodeGen.$anonfun$apply$1(CodeGen.scala:13)  slick.compiler.CompilerState.map(QueryCompiler.scala:230)  slick.compiler.CodeGen.apply(CodeGen.scala:13)  slick.compiler.QueryCompiler.$anonfun$runPhase$1(QueryCompiler.scala:79)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  slick.ast.SymbolNamer.use(Symbol.scala:111)  slick.compiler.QueryCompiler.runPhase(QueryCompiler.scala:78)  slick.compiler.QueryCompiler.$anonfun$runPhases$9(QueryCompiler.scala:75)  scala.collection.TraversableOnce.$anonfun$foldLeft$1(TraversableOnce.scala:157)  scala.collection.TraversableOnce.$anonfun$foldLeft$1$adapted(TraversableOnce.scala:157)  scala.collection.Iterator.foreach(Iterator.scala:929)  scala.collection.Iterator.foreach$(Iterator.scala:929)  scala.collection.AbstractIterator.foreach(Iterator.scala:1417)  scala.collection.TraversableOnce.foldLeft(TraversableOnce.scala:157)  scala.collection.TraversableOnce.foldLeft$(TraversableOnce.scala:155)  scala.collection.AbstractIterator.foldLeft(Iterator.scala:1417)  slick.compiler.QueryCompiler.runPhases(QueryCompiler.scala:75)  slick.compiler.QueryCompiler.run(QueryCompiler.scala:53)  slick.compiler.QueryCompiler.run(QueryCompiler.scala:47)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI.queryToQueryInvoker(BlockingProfile.scala:90)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI.queryToQueryInvoker$(BlockingProfile.scala:90)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$$anon$1.queryToQueryInvoker(BlockingProfile.scala:19)  gitbucket.core.service.IssuesService.searchIssue(IssuesService.scala:171)  gitbucket.core.service.IssuesService.searchIssue$(IssuesService.scala:162)  gitbucket.core.controller.DashboardController.searchIssue(DashboardController.scala:9)  gitbucket.core.controller.DashboardControllerBase.searchPullRequests(DashboardController.scala:93)  gitbucket.core.controller.DashboardControllerBase.$anonfun$$init$$10(DashboardController.scala:34)  gitbucket.core.util.UsersAuthenticator.authenticate(Authenticator.scala:65)  gitbucket.core.util.UsersAuthenticator.usersOnly(Authenticator.scala:59)  gitbucket.core.util.UsersAuthenticator.usersOnly$(Authenticator.scala:59)  gitbucket.core.controller.DashboardController.usersOnly(DashboardController.scala:9)  gitbucket.core.controller.DashboardControllerBase.$anonfun$$init$$9(DashboardController.scala:34)  org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285)  org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279)  org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189)  org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175)  gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34)  org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278)  org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277)  gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34)  org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88)  org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189)  org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175)  gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34)  org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82)  org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81)  gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34)  org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253)  scala.Option.flatMap(Option.scala:171)  org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251)  scala.collection.immutable.Stream.flatMap(Stream.scala:490)  org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250)  org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248)  gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34)  org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)  org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)  org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)  gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)  org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)  org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)  gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)  org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)  org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)  gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)  org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)  org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)  gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)  org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)  org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)  gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.handle(flashMap.scala:145)  org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)  gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)  org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)  org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)  gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73)  org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)  org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)  org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)  org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)  gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)  org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)  org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)  gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)  org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)  org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)  gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)  org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)  org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)  gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)  org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)  org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)  gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.handle(flashMap.scala:145)  org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)  gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)  org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)  org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)  gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73)  org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)  org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)  org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)  org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)  gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)  org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)  org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)  gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)  org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)  org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)  gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)  org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)  org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)  gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)  org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)  org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)  gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.handle(flashMap.scala:145)  org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)  gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)  org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)  org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)  gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73)  gitbucket.core.servlet.PluginControllerFilter$FilterChainWrapper.doFilter(PluginControllerFilter.scala:41)  org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)  org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)  org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)  gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)  org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)  org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)  gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)  org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)  org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)  gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)  org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)  org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)  gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)  org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)  org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)  gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.handle(flashMap.scala:145)  org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)  gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)  org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)  org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)  gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73)  gitbucket.core.servlet.PluginControllerFilter$FilterChainWrapper.doFilter(PluginControllerFilter.scala:41)  gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:33)  org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)  org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)  scala.Option.getOrElse(Option.scala:121)  org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)  org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)  org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)  org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)  gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34)  org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)  org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)  gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34)  org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)  org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)  gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34)  org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)  org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)  gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34)  org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)  org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)  gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)  org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)  gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34)  org.scalatra.FlashMapSupport.handle(flashMap.scala:145)  org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)  gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34)  org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)  scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)  scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)  org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)  org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)  gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73)  org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)  gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39)  gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207)  slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200)  com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207)  gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30)  org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751)  org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)  org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)  org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)  org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)  org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)  org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)  org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)  org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)  org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)  org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169)  org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)  org.eclipse.jetty.server.Server.handle(Server.java:534)  org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)  org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)  org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283)  org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108)  org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)  org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)  org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)  org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)  org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)  org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)  java.lang.Thread.run(Unknown Source)  ```","false","duplicate"
"git clone doesn't work with personal access token","## Issue **Impacted version**: 4.20.0  **Deployment mode**: standalone app, with an http frontend (apache)  **Problem description**: - create repository (with readme) - create personal access token - try `git clone [repo-url]` with username and access token. it fails. using the password is ok. ","false","feature"
"Webinterface: Max filesize","## Issue **Impacted version**: 4.19.3 **Deployment mode**: with an http frontend (nginx)  **Problem description**: Hi,  when I try to upload a file larger than 10MiB via the webinterface, I get a ""File is too big (XX.XXMiB). Max filesize: 10MiB."" error. I run gitbucket with option ""--max_file_size=600000000"" and nginx runs with ""client_max_body_size    600m;"" option. Via git command line, everything works as expected.  Regards Michael","false","bug"
"Making branch protected throws error","When I try to make any of my branches in my repo protected I get the following error:  ![image](https://user-images.githubusercontent.com/6520055/34279239-db7b3d34-e66c-11e7-8f03-f901f5703c06.png)  I have verified the issue persists in your online demo hosted on heroku as well.","false","duplicate"
"Fix typo in style attribute","Because of the typo, image displayed in unintended aspect ratio, in some case.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"support CreateEvent in webhook","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ]  [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"MS Sql server as external database","Does Gitbucket support MS SQL server database to store all the data? ","false","question"
"Passwords cannot contain exclamation mark (!)","## Issue **Impacted version**: 4.19.3  **Deployment mode**: Standalone app using `java -jar gitbucket.war`, using apache 2, accessed via http://localhost:8080  **Problem description**: Passwords cannot contain an exclamation mark (!). It says: ""Password contains invalid character."" in red","false",
"Add ""Additional filter condition"" Example to LDAP Authentication wiki page","I am not sure if this is actually a reason to open an issue:  On the wiki page for the LDAP Authentication Settings https://github.com/gitbucket/gitbucket/wiki/LDAP-Authentication-Settings in the table with the configuration options the option ""Additional filter condition"" is missing.  After multiple extensive searches on Google, I could not get this to work as I need it. Also I didn't find a lot of information about this in general. I want to check it a User is memberOf one (or more) in a list of groups so I tried setting it to `(|(memberOf=CN=DEP_S31,OU=Groups,DC=example,DC=com)(memberOf=CN=DEP_S30,OU=Groups,DC=example,DC=com))` or just `(|(memberOf=DEP_S31)(memberOf=DEP_S30))` but nothing worked.  Is this option not for that purpose or working differently?  An actual working example would be greatly appreciated. Thanks.","false","document,help wanted"
"Further plugin extension points","Hello all,  our team is  a big fan of GitBucket, and we would like to extend it via plugins. We would like to attach work hours spent on various issues. To make the integration of these kind of plugins convenient, i think extension points could be made into the listings and forms of various entities (issue, pr, branch, repo, etc), to allow plugins to add shortcut buttons.  For an example on the issue listing and form a plugin could add a new button ""Record Work Hours"". This button must have access to the issue data to create a redirection URL to the plugin controller with the issue's ID.  What's your opinion?","false","question"
"White letters on white background (""Light"" skins)","## Issue **Impacted version**: 4.19.3  **Deployment mode**: standalone app  **Problem description**: With light skin themes, user's bio and joined date are unreadable because of its color. Please see attached image.  Color of these fields are seems to be specified by inline style ""color: white; "".  https://github.com/gitbucket/gitbucket/blob/54be93b0daf13998858010081c11fc6ccecb969c/src/main/twirl/gitbucket/core/account/main.scala.html#L16  https://github.com/gitbucket/gitbucket/blob/54be93b0daf13998858010081c11fc6ccecb969c/src/main/twirl/gitbucket/core/account/main.scala.html#L23  ![screenshot-root - chromium](https://user-images.githubusercontent.com/40446/33991532-4cb7fb6e-e112-11e7-9c84-385222aaa1ad.png) ","false","help wanted,improvement"
"Upgraded to mariadb-java-client-2.2.0","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* ","true",
"Internal Server Error when trying to protect branch","## Issue **Impacted version**: 4.19.3  **Problem description**: - enter repository settings menu - select ""branches"" tab - ""Protected branches"" -> select ""master"" - Internal Server Error is shown  Error: ` Internal Server Error java.time.DateTimeException: Invalid ID for ZoneOffset, non numeric characters found: UTC `  Trace back: ` java.time.ZoneOffset.parseNumber(ZoneOffset.java:269) -- java.time.ZoneOffset.of(ZoneOffset.java:216) gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$17(RepositorySettingsController.scala:182) gitbucket.core.util.OwnerAuthenticator.$anonfun$authenticate$3(Authenticator.scala:42) scala.Option.map(Option.scala:146) gitbucket.core.util.OwnerAuthenticator.$anonfun$authenticate$2(Authenticator.scala:40) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.OwnerAuthenticator.authenticate(Authenticator.scala:39) gitbucket.core.util.OwnerAuthenticator.ownerOnly(Authenticator.scala:34) gitbucket.core.util.OwnerAuthenticator.ownerOnly$(Authenticator.scala:34) gitbucket.core.controller.RepositorySettingsController.ownerOnly(RepositorySettingsController.scala:25) gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$16(RepositorySettingsController.scala:174) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) ... org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) java.lang.Thread.run(Thread.java:748) `","false",
"Git blame view is not displayed correctly","## Issue **Impacted version**: 4.19.2 and 4.19.3  **Deployment mode**: with an http frontend httpd  **Problem description**: Even if you click the blame tag on the source code display screen, it is no longer displayed correctly. With the command blame is seen without problems.","false","bug"
"Show conflicting files if pull request can't be merged","![conflicting-files](https://user-images.githubusercontent.com/1094760/33846778-9914f742-deeb-11e7-9696-503f022428fd.png) ","true","feature"
"jgit-4.9.1.201712030800-r","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Add a pulldown menu to choose the merge strategy","![merge-strategy](https://user-images.githubusercontent.com/1094760/33802732-0f944b10-ddc1-11e7-8474-9eb8e35dca55.png)  Closes #898","true","feature"
"gitbucket 4.19.0 on heroku does not work correctly","On http://gitbucket.herokuapp.com  when accessing a repository following error is raised  ![image](https://user-images.githubusercontent.com/1119660/33768451-6310ccba-dc26-11e7-97fc-9109c9b03f92.png)  uninstalling the Notifications plugin resolves the issue.","false",
"4.19.3: build.sbt still contains 4.19.2","## Issue **Impacted version**: 4.19.3  I guess you'll have to upgrade all files and release 4.19.4 ","false",
"PR comment permalinks to ""issues/xx/#comment-yy""","## Issue  **Impacted version**: 4.19.2 **Deployment mode**: standalone app  **Problem description**:  In pull request pages, comment permalinks point to `issues/xx/#comment-yy` instead of `pull/xx/#comment-yy`. This causes extra reloading/redirection when click.  ![comment_permalink](https://user-images.githubusercontent.com/6268183/33695862-c939a1a4-db42-11e7-9db2-b6532a39b485.png)","false","bug"
"Bug to protect branche with UTC timezone","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ## Issue **Impacted version**: 4.19.2  **Deployment mode**:   ``` java -version java version ""1.8.0_66"" Java(TM) SE Runtime Environment (build 1.8.0_66-b17) Java HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode) ```  Use standalone version under MacOS X, use command:  ``` java -jar gitbucket.war  ```   **Problem description**:  I have a repository, i want to protect master branch (push force forbidden) Go to Settings -> Branches -> Protected branch  ![capture d ecran 2017-12-06 a 12 08 30](https://user-images.githubusercontent.com/337842/33659089-38f2010e-da7f-11e7-88bc-9556ff58a226.png)  Select the master branch  ![capture d ecran 2017-12-06 a 12 08 43](https://user-images.githubusercontent.com/337842/33659130-5ae29be8-da7f-11e7-9969-689525b8c3a5.png)  And see this traceback  ![capture d ecran 2017-12-06 a 12 08 52](https://user-images.githubusercontent.com/337842/33659140-67ddada6-da7f-11e7-968f-073b098a7541.png)  ``` 12:08:49.942 [qtp1607521710-87] ERROR g.c.c.RepositorySettingsController - Catch unhandled error in request: Request(GET //127.0.0.1:8080/mirounga/giraumon/settings/branches/master)@46341250 java.time.DateTimeException: Invalid ID for ZoneOffset, non numeric characters found: UTC 	at java.time.ZoneOffset.parseNumber(ZoneOffset.java:269) 	at java.time.ZoneOffset.of(ZoneOffset.java:216) 	at gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$17(RepositorySettingsController.scala:182) 	at gitbucket.core.util.OwnerAuthenticator.$anonfun$authenticate$3(Authenticator.scala:42) 	at scala.Option.map(Option.scala:146) 	at gitbucket.core.util.OwnerAuthenticator.$anonfun$authenticate$2(Authenticator.scala:40) 	at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) 	at gitbucket.core.util.OwnerAuthenticator.authenticate(Authenticator.scala:39) 	at gitbucket.core.util.OwnerAuthenticator.ownerOnly(Authenticator.scala:34) 	at gitbucket.core.util.OwnerAuthenticator.ownerOnly$(Authenticator.scala:34) 	at gitbucket.core.controller.RepositorySettingsController.ownerOnly(RepositorySettingsController.scala:25) 	at gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$16(RepositorySettingsController.scala:174) 	at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) 	at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) 	at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) 	at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) 	at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) 	at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) 	at scala.Option.flatMap(Option.scala:171) 	at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) 	at scala.collection.immutable.Stream.flatMap(Stream.scala:490) 	at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) 	at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) 	at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) 	at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:46) 	at gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:44) 	at scala.collection.immutable.List.foreach(List.scala:389) 	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) 	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) 	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) 	at gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:44) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) 	at gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:44) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629) 	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) 	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.eclipse.jetty.server.Server.handle(Server.java:561) 	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) 	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) 	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) 	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) 	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) 	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) 	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) 	at java.lang.Thread.run(Thread.java:745) ```    ","false","bug"
"PR creation fails from the Pull request section","## Issue **Impacted version**: 4.18  **Deployment mode**: standalone app with an nginx frontend  **Problem description**: Given a project from user bob. From a fork, user Joe created a commit in branch b1. Joe goes to Pull request section of his fork and hits the button ""New pull request""  ![image](https://user-images.githubusercontent.com/1119660/33651455-2674e212-da66-11e7-91c5-714f8720837e.png)  By default the master branch is taken from Joe fork and the URL states the target is for Bob repository  ![image](https://user-images.githubusercontent.com/1119660/33651495-5260f118-da66-11e7-8417-54d4dc762149.png)  Changing the source branch to b1, make the URL to change, user Bob is missing leading in a bad URL.  ![image](https://user-images.githubusercontent.com/1119660/33651541-828aa258-da66-11e7-8327-9239cda0d924.png)  Changing manually the url to add bob: `http://morlk964.agfahealthcare.com/joe/demo-ci-jgitver-maven-plugin/compare/bob:master...joe:b1` make the screen to work again  ![image](https://user-images.githubusercontent.com/1119660/33651611-d1bd18e2-da66-11e7-81c4-cf50d44e417d.png)   Workaround is; - either to manually edit the url - or use the ""Pull request"" button from the ""branches"" section ![image](https://user-images.githubusercontent.com/1119660/33651689-105ac5a4-da67-11e7-942c-95f2e378429b.png)  ","false","bug"
"Fix comment reply form behavior in the diff view",,"true","bug"
"Git cherry picking ","This app is now actually covering almost all the relevant source code management cycles.  But i think if we can add the ability to cherry pick between commits would be more awesome too","false","feature"
"Internal server error when changing user image","## Issue **Impacted version**: 4.19.2  **Deployment mode**: local http frontend (from apache2 daemon) at http://localhost:8080  **Problem description**: *Fresh install of 4.19.2, no pre-existing database* - Go to http://localhost:8080 - Log in as root - Click edit profile (goes to http://localhost:8080/root/_edit) - Upload image to profile (image is .png) - Click save  **Output**: ```` Internal Server Error java.util.NoSuchElementException: None.get scala.None$.get(Option.scala:349) scala.None$.get(Option.scala:347) gitbucket.core.controller.AccountManagementControllerBase.$anonfun$updateImage$3(ControllerBase.scala:299) gitbucket.core.controller.AccountManagementControllerBase.$anonfun$updateImage$3$adapted(ControllerBase.scala:298) scala.Option.map(Option.scala:146) gitbucket.core.controller.AccountManagementControllerBase.updateImage(ControllerBase.scala:298) gitbucket.core.controller.AccountManagementControllerBase.updateImage$(ControllerBase.scala:291) gitbucket.core.controller.AccountController.updateImage(AccountController.scala:20) gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$20(AccountController.scala:229) scala.Option.map(Option.scala:146) gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$19(AccountController.scala:221) gitbucket.core.util.OneselfAuthenticator.$anonfun$oneselfOnly$2(Authenticator.scala:15) gitbucket.core.util.OneselfAuthenticator.$anonfun$authenticate$1(Authenticator.scala:21) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.OneselfAuthenticator.authenticate(Authenticator.scala:19) gitbucket.core.util.OneselfAuthenticator.$anonfun$oneselfOnly$1(Authenticator.scala:15) gitbucket.core.controller.ValidationSupport.$anonfun$post$3(ValidationSupport.scala:25) org.scalatra.forms.FormSupport.validate(FormSupport.scala:14) org.scalatra.forms.FormSupport.validate$(FormSupport.scala:8) gitbucket.core.controller.ControllerBase.validate(ControllerBase.scala:33) gitbucket.core.controller.ValidationSupport.$anonfun$post$1(ValidationSupport.scala:25) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:272) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33) org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:248) scala.Option.flatMap(Option.scala:171) org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:246) scala.collection.immutable.Stream.flatMap(Stream.scala:490) org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:245) org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:243) gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:169) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2(CompositeScalatraFilter.scala:46) gitbucket.core.servlet.CompositeScalatraFilter.$anonfun$doFilter$2$adapted(CompositeScalatraFilter.scala:44) scala.collection.immutable.List.foreach(List.scala:389) scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:35) scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:35) scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:44) gitbucket.core.servlet.CompositeScalatraFilter.doFilter(CompositeScalatraFilter.scala:44) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:44) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:79) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:172) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:172) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629) org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) org.eclipse.jetty.server.Server.handle(Server.java:561) org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) java.lang.Thread.run(Thread.java:748) ````","false","bug"
"Add toolbar and help to Markdown editor","![2017-12-05 20 15 00](https://user-images.githubusercontent.com/1094760/33604369-0e5b5c50-d9f9-11e7-9608-43390260bf3e.png) ","false","feature"
"Add a Patch button to the diff view","Closes #1781  ![patch1](https://user-images.githubusercontent.com/1094760/33589631-35b9719c-d9bd-11e7-87a4-6ceef490e878.png)  ![patch2](https://user-images.githubusercontent.com/1094760/33589633-3a337042-d9bd-11e7-9cdb-4451ec954201.png) ","true",
"ssh git-upload-pack","Hello,  i try to pull via ssh and i don't know how to debug the following error:  ```$ git push --set-upstream live master  Unknown command: git-receive-pack '/git/b/test.git' fatal: Could not read from remote repository.  Please make sure you have the correct access rights and the repository exists. $ git remote -v  origin	ssh://git:30000/git/b/test.git (fetch) origin	ssh://git:30000/git/b/test.git (push) ```  The git-upload and git-receive pack is installed on server and client under /usr/bin and are symlinked to /bin.   Thanks","false","question"
"Create new repository from existing git repository","Closes #255, #782  ![Create new repository from existing git repository](https://user-images.githubusercontent.com/1094760/33541454-8f82d4d0-d912-11e7-8729-fcd9e2146c96.png)  ![Creating repository](https://user-images.githubusercontent.com/1094760/33550422-3e219a76-d931-11e7-82ef-0f43b41d2fe7.png)  ","true","feature"
"Error when importing data from large file","## Error when importing data from large file **Impacted version**: 4.19.2 for sure, probably some older versions too  **Deployment mode**: Standalone app  **Problem description**: - Encountered exception `Multipart Mime part file exceeds max filesize` when importing data from 3.5 MB sql file. I am trying to migrate from H2 to PostgreSQL. UI route: `../admin/data`.  ` org.eclipse.jetty.http.BadMessageException: 400: Unable to parse form content 	at org.eclipse.jetty.server.Request.getParameters(Request.java:376) 	at org.eclipse.jetty.server.Request.getParameterMap(Request.java:1029) 	at org.scalatra.servlet.RichRequest.multiParameters(RichRequest.scala:81) 	at org.scalatra.ScalatraBase.$anonfun$multiParams$2(ScalatraBase.scala:809) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.multiParams(ScalatraBase.scala:809) 	at org.scalatra.ScalatraBase.multiParams$(ScalatraBase.scala:805) 	at gitbucket.core.controller.ControllerBase.multiParams(ControllerBase.scala:33) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:165) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) 	at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) 	at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$runFilters$2(ScalatraBase.scala:236) 	at scala.Option.foreach(Option.scala:257) 	at org.scalatra.ScalatraBase.$anonfun$runFilters$1(ScalatraBase.scala:235) 	at org.scalatra.ScalatraBase.$anonfun$runFilters$1$adapted(ScalatraBase.scala:234) 	at scala.collection.Iterator.foreach(Iterator.scala:929) 	at scala.collection.Iterator.foreach$(Iterator.scala:929) 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417) 	at scala.collection.IterableLike.foreach(IterableLike.scala:71) 	at scala.collection.IterableLike.foreach$(IterableLike.scala:70) 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54) 	at org.scalatra.ScalatraBase.runFilters(ScalatraBase.scala:234) 	at org.scalatra.ScalatraBase.runFilters$(ScalatraBase.scala:232) 	at gitbucket.core.controller.ControllerBase.runFilters(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:168) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:181) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:199) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:181) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:150) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:123) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:123) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:119) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(FlashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(FlashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(FlashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:41) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:41) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:36) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:72) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1629) 	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) 	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.eclipse.jetty.server.Server.handle(Server.java:561) 	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) 	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) 	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) 	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) 	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:243) 	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) 	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.IllegalStateException: Multipart Mime part file exceeds max filesize 	at org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.write(MultiPartInputStreamParser.java:133) 	at org.eclipse.jetty.util.MultiPartInputStreamParser.parse(MultiPartInputStreamParser.java:748) 	at org.eclipse.jetty.util.MultiPartInputStreamParser.getParts(MultiPartInputStreamParser.java:441) 	at org.eclipse.jetty.server.Request.getParts(Request.java:2333) 	at org.eclipse.jetty.server.Request.extractMultipartParameters(Request.java:541) 	at org.eclipse.jetty.server.Request.extractContentParameters(Request.java:463) 	at org.eclipse.jetty.server.Request.getParameters(Request.java:372) 	... 107 common frames omitted `  ","false",
"404 with custom base url","## 404 with custom base url **Impacted version**: 4.19+  **Deployment mode**: Standalone app behind nginx with custom base url  **Problem description**: - can not access System Administration, the url `../gitbucket/admin/users` responds with 404 - Another problem is with testing webhook. Somehow hook (name?) is undefined and I get 404 for url `../settings/hooks/undefined/validate`.  Worked before 4.19.0 upgrade.  ","false","bug"
"4.19.0 Internal Server Error","## Issue **Impacted version**:  4.19.0  **Deployment mode**:  Standalone app behind nginx. Embedded H2 database.  **Problem description**: - Cannot view repositories, internal server error.  - Reproduce: upgrade from 4.18 to 4.19.0  Also, I can not downgrade back to 4.18, Gitbucket says that database version is 4.19.  ![image](https://user-images.githubusercontent.com/22718104/33517006-ad771d64-d784-11e7-879a-a053fa53eb1f.png)  `Internal Server Error java.lang.NoSuchMethodError: gitbucket.core.helper.html.dropdown$.apply$default$5()Lscala/Tuple2; gitbucket.notifications.html.watch$.apply(watch.template.scala:22) Plugin.$anonfun$repositoryHeaders$2(Plugin.scala:52) scala.Option.map(Option.scala:146) Plugin.$anonfun$repositoryHeaders$1(Plugin.scala:43) gitbucket.core.html.menu$.$anonfun$apply$6(menu.template.scala:99) scala.collection.immutable.Stream.map(Stream.scala:415) gitbucket.core.html.menu$.apply(menu.template.scala:98) gitbucket.core.repo.html.files$.apply(files.template.scala:42) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$fileList$3(RepositoryViewerController.scala:816) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$fileList$2(RepositoryViewerController.scala:802) scala.Option.map(Option.scala:146) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$fileList$1(RepositoryViewerController.scala:801) gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38) gitbucket.core.controller.RepositoryViewerControllerBase.fileList(RepositoryViewerController.scala:796) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$7(RepositoryViewerController.scala:155) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:104) scala.Option.map(Option.scala:146) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98) gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93) gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93) gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$3(RepositoryViewerController.scala:155) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:280) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:274) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:178) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:164) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:273)` ","false","bug"
"fix redirect URL path encode","### Before submitting a pull-request to GitBucket I have first:  - [x]  read the [contribution guidelines](htt ps://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ]  rebased my branch over master - [x]  verified that project is compiling - [x]  verified that tests are passing - [ ]  squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ]  [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"issue #1479 has not been fixed","**Impacted version**: 4.18.0  **Deployment mode**:  cantOS-7 apache-2.4.6 tomcat-7.0.76 java-1.8.0  **Problem description**: ## issue #1479 has not been fixed  ![image](https://user-images.githubusercontent.com/13674170/33355092-54785832-d4f9-11e7-9c91-a4e8023e9c3d.png)  ![image](https://user-images.githubusercontent.com/13674170/33355104-62c53874-d4f9-11e7-9dc2-7cc43459f61f.png) ","false","bug,waiting 4 user feedback"
"sbt 1.0.4",,"true",
"sidebar repo names text overflows outside the layout and difficult to use for too many repos","## sidebar repo names text overflows outside the layout and difficult the read the projects and repo names, looks pretty ugly too **Impacted version**:4.18.0  **Deployment mode**: *standalone app with nginx reverse proxy*  **Problem description**: - *Sidebar repo names overflows outside the sidebar layout* - *group could be collapsed to gain some space for repo names and also avoid long scrolling list of repositories, in my case i have 50+ repos*  ![gitbucketsidebar](https://user-images.githubusercontent.com/5414957/33238686-76e22184-d2b8-11e7-91d0-f81d06b31f84.png)  ","false","help wanted,improvement"
"Authentications via ldaps","## Issue **Impacted version**: 4.18.0  **Deployment mode**: via nginx  **Problem description**: Hi,  I try to get the login credentials from a Samba Server (running in AD mode). Using ""normal"" ldap, everything works fine. I followed https://github.com/gitbucket/gitbucket/wiki/LDAP-Authentication-Settings to get it to work with ssl encryption. I imported the certificate from the ldap server via: echo | openssl s_client -connect host.bla.blubb:636 2>&1 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > test.pem keytool -import -trustcacerts -file test.pem -alias host.bla.blubb -keystore /path/to/my/keystore I used the standard java keystore password ""changeit""  I configured gitbucket via system settings: - LDAP host: host.bla.blubb - LDAP port: 636 - Bind DN: cn=.... - Bind password: pw - Base DN: dc=... - User name attribute: uid - Additional filter condition: - Full name attribute: cn - Mail address attribute: mail - Enable TLS: unchecked - Enable SSL: checked - Keystore: /path/to/my/keystore   Unfortunately, I see the following error in syslog: java[1259]: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target  I would appreciate it if anyone could give me a hint on it.  EDIT: I successfully tested the connection using https://gist.github.com/4ndrej/4547029   Regards Michael ","false","LDAP/SSO"
"Download patch and diffs ","Please can you add the ability to download patches and diffs.  Maybe subsequently the notification or email plugin can include apply patch","false","feature"
"Importing repositories from other sites ","Hello this wonderful piece of software needs this feature.  Infact i had doubted myself that it's not there until i confirmed that it is yet to be there.  In this age of opensource many people prefer to import codes on the fly and start corroborating on the go.  Some people don't have trusted hardwares they can pull source down to before pushing , so they prefer coding only on the web editor.  And infact i think it's one the biggest reasons of having a git web frontend.  I don't think it will be so hard to achieve, i think it  only takes a little knowledge of scala","false","duplicate"
"Commits created by GitBucket use user name instead of full name","**Original issue**: #125   **Impacted version**: 4.18  **Deployment mode**:  Standalone app running behind an apache rev proxy  This might be a duplicate of #125 . I'm creating a new issue because:  * the original one ought to be fixed * I can still observe the error  When committing from the command line, my commits use ""Uli Heller"" and ""whatever@email.com"". Within gitbucket, my full name is ""Uli Heller"", my login is ""uli"". Changing a file within gitbucket produces a commit by ""uli"" and ""whatever@email.com"", so the login name is used instead of the full name. ","false",
"Introduce CompositeScalatraFilter to merge controllers to one filter","This pull request reduces the depth of stack caused by nested ScalatraFilters.","true","improvement"
"Update bundled plugins by moving to Scalatra 2.6","Following bundled plugins have to be updated in GitBucket 4.19.0 to move to Scalatra 2.6.  - gitbucket-gist-plugin (https://github.com/gitbucket/gitbucket-gist-plugin/pull/44) - gitbucket-pages-plugin (https://github.com/gitbucket/gitbucket-pages-plugin/pull/23)  We should replace a following import statement in controllers:  ```scala import io.github.gitbucket.scalatra.forms._  ```  with  ```scala import org.scalatra.forms._  ```","false","plugin"
"Test with Travis-CI DBs if available.","The Integration tests https://github.com/gitbucket/gitbucket/blob/master/src/test/scala/gitbucket/core/GitBucketCoreModuleSpec.scala  use embedded DBs (that are quite slow).  For the Travis-CI only run, please add https://docs.travis-ci.com/user/database-setup/ , so that when running on Travis-CI to use the infrastructure there, instead of downloading and running the embedded DB instances: at least for MySQL, MariaDB and PostgreSQL  Thank you.","false",
"Port Release Notes to CHANGELOG.md","This PR fixes #1774. ","true",
"Release Notes in README.md go longer and longer","`README.md` has all Release Notes from 1.0 to 4.18.0. So it's too much bother to scroll to the bottom and look through the entire document. How about porting all Release Notes to new  `CHANGELOG.md` and having only the latest one in `README.md`?","false","task"
"Use POST for /sidebar-collapse",,"true","improvement"
"File locking","Check the possibility of blocking by file. Currently exists only by project.","false","improvement"
"Status check before merging","**Problem description**: Don't know this is a bug or not. Please see the attached image for the screen shot  In Repository -> Settings -> Branches I protected a branch but the option ""Require status checks to pass before merging"" is disabled.  I checked the GitHub for the status API documentation as suggested by the warning, still have no idea how can I make a first status check so that I can check that option.  Can you give an example for this part so that make the option enable?  ![image](https://user-images.githubusercontent.com/12424674/32545687-78ce4d06-c4b7-11e7-9e3b-9c1b37047160.png) ","false","question"
"Wiki page incorrect url for 4. Tips - How to Close/Reference issues & pull request","**Problem description**: In the wiki, the escaped url for  4. Tips - How to Close/Reference issues & pull request https://github.com/gitbucket/gitbucket/wiki/How-to-Close-Reference-issues-%26amp%3B-pull-request  is incorrect.  The tips can be accessed through the un-encoded url: https://github.com/gitbucket/gitbucket/wiki/How-to-Close-Reference-issues-&-pull-request  Please fix the link","false","document"
"Gitbucket official demo site not work","**Problem description**: 1. in Chrome, go to the official gitbucket demo site: https://gitbucket.herokuapp.com/ or (http://gitbucket.herokuapp.com/)  exception show in Chrome:  java.net.MalformedURLException: no protocol: gitbucket.herokuapp.com 	at java.net.URL.<init>(URL.java:593) 	at java.net.URL.<init>(URL.java:490) 	at java.net.URL.<init>(URL.java:439) 	at gitbucket.core.controller.Context.<init>(ControllerBase.scala:259) 	at gitbucket.core.controller.ControllerBase.context(ControllerBase.scala:87) 	at gitbucket.core.controller.ControllerBase$$anonfun$1.applyOrElse(ControllerBase.scala:162) 	at gitbucket.core.controller.ControllerBase$$anonfun$1.applyOrElse(ControllerBase.scala:153) 	at scala.PartialFunction$OrElse.apply(PartialFunction.scala:168) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$8(ScalatraBase.scala:189) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$7(ScalatraBase.scala:191) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:218) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751) 	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226) 	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180) 	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512) 	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) 	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134) 	at org.eclipse.jetty.server.Server.handle(Server.java:534) 	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320) 	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) 	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283) 	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108) 	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136) 	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671) 	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589) 	at java.lang.Thread.run(Thread.java:748)","false",
"reset BaseURL and SSH Host will cause server crush","use root user set baseurl to  http://someaddress use root user set ssh host to  http://someaddress apply  use root user set baseurl to  someaddress use root user set ssh host to someaddress apply  seems like should add protocol header....  java.net.MalformedURLException: no protocol: gitbucket.herokuapp.com 	at java.net.URL.<init>(URL.java:593) 	at java.net.URL.<init>(URL.java:490) 	at java.net.URL.<init>(URL.java:439) 	at gitbucket.core.controller.Context.<init>(ControllerBase.scala:259) 	at gitbucket.core.controller.ControllerBase.context(ControllerBase.scala:87) 	at gitbucket.core.controller.ControllerBase$$anonfun$1.applyOrElse(ControllerBase.scala:162) 	at gitbucket.core.controller.ControllerBase$$anonfun$1.applyOrElse(ControllerBase.scala:153) 	at scala.PartialFunction$OrElse.apply(PartialFunction.scala:168) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$8(ScalatraBase.scala:189) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$7(ScalatraBase.scala:191) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:218) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751) 	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226) 	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180) 	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512) 	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) 	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134) 	at org.eclipse.jetty.server.Server.handle(Server.java:534) 	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320) 	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) 	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283) 	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108) 	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136) 	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671) 	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589) 	at java.lang.Thread.run(Thread.java:748)","false","question"
"Lfs not working - Maybe reverse proxy issue?","Hi, first, let me thank for this AMAZING product. I could not believe how great it is. I have an issue setting up LFS, normal GIT works fine.  I have gutbucket hidden behind reverse proxy. It runs at its own url, I have also set up the ROOT url.  This is my .gitconfig  ``` [lfs]   http://my-server ```  But every time I push I receive this:  ``` Pushing to http://hugo3.scem.uws.edu.au/tomitrescak/test batch response: Repository or object not found: http://my-server/tomitrescak/test.git/info/lfs/objects/batch Check that it exists and that you have proper access to it error: failed to push some refs to 'http://my-server/tomitrescak/test' Git LFS: (0 of 1 files) 0 B / 6 B                                               Completed with errors, see above ```  Oh and I am running Gitbucket 4.18.0","false",
"Multiple email addresses for single user.","First, I have to say thx for this great git server project! I use it for all my projects and it works really good. Now my question: some time, I push code changes from different workstations and some time I forget to change the commiter mail address. Is it possible to add the functionality to bind multiple email addresses to one user? This can help to bind events to one user (like bitbucket).  Regard Micha","false",
"Fix user proposals and update typeahead","This changes the typeahead options to match the syntax of `/_user/proposals`: - Use `item.label` for the display text - Set the value to `item.value` after making a selection instead of using the label.","true","bug"
"fix #1763 Don't delete close_comment","This PR fixes #1763. When Deleting comment for close_comment or reopen_comment, it should be changing action to close/reopen. Don't delete it(previous behavior).  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"close/reopen action icon deleted when deleting associated comment.","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ## Issue **Impacted version**: 4.18.0/master  **Deployment mode**: maybe not related. I tested on local `sbt jetty:start` and demo site.  **Steps to reproduce**: - create an issue - close it with comment - delete closing comment - reloading page  **Problem description**: - I expected only comment deleted. before reloading, looks like this behavior  - but, actually deleted comment and **close action** after reloaded  before deleting comment: ![20171031-073906 - close bug test - issue 5 - root test - google chrome](https://user-images.githubusercontent.com/6997928/32199215-f5891470-be0e-11e7-880e-d55867a85883.png)  delete comment and before reloading page: ![20171031-073915 - close bug test - issue 5 - root test - google chrome](https://user-images.githubusercontent.com/6997928/32199225-ffad2b12-be0e-11e7-9d9c-2d50d79b65d0.png)  after reload: ![20171031-073920 - close bug test - issue 5 - root test - google chrome](https://user-images.githubusercontent.com/6997928/32199235-05e34d0e-be0f-11e7-8342-932d0831727b.png)  This issue's status is closed. But, no closing action displayed.  this behavior also occurs with reopen action.","false","bug"
"Use timeline for issue/PR comments and actions","This PR prettify issue/PR comments and actions.  - change to [timeline](https://adminlte.io/themes/AdminLTE/pages/UI/timeline.html). - highlight your comments/actions by color.  Issue rendered as:  ![20171031-071249 - issue test - issue 5 - root test - google chrome](https://user-images.githubusercontent.com/6997928/32198668-569f3f62-be0c-11e7-8f0a-b38e5f06a5b9.png)  current user(user)'s comment show with light-blue header.  PR rendered as: ![20171031-071326 - fix 1 - pull request 4 - root test - google chrome](https://user-images.githubusercontent.com/6997928/32198681-6ac1e530-be0c-11e7-8178-e1dd62f84dca.png)   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Truncate long branch names","Fix #1135   I limited the text area in branch names to 200px, which seems to be the same limit used by GitHub.  Old: ![](https://i.imgur.com/aiI6OUk.png)  New: ![](https://i.imgur.com/tPmh8kO.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Bump to Scalatra 2.6.0",,"true",
"Replace joda-time with java.time","Fix #1513  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Back Track and correct ","### Before submitting an issue to GitBucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] searched for similar already existing issue - [] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: xxxx  **Deployment mode**: *explain here how you use GitBucket : standalone app, under webcontainer (which one), with an http frontend (nginx, httpd, ...)*  **Problem description**: - *be as explicit has you can* - *describe the problem and its symptoms* - *explain how to reproduce* - *attach whatever information that can help understanding the context (screen capture, log files)* ","false",
"Rename PluginRegistory.scala to PluginRegistry.scala",,"true",
"Layout changes for System settings page","- Resize labels and inputs to remove unnecessary space - Move the skin selector to just below ""Information"" - Use separate names and values for the skins and organize them by light vs dark - Add a javascript skin previewer","true","improvement"
"Updated to jetty-9.4.7","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Standalone war seems to work OK.","true",
"Updated mariadb-java-client to 2.1.2","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Updated to jetty-9.3.21","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  I've created the standalone executable too. It seems to work ok.","true",
"(refs #1748) Exclude gitbucket.war from published artifacts","Closes #1748","true",
"Delete/Move RepositoryFilesDir, instead of LFS/comments dir.","Delete/Move RepositoryFilesDir, instead of LFS/comments directory. It is useful for storing additional files under RepositoryFilesDir such as Release pages feature, ci-plugin's artifacts or something else.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Updated to scala-2.12.4","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] NO see #1749 rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","task"
"sbt clean fails for current master - Cannot add dependency 'org.eclipse.jetty#jetty-security;9.3.19.v20170502'...","## Issue **Impacted version**: Current master 9e83882c6fa2122dbdc3dbc8311d5e763ca198f8   1a9982446f1abd96b92fb9f14386cdf22f522a6d is the first bad commit  **Deployment mode**: N/A - the issue happens during build  **Problem description**: - Just do a checkout and run `sbt clean`  ## Reproducing the error  ``` uli@ulinuc:~/git/forked/gitbucket$ git checkout -b upstream-master upstream/master Branch upstream-master konfiguriert zum Folgen von Remote-Branch master von upstream. Zu neuem Branch 'upstream-master' gewechselt uli@ulinuc:~/git/forked/gitbucket$ sbt.sh clean [info] Loading settings from plugins.sbt ... [info] Loading project definition from /home/uli/git/forked/gitbucket/project/project [info] Updating {file:/home/uli/git/forked/gitbucket/project/project/}gitbucket-build-build... [info] Done updating. [info] Loading settings from build.sbt,plugins.sbt ... [info] Loading project definition from /home/uli/git/forked/gitbucket/project [info] Compiling 2 Scala sources to /home/uli/git/forked/gitbucket/project/target/scala-2.12/sbt-1.0/classes ... [info] Done compiling. [info] Loading settings from build.sbt ... [info] Set current project to gitbucket (in build file:/home/uli/git/forked/gitbucket/) [error] java.lang.IllegalArgumentException: Cannot add dependency 'org.eclipse.jetty#jetty-security;9.3.19.v20170502' to configuration 'executable' of module io.github.gitbucket#gitbucket_2.12;4.18.0 because this configuration doesn't exist! [error] 	at org.apache.ivy.core.module.descriptor.DefaultDependencyDescriptor.addDependencyConfiguration(DefaultDependencyDescriptor.java:565) [error] 	at org.apache.ivy.plugins.parser.AbstractModuleDescriptorParser$AbstractParser.parseDepsConfs(AbstractModuleDescriptorParser.java:157) [error] 	at org.apache.ivy.plugins.parser.AbstractModuleDescriptorParser$AbstractParser.parseDepsConfs(AbstractModuleDescriptorParser.java:128) [error] 	at org.apache.ivy.plugins.parser.AbstractModuleDescriptorParser$AbstractParser.parseDepsConfs(AbstractModuleDescriptorParser.java:118) [error] 	at org.apache.ivy.plugins.parser.AbstractModuleDescriptorParser$AbstractParser.parseDepsConfs(AbstractModuleDescriptorParser.java:113) [error] 	at sbt.internal.librarymanagement.CustomXmlParser$CustomParser.parseDepsConfs(CustomXmlParser.scala:36) [error] 	at sbt.internal.librarymanagement.IvySbt$.convertDependency(Ivy.scala:919) [error] 	at sbt.internal.librarymanagement.IvySbt$.$anonfun$addDependencies$1(Ivy.scala:856) [error] 	at sbt.internal.librarymanagement.IvySbt$$$Lambda$2461/1089356898.apply(Unknown Source) [error] 	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:234) [error] 	at scala.collection.TraversableLike$$Lambda$41/1820383114.apply(Unknown Source) [error] 	at scala.collection.Iterator.foreach(Iterator.scala:929) [error] 	at scala.collection.Iterator.foreach$(Iterator.scala:929) [error] 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417) [error] 	at scala.collection.IterableLike.foreach(IterableLike.scala:71) [error] 	at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [error] 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [error] 	at scala.collection.TraversableLike.map(TraversableLike.scala:234) [error] 	at scala.collection.TraversableLike.map$(TraversableLike.scala:227) [error] 	at scala.collection.AbstractTraversable.map(Traversable.scala:104) [error] 	at sbt.internal.librarymanagement.IvySbt$.addDependencies(Ivy.scala:855) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.configureInline(Ivy.scala:282) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.x$7$lzycompute(Ivy.scala:243) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.x$7(Ivy.scala:240) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.moduleDescriptor0$lzycompute(Ivy.scala:240) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.moduleDescriptor0(Ivy.scala:240) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.$anonfun$withModule$1(Ivy.scala:229) [error] 	at sbt.internal.librarymanagement.IvySbt$Module$$Lambda$2422/1511744555.apply(Unknown Source) [error] 	at sbt.internal.librarymanagement.IvySbt.$anonfun$withIvy$1(Ivy.scala:190) [error] 	at sbt.internal.librarymanagement.IvySbt$$Lambda$2423/1239806762.apply(Unknown Source) [error] 	at sbt.internal.librarymanagement.IvySbt.sbt$internal$librarymanagement$IvySbt$$action$1(Ivy.scala:70) [error] 	at sbt.internal.librarymanagement.IvySbt$$anon$3.call(Ivy.scala:77) [error] 	at xsbt.boot.Locks$GlobalLock.withChannel$1(Locks.scala:93) [error] 	at xsbt.boot.Locks$GlobalLock.xsbt$boot$Locks$GlobalLock$$withChannelRetries$1(Locks.scala:78) [error] 	at xsbt.boot.Locks$GlobalLock$$anonfun$withFileLock$1.apply(Locks.scala:97) [error] 	at xsbt.boot.Using$.withResource(Using.scala:10) [error] 	at xsbt.boot.Using$.apply(Using.scala:9) [error] 	at xsbt.boot.Locks$GlobalLock.ignoringDeadlockAvoided(Locks.scala:58) [error] 	at xsbt.boot.Locks$GlobalLock.withLock(Locks.scala:48) [error] 	at xsbt.boot.Locks$.apply0(Locks.scala:31) [error] 	at xsbt.boot.Locks$.apply(Locks.scala:28) [error] 	at sbt.internal.librarymanagement.IvySbt.withDefaultLogger(Ivy.scala:77) [error] 	at sbt.internal.librarymanagement.IvySbt.withIvy(Ivy.scala:185) [error] 	at sbt.internal.librarymanagement.IvySbt.withIvy(Ivy.scala:182) [error] 	at sbt.internal.librarymanagement.IvySbt$Module.withModule(Ivy.scala:228) [error] 	at sbt.internal.librarymanagement.IvyActions$.cleanCachedResolutionCache(IvyActions.scala:54) [error] 	at sbt.Defaults$.$anonfun$compileBase$7(Defaults.scala:390) [error] 	at sbt.Defaults$.$anonfun$compileBase$7$adapted(Defaults.scala:388) [error] 	at sbt.Defaults$$$Lambda$1618/139982666.apply(Unknown Source) [error] 	at scala.Function1.$anonfun$compose$1(Function1.scala:44) [error] 	at scala.Function1$$Lambda$1445/305964128.apply(Unknown Source) [error] 	at sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:42) [error] 	at sbt.internal.util.$tilde$greater$$Lambda$2270/1569980193.apply(Unknown Source) [error] 	at sbt.std.Transform$$anon$4.work(System.scala:64) [error] 	at sbt.Execute.$anonfun$submit$2(Execute.scala:257) [error] 	at sbt.Execute$$Lambda$2287/1622301043.apply(Unknown Source) [error] 	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16) [error] 	at sbt.Execute.work(Execute.scala:266) [error] 	at sbt.Execute.$anonfun$submit$1(Execute.scala:257) [error] 	at sbt.Execute$$Lambda$2278/1639778373.apply(Unknown Source) [error] 	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:167) [error] 	at sbt.ConcurrentRestrictions$$anon$4$$Lambda$2285/208438522.apply(Unknown Source) [error] 	at sbt.CompletionService$$anon$2.call(CompletionService.scala:32) [error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [error] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [error] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [error] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [error] 	at java.lang.Thread.run(Thread.java:745) [error] (*:clean) java.lang.IllegalArgumentException: Cannot add dependency 'org.eclipse.jetty#jetty-security;9.3.19.v20170502' to configuration 'executable' of module io.github.gitbucket#gitbucket_2.12;4.18.0 because this configuration doesn't exist! [error] Total time: 1 s, completed 20.10.2017 06:41:42 uli@ulinuc:~/git/forked/gitbucket$  ```  ## Test script for bisect  This is probably useless for everybody except myself:  ``` #!/bin/sh  # Sometimes, project gets screwed up - clean it up rm -rf project git checkout -- project  # Execute a build sbt.sh clean ```  ## Doing the bisect  ``` git bisect start git bisect bad upstream-master git bisect good jgit490 git bisect run ... 1a9982446f1abd96b92fb9f14386cdf22f522a6d is the first bad commit commit 1a9982446f1abd96b92fb9f14386cdf22f522a6d Author: Naoki Takezoe <takezoe@gmail.com> Date:   Wed Sep 20 15:05:44 2017 +0900      Move to sbt 1.0  :100644 100644 e0b78977d609e69e19d27c0fc951d8c3b914d355 06e5eeb6b369c9f15dafca25f67f1de7939ad6de M	build.sbt :040000 040000 0bd0fe3c7fb39ae10d7b797430cc935abe06eaa1 e8b6e7e0f3ad177706f9276debd9c01cb2a864ca M	project 'bisect run' erfolgreich ausgeführt ``` ","false",
"Exclude gitbucket.war and its hash files from publishing artifacts",,"false","task"
"4.17.0 Pathology - Cannot View Commit Diffs","Can see the latest committed file, but when we attempt to browse a particular commit, we cannot see the diffs, instead we get ""Not Supported"" displayed.   Is this fixed in 4.18.0?  How do we roll back to 4.16.0?  I know there is some kind of database change that is required.  Thanks!","false",
"jgit-4.9.0.201710071750-r","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Add ""created_by"" and ""updated_by"" Fields.","Please add `created_by` and `updated_by` fileds for important information, e.g. user management (including collaborators), plug-in management, etc.  This would increase the transparency of a running application, and also it's security.  Thank you.","false","help wanted,improvement"
"Mail notification after push","## Mail notification after push **Impacted version**: 4.18.0  **Deployment mode**: standalone with https via nginx  **Problem description**: - Is there a possibility that all members of a group are notified via email if someone pushes to a corresponding repository? I've configured ""Send notifications"" in gitbucket settings and the server sends test mails successfully. However, nobody gets notified if one pushes into the repository... ","false","plugin"
"/issues API to get all assigned issues","Currently GitBucket doesn't support the `/issues` API as described at:  https://developer.github.com/v3/issues/#list-issues  We can get issues per repository, but not all assigned issues.  This would be useful for integration with task management and productivity software.","false","feature,help wanted"
"Add new extension point: sshCommandProvider",,"true","plugin"
"Encode file paths in URL",,"true",
"View  a list of commits like on github?","its it possible to View a list of commits like on github?","false","question"
"Question: build script to new gitbucket ci plugin"," Hi folks!  I've got a question about the new plugin build script usage. Can I just enter bash script commands which are available on the host system?  Thanks and best regards Gino","false","question"
"Update dependencies for the web interface",,"true","improvement"
"Mysql connection pool error marked as broken because of SQLSTATE(08000), ErrorCode(1220)","[+ [ jdbc:mysql://127.0.0.1/gitbucket?useUnicode=true&characterEncoding=utf8 -a username -a password ] + cat + exec java -jar /opt/gitbucket.war   2017-10-12 14:28:52.311:INFO::main: Logging initialized @17800ms 2017-10-12 14:29:00.012:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT 2017-10-12 14:30:07.022:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet 14:31:06.757 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting... 14:31:09.519 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed. 14:31:10.339 [main] INFO  g.core.servlet.InitializeListener - Check version 14:31:10.394 [main] INFO  g.core.servlet.InitializeListener - Start schema update 14:31:27.839 [main] WARN  c.zaxxer.hikari.pool.ProxyConnection - HikariPool-1 - Connection org.mariadb.jdbc.MariaDbConnection@1358b28e marked as broken because of SQLSTATE(08000), ErrorCode(1220) java.sql.SQLNonTransientConnectionException: (conn:118632) Connection is close 	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:156) 	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:118) 	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:245) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:218) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:153) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeUpdate(MariaDbPreparedStatementClient.java:186) 	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) 	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) 	at io.github.gitbucket.solidbase.migration.MigrationUtils.updateDatabase(MigrationUtils.java:20) 	at io.github.gitbucket.solidbase.manager.JDBCVersionManager.initialize(JDBCVersionManager.java:24) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:33) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:29) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1(InitializeListener.scala:66) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1$adapted(InitializeListener.scala:57) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:57) 	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:843) 	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:533) 	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:816) 	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:345) 	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1406) 	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1368) 	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:778) 	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262) 	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:522) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) 	at org.eclipse.jetty.server.handler.StatisticsHandler.doStart(StatisticsHandler.java:252) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.server.Server.start(Server.java:422) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) 	at org.eclipse.jetty.server.Server.doStart(Server.java:389) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at JettyLauncher.main(JettyLauncher.java:127) Caused by: java.sql.SQLException: Connection is close 	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.cmdPrologue(AbstractQueryProtocol.java:1393) 	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:206) 	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:212) 	... 38 common frames omitted 2017-10-12 14:31:27.926:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@78b236a0{/,file:///gitbucket/tmp/webapp/,UNAVAILABLE}{file:/opt/gitbucket.war} java.sql.SQLException: Connection is closed 	at com.zaxxer.hikari.pool.ProxyConnection$ClosedConnection.lambda$getClosedConnection$0(ProxyConnection.java:466) 	at com.sun.proxy.$Proxy2.setAutoCommit(Unknown Source) 	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:380) 	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java) 	at slick.jdbc.JdbcBackend$BaseSession.endInTransaction(JdbcBackend.scala:461) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) 	at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:57) 	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:843) 	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:533) 	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:816) 	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:345) 	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1406) 	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1368) 	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:778) 	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262) 	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:522) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) 	at org.eclipse.jetty.server.handler.StatisticsHandler.doStart(StatisticsHandler.java:252) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.server.Server.start(Server.java:422) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) 	at org.eclipse.jetty.server.Server.doStart(Server.java:389) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at JettyLauncher.main(JettyLauncher.java:127) 2017-10-12 14:31:28.496:INFO:oejs.AbstractConnector:main: Started ServerConnector@df1cff6{HTTP/1.1,[http/1.1]}{0.0.0.0:8080} 2017-10-12 14:31:28.507:INFO:oejs.Server:main: Started @174259ms ](url)   Please help Thanks","false","waiting 4 user feedback"
"Add local version of Source Sans Pro","Include the Source Sans Pro font family locally instead of importing it from Google Fonts. This is an alternative to removing the font (#1733)","true",
"Can't view changes made in java files on the Commit page","It shows Not supported, Any idea why (As far as i remeber it always worked i could be wrong on this)","false","duplicate"
"Create license report using sbt-license-report plugin","Fixes #1575","true","document,task"
"Removes imports of external links so that gitbucket can be used in off-internet-environments","### Before submitting a pull-request to GitBucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Add reply comment form to diff view","Fixes #1639  ![2017-10-09 12 18 45](https://user-images.githubusercontent.com/1094760/31324276-15667820-acec-11e7-9bdb-5910c2562f51.png) ","true","feature"
"Enhance SuggestionProvider to be able to supply label and value","Fixes #1673   By this pull request, gitbucket-emoji-plugin need tiny update.  https://github.com/gitbucket/gitbucket-emoji-plugin/blob/7e695c530fa92a13195e9fbf6bc0dab4cefb1c15/src/main/scala/Plugin.scala#L35-L37  We have to update `value` in the above code to `option.value`.","true","improvement"
"Wiki page navigation impossible on small screen","## Issue **Impacted version**: 4.16.0  **Deployment mode**: not relevant  **Problem description**: The right-side menu in the wiki is not visible on small screens making it impossible to navigate pages. The 'pc' on the following line sets display to none for a width below 767px: https://github.com/gitbucket/gitbucket/blob/2618f544429a979c168fa896fd32f9076795ed1a/src/main/twirl/gitbucket/core/wiki/page.scala.html#L33 ","false","improvement"
"Apply commit hook to online editing","See https://github.com/takezoe/gitbucket-ci-plugin/issues/32  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Pull request reviewers support","It will be great if gitbucket will support simple review feature: For protected branches pull request can be merged only by users with ""pull request review"" privileges.  It can be realized for example by:  1. Adding  new ""Reviewer"" role to repository collaborators groups/users.  ""Reviewer"" role will have all Developer's role  privileges and additional privilege to merge pull request on protected branches. ![image](https://user-images.githubusercontent.com/8675455/31054296-15fc8ece-a6b0-11e7-9741-06cf66df0805.png)   2. Adding ""Review to merge"" option to repository: Settings -> Branches ![image](https://user-images.githubusercontent.com/8675455/31054263-5cfd98be-a6af-11e7-8c3b-cb909d7bea9b.png)      ","false","feature"
"Commit diffs display ""Not supported""","**Impacted version**: 4.17.0  **Deployment mode**: Tested on locally-hosted standalone and heroku  **Problem description**: Viewing the details of a commit displays ""Not supported"" for every file diff.  ![2017-09-30 13-10-41 screenshot](https://user-images.githubusercontent.com/1478389/31048745-1d5612b4-a5e1-11e7-99c7-37981d2eb62d.jpg) ","false","bug"
"Add additional system paths to reserved names",,"true","improvement"
"Protected branch: ""Include administrators"" option works only for administrator (but not for repository administrator)","Found on version: 4.16  1. Create protected branch with one status check 2. Do not check   > Include administrators - Enforce required status checks for repository administrator  3. add example user to repo collaborators ![image](https://user-images.githubusercontent.com/8675455/30991232-834f28aa-a4a4-11e7-9b5c-e435c13f00f4.png) 4. create pull request to protected branch  Even with unchecked ""Include administrators"" option user is not able to merge pull reuest without passing status check.   Regards Kuba   ","false","bug"
"add docker hint","I have been testing the container for a few months in my university and it works fine. And I will try to update the container as soon as possible if a new gitbucket version is available.","true",
"Question: Eclipse Mylyn TaskRepository with gitbucket possible?","Hi,  I have a running installation of Gitbucket an use the issues to track my work in my eclipse projects. Now I asked myself if there is a way to connect the Mylyn Plugin (maybe with the GitHub Connector)? I could not find anything on the web and in the wiki, so I try this way.  If there isn't a way do you have experience how to implement such a connector?? I have a deep knowledge in Java (a little bit in scala) and can support you or implement such a connector maybe?  Thanks in advance  kind regards  Dirk","false","question"
"Markdown incorrectly escapes ampersand","## Issue **Impacted version**: 4.16.0 and below  **Deployment mode**: N/A  **Problem description**:  Markdown rendering of code in ticks will incorrectly escape the ampersand character.      ```     one=1&two=2     ```  Will render as:      one=1&amptwo=2  Same behavior if code is in one tick (`) or three ticks (```). ","false","bug"
"Remote sends output even though --quiet or -q is passed","## Issue **Impacted version**: 4.13.0  **Deployment mode**: with an http frontend (not sure how configured)  **Problem description**: When pushing with the Git command line to a Gitbucket repository and thereby passing -q or --quiet to the git push command, the remote (Gitbucket) still sends output back and therefore fails to behave as expected. What the -q and/or --quiet parameter (on the client side) does is: - squelch the output from the sending side (i.e. local/client) - ask ""quiet"" to the receiving side (i.e. remote/gitbucket), if they know how to be quiet. That last part is what's not being handled correctly by Gitbucket, as far as I can see.  It is annoying, as Git outputs to stderr instead of stdout, causing errors and fails in continuous deployment. When specifying -q, I am expecting no output at all, unless an error occurs.  Steps to reproduce: - have a git repository - change something - commit - push with -q or --quiet parameter  Look for -q or --quiet at https://git-scm.com/docs/git-push _Note: I am using git version 2.14.1.windows.1_","false","improvement"
"Anchors Url Encoding","## Issue **Impacted version**: 4.15.0  **Deployment mode**: standalone app  **Problem description**: Rendering of .md documents in the Wiki. If the link (Anchor) contains Unicode? characters the anchor does not work. `- [Criação Mailbox Pessoal](#cria%C3%A7%C3%A3o-mailbox-pessoal)` If however we change the link to the actual character it works! `- [Criação Mailbox Pessoal](#criação-mailbox-pessoal)`  This would be ok but my .documents have a TableOfContents generated by another app (Markdown Preview Enhanced) wich encode the links (as it's supposed!).  So, hyperlinks are not beeing handled as supposed ","false","bug"
"Drop uploadable file type limitation","Fixes #1714","true","improvement"
"Duplicate Org and Duplicate Repository Functionality.","A missing feature that would be very useful when testing (and learning/teaching too), would be to have a ""duplicate org"" and ""duplicate repository"" feature (maybe just for the admin users).  It would allow the users to easily try stuff, without breaking the important things too , so users will learn much faster.  The user would be prompoted for a new name (of the org or of the repo). Everything what's under an org or a repo would be duplicated: sources/wiki/issues/rights/etc.  Thank you.","false","feature"
"Refuse deletion of the default branch","Fixes #1705","true","bug"
"Move to sbt 1.0",,"true","task"
"Use account.fullName instead of userName for Web UI edit, Wiki uploads.","In editing file by Web UI, GitBucket adds account name to commit's author (ex. kounoike). But in merging PR, initializing repository and wiki editing, GitBucket uses user's fullname as author (ex. KOUNOIKE Yuusuke). These actions should be use same rule.  This PR changes author from userName to fullName for editing file and uploading to Wiki.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Question? Why are file types limited in Issue Attachments?","## Issue **Impacted version**: 4.15.0  **Deployment mode**: Tomcat https  **Problem description**: Trying to attach a "".doc"" file to an issue results in the following response:  `Uploading your files... Unfortunately, we don't support that file type. Try again with a PNG, GIF, JPG, DOCX, PPTX, XLSX, TXT, or PDF.`  Why is this restriction there? We needed to attach a doc file and not a docx file as we have a tool that we use that can only parse "".doc"" files and not "".docx"" files and this document is relevant to the issue. Is there anywhere that this can be configured? ","false","improvement"
"repo > Settings > Danger Zone > Garbage collection doesn't executed.","git.gc() returns GarbageCollectCommand. It needs call() for execute GC.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Allow anonymous access to github style git url redirect. fix #1701","This PR fix #1701. Allow `git clone http://server/owner/repo.git`.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Make Mailer API more general",,"true","improvement"
"GitBucket no longer works in Tomcat on CentOS 7.4","CentOS 7.4 has been released today. I used to run GitBucket under Tomcat on 7.3 just fine, but on 7.4 it no longer works properly. The avatars are not loaded correctly and the SELinux logs are full of denied's where the Tomcat process is trying to write to /usr/share/tomcat. Where it really isn't supposed to write.  The change in CentOS 7.4 is that the `tomcat` process used to run unconfined, but now it's running as `tomcat_t`. It caused a lot of troubles because we run around 5 different Tomcat instances with dozens of webapps, but I was able to resolve them all - except GitBucket.  With GitBucket I tracked down the way it's trying to access /usr/share/tomcat:  ~~~ type=AVC msg=audit(1505410685.451:4336): avc:  denied  { write } for  pid=27977 comm=""java"" name=""tomcat"" dev=""dm-0"" ino=395019 scontext=system_u:system_r:tomcat_t:s0 tcontext=system_u:object_r:usr_t:s0 tclass=dir type=AVC msg=audit(1505410840.957:4341): avc:  denied  { add_name } for  pid=28175 comm=""java"" name="".java"" scontext=system_u:system_r:tomcat_t:s0 tcontext=system_u:object_r:usr_t:s0 tclass=dir type=AVC msg=audit(1505410969.888:4347): avc:  denied  { create } for  pid=28358 comm=""java"" name="".java"" scontext=system_u:system_r:tomcat_t:s0 tcontext=system_u:object_r:usr_t:s0 tclass=dir type=AVC msg=audit(1505411059.665:4353): avc:  denied  { create } for  pid=28511 comm=""java"" name=""fcinfo120796096459132689.tmp"" scontext=system_u:system_r:tomcat_t:s0 tcontext=system_u:object_r:usr_t:s0 tclass=file type=AVC msg=audit(1505412115.563:138): avc:  denied  { create } for  pid=994 comm=""java"" name=""fcinfo6886663042429099336.tmp"" scontext=system_u:system_r:tomcat_t:s0 tcontext=system_u:object_r:usr_t:s0 tclass=file type=AVC msg=audit(1505412115.563:138): avc:  denied  { write } for  pid=994 comm=""java"" path=""/usr/share/tomcat/.java/fonts/1.8.0_144/fcinfo6886663042429099336.tmp"" dev=""dm-0"" ino=401105 scontext=system_u:system_r:tomcat_t:s0 tcontext=system_u:object_r:usr_t:s0 tclass=file ~~~  Now one has to wonder, why would GitBucket want to access /usr? Here's the CentOS tomcat.conf:  ~~~ TOMCAT_CFG_LOADED=""1"" TOMCATS_BASE=""/var/lib/tomcats/"" JAVA_HOME=""/usr/lib/jvm/jre"" CATALINA_HOME=""/usr/share/tomcat"" CATALINA_TMPDIR=""/var/cache/tomcat/temp"" SECURITY_MANAGER=""false"" ~~~  So it seems like GitBucket is trying to reach the work/tempdir via `$CATALINA_HOME` as that's the one and only variable where `/usr` is involved.  I've tried to override that via server.xml with `workDir` and `temp_dir`:  ~~~ <Context path="""" docBase=""gitbucket"" workDir=""/var/cache/tomcat/work"">     <Parameter name=""gitbucket.home"" value=""/data/gitbucket"" override=""false"" />     <Parameter name=""temp_dir"" value=""/data/temp"" override=""false"" />     <WatchedResource>WEB-INF/web.xml</WatchedResource> </Context> ~~~  But nope, still the same errors. In fact, the temp dir isn't even touched. The work dir contains `Catalina/localhost/_` and `Catalina/localhost/gitbucket` but they're both empty. Then I went as far as to disable SELinux altogether, and guess what, GitBucket still produces the same symptoms: avatars are missing.  This was on 4.15. Then I tried to update to 4.16, now GitBucket produces a horde of additional errors:  ~~~ Sep 14 20:12:27 code server: 20:12:27.043 [http-bio-8080-exec-1] ERROR g.core.controller.AccountController - Catch unhandled error in request: org.apache.catalina.connector.RequestFacade@386e1cc Sep 14 20:12:27 code server: java.lang.ArrayIndexOutOfBoundsException: 0 Sep 14 20:12:27 code server: at sun.font.CompositeFont.getSlotFont(CompositeFont.java:351) Sep 14 20:12:27 code server: at sun.font.CompositeGlyphMapper.initMapper(CompositeGlyphMapper.java:81) Sep 14 20:12:27 code server: at sun.font.CompositeGlyphMapper.<init>(CompositeGlyphMapper.java:62) Sep 14 20:12:27 code server: at sun.font.CompositeFont.getMapper(CompositeFont.java:409) Sep 14 20:12:27 code server: at sun.font.CompositeFont.canDisplay(CompositeFont.java:435) Sep 14 20:12:27 code server: at java.awt.Font.canDisplayUpTo(Font.java:2026) Sep 14 20:12:27 code server: at gitbucket.core.util.TextAvatarUtil$.textAvatar(TextAvatarUtil.scala:86) Sep 14 20:12:27 code server: at gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$13(AccountController.scala:202) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$11(AccountController.scala:199) Sep 14 20:12:27 code server: at scala.Option.flatMap(Option.scala:171) Sep 14 20:12:27 code server: at gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$10(AccountController.scala:194) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279) Sep 14 20:12:27 code server: at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) Sep 14 20:12:27 code server: at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) Sep 14 20:12:27 code server: at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) Sep 14 20:12:27 code server: at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) Sep 14 20:12:27 code server: at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253) Sep 14 20:12:27 code server: at scala.Option.flatMap(Option.scala:171) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251) Sep 14 20:12:27 code server: at scala.collection.immutable.Stream.flatMap(Stream.scala:490) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) Sep 14 20:12:27 code server: at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) Sep 14 20:12:27 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Sep 14 20:12:27 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) Sep 14 20:12:27 code server: at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) Sep 14 20:12:27 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Sep 14 20:12:27 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) Sep 14 20:12:27 code server: at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) Sep 14 20:12:27 code server: at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) Sep 14 20:12:27 code server: at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) Sep 14 20:12:27 code server: at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) Sep 14 20:12:27 code server: at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at scala.Option.getOrElse(Option.scala:121) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) Sep 14 20:12:27 code server: at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) Sep 14 20:12:27 code server: at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) Sep 14 20:12:27 code server: at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) Sep 14 20:12:27 code server: at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) ~~~  Any ideas?","false",
"Keep hash when sign in.","this PR fixes #1706   ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"deploy_key generation","  running gitbucket on tomcat8  **Problem description**: Unable to locate the deploy key in gitbucket. ![deploykey](https://user-images.githubusercontent.com/29204316/30360542-b07a5c64-986f-11e7-8b05-c0d5df34c3d6.png)  - i used following command to generate the deploy key ssh-keygen -t rsa -b 4096 -C ""phani.nalla@redpinesignals.com"" i didn't give any passphrase and passwords. cat ~/.ssh/id_rsa.pub copied this id in ""/repo/settings/deploykey"" - it throws an error as follows: deloy_key_hq (Key is invalid.)   Please lookinto this and do needful.  Thanks, Phani Kumar.   ","false","question"
"Line select doesn't work when sidebar collapsed","### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.16.0  **Deployment mode**: standalone  **Problem description**: - browse text file by repository viewer. - collapse sidebar. - select line number - it doesn't work - when expand sidebar, it works. ","false","bug"
"Anchor dropped after signin","I'm using GitBucket with anonymous access disabled by settings. and assume I want to access http://localhost:8080/root/prtest/blob/master/test.txt#L100.  If anonymous access allowed or already login, I can read test.txt with Line 100. But, anonymous access disallowed and not logged in, This address redirected to sign-in page. And after sign-in, browser shows top of test.txt.  Then, scroll to Line 100 manually or paste URL to address bar again... It's not expected behavior.  ### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.16.0  **Deployment mode**: standalone  **Problem description**: - access to http://localhost:8080/root/prtest/blob/master/test.txt#L100 - redirect to /signin - enter username/password - browser shows http://localhost:8080/root/prtest/blob/master/test.txt  It should be http://localhost:8080/root/prtest/blob/master/test.txt#L100 ","false","improvement"
"NullPointerException occurs when open branches page ","I using 4.16.0 on Docker. I think same problem with #767. It is Jgit's bug. (http://www.eclipse.org/forums/index.php/t/361344/)  Following is the stacktrace shown.  ``` org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131) -- org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:857) org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:772) gitbucket.core.util.JGitUtil$.$anonfun$getBranches$2(JGitUtil.scala:971) scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:234) scala.collection.Iterator.foreach(Iterator.scala:929) scala.collection.Iterator.foreach$(Iterator.scala:929) scala.collection.AbstractIterator.foreach(Iterator.scala:1417) scala.collection.IterableLike.foreach(IterableLike.scala:71) scala.collection.IterableLike.foreach$(IterableLike.scala:70) scala.collection.AbstractIterable.foreach(Iterable.scala:54) scala.collection.TraversableLike.map(TraversableLike.scala:234) scala.collection.TraversableLike.map$(TraversableLike.scala:227) scala.collection.AbstractTraversable.map(Traversable.scala:104) gitbucket.core.util.JGitUtil$.$anonfun$getBranches$1(JGitUtil.scala:968) gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38) gitbucket.core.util.JGitUtil$.getBranches(JGitUtil.scala:964) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$80(RepositoryViewerController.scala:542) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:101) scala.Option.map(Option.scala:146) gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99) gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98) gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93) gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93) gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:31) gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$79(RepositoryViewerController.scala:536) org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285) org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278) org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277) gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:34) org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:34) org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253) scala.Option.flatMap(Option.scala:171) org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251) scala.collection.immutable.Stream.flatMap(Stream.scala:490) org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250) org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248) gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(flashMap.scala:145) org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(flashMap.scala:145) org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(flashMap.scala:145) org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(flashMap.scala:145) org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(flashMap.scala:145) org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) gitbucket.core.servlet.PluginControllerFilter$FilterChainWrapper.doFilter(PluginControllerFilter.scala:41) gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:33) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) scala.Option.getOrElse(Option.scala:121) org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:34) org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:34) org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:34) org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:34) org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:34) org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:34) org.scalatra.FlashMapSupport.handle(flashMap.scala:145) org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:34) org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:73) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:207) slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:207) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:200) com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:207) gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751) org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582) org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226) org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180) org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512) org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112) org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169) org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134) org.eclipse.jetty.server.Server.handle(Server.java:534) org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320) org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283) org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108) org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93) org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303) org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148) org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136) org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671) org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589) java.lang.Thread.run(Thread.java:748) ```","false",
"How to configure standalone GitBucket to use https","## Issue **Impacted version**: 4.15.0  **Deployment mode**: standalone  **Problem description**: I've been searching for a while now and I can't find a definitive answer on how to configure the standalone GitBucket to use https.  I have a keystore file ready but I don't know how to reference it and supply the password when calling the command line ""java -jar gitbucket.war"" and also how to force the https connection.  I have seen various issues that mention that https using the standalone GitBucket is not possible, but then I have also seen that adding --https=true was possible, but then it was deprecated, so I'm a bit confused.  Any help would be greatly appreciated","false","question"
"Change URL with commit ID when user selects line(s).","related to #1702. In GitHub, if user select lines in blob view, user needs to switch commit URL by 'y' key. Because it maybe changes after some commits pushed to the branch. But, I assume '/user/repo/blob/branch/path/to/file.ext#L1-L3' link is BAD URL. It should be changed to URL with commit ID automatically. This PR implements such behavior.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Transfer to URL with commit ID by ""y"" key","GitHub (and also GitLab) supports keyboard shortcut `y` which transfers a browser to the URL with commit ID. GitBucket should support it.","false","feature"
"GitHub compat-style URL doesn't works when anonymous access disabled.","GitHub compatible HTTP git URL doesn't works when anonymous access disabled. It is necessary feature for Jenkins integration.  ### Before submitting an issue to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.16.0  **Deployment mode**: tested with Tomcat 8/embedded  **Problem description**: `git clone http://server/user/repo.git` doesn't works when anonymous access is disabled.  ``` C:\Users\kounoike\Documents\dev>git clone http://localhost:8080/root/test.git Cloning into 'test'... fatal: unable to update url base from redirection:   asked for: http://localhost:8080/root/test.git/info/refs?service=git-upload-pack    redirect: http://localhost:8080/signin;jsessionid=apdme3qj5uk6153f9mfelss6c?redirect=%2Froot%2Ftest.git%2Finfo%2Frefs%3Fservice%3Dgit-upload-pack ```  The redirect URL http://localhost:8080/signin;... shows unauthorized request response. In 4.15 / anonymous access allowed, it can correctly cloning.  ## solving this issue  I think this problem introduced by 7d7c11aa1a42b25073944209c8209367697a7ddb It changes definition order of two `get`. These `get` also matches `git clone` request.  In prior version, the request matches to `get(""/*/*/info/refs"")` first. It returns redirect response. But in 4.16, the request matches to `get(!context.settings.allowAnonymousAccess, context.loginAccount.isEmpty)` first. It returns Unauthorized response.  There is two solution for solving this Issue.  1. change order of these two `get` definition. 2. add `!context.currentPath.endsWith(""/info/refs"") to if-condition.  I think solution 2 is better because 1. is not describe problem.  Can I make PR based on solution 2?","false","bug"
"Add the ability to allow merging out-of-date PR branches","On GitHub, if a branch is protected, it can be specified whether to allow merging out-of-date branches.  See the **loose** setting here: https://help.github.com/articles/types-of-required-status-checks/  This is useful if the development team does not use any automated tests or CI, but usually has multiple PRs simultaneously.  This behavior can be activated on GitHub via a checkbox after activating the status checks option, but GitBucket has no such checkbox.","false","feature"
"list commits of 1 branch from gitbucket","I am using GitBucket 4.16.0  I have a repository [MyRepository], and i have created [devel1] branch. Now i want to display list committed of [devel1] branch with files list (using GitBucket API).  I have using URL such as: GET /api/v3/repos/:owner/:repo/commits but the server returned ""Not Found"" message.  Any idea for help me. Thanks you and sorry for my English.","false","question"
"code block rendering is incorrect when use together with gitbucket-asciidoctor-plugin","## Issue **Impacted version**: 4.16  **Deployment mode**: standalone app  **Problem description**:  I used the GitBucket together with [gitbucket-asciidoctor-plugin](https://github.com/asciidoctor/gitbucket-asciidoctor-plugin/)(gitbucket-4.10-asciidoctor-plugin-assembly-1.0.2.jar), but it does not work fine when using a code block as follow:   asciidoc source: ```adoc = Test  .Simple Java class [source,java] ---- public class Sample { } ----  This is a sample java code. ```  It is rendering as follow:  ![asciidoc](https://user-images.githubusercontent.com/5616270/30119464-c6618f16-9360-11e7-92ac-3df23f4bdc9d.png)  I think a `min-height` of `content` class is too much. I will expect the following rendering:  ![asciidoc-expected](https://user-images.githubusercontent.com/5616270/30119661-73ffc386-9361-11e7-98a5-c325d09a623a.png)   What do you think?  ","false","plugin"
"Capitalize GitBucket in plugin description","Could you fix a comment in Pages plugin description?","true",
"Add ssh_url to web hook request and API response","Closes #1693 ","true","improvement"
"Plugin controllers mapping bug","## Issue **Impacted version**: 4.15.0 or higher  **Deployment mode**: Any  **Problem description**: Since GitBucket 4.15.0, plugin controllers mapping behavior has been changed by introducing hot deployment capability. Now plugins have to register controllers as `/*`. But this change was unintended stuff. So it should be fixed to be possible to register controllers as specific paths.","false","bug"
"Migration from H2 to MariaDB: SQLSyntaxErrorException: (conn:72) Query was empty","## Issue **Impacted version**: 4.16.0 (and probably others before as well)  **Deployment mode**: standalone app with an http frontend (httpd)  **Problem description**:  When upgrading to 4.16.0, I decided to migrate from H2 to MariaDB. The migration was quite simple. I followed the instructions on the wiki page. Unfortunately, I was not able to import the exported data via the admin gui interface. I got the error ""SQLSyntaxErrorException: (conn:72) Query was empty"" within the log file and on the browser.  Importing the data via command line works perfecty, i.e.  * `mysql -u{user} -p{password} gitbucket </tmp/gitbucket-export-143901791709498677.sql`","false","waiting 4 user feedback"
"Include ssh_url in webhook payload","Impacted version: 4.12.1  Issue --- Hello! We are in the process of using gitbucket for our buildchain and discovered a problem with the webhooks. As it seems, the gitbucket webhook only includes the http_url, clone_url and html_url in the payload. We are using a Jenkins as our build server and configured it with the github plugin (since gitbucket implements the github API). The builds are triggered properly when the SCM is configured via https but don't trigger when using ssh to connect to gitbucket. After further investigation, I can see in the logs, that the payload is received on the jenkins side but since it does not include the ssh_url, the jenkins does not find any matching jobs with the given repository url (which is only https). As stated in the github API (https://developer.github.com/v3/activity/events/types/#pushevent) the ssh_url is a possible parameter, so I assume the build would trigger properly, if the the ssh_url is passed via the payload. This might be a simple addition to https://github.com/gitbucket/gitbucket/blob/master/src/main/scala/gitbucket/core/api/ApiRepository.scala.  Thanks in advance, Lennart","false","improvement"
"PullRequestEvent doesn't trigger Jenkins when merge [merged key always == false]","## Issue **Impacted version**: 4.15.0  **Deployment mode**:   - I host a GitBucket instance on [Clever Cloud](https://www.clever-cloud.com/) (PaaS provider) at http://gitbucket-app-devops-demo.cleverapps.io/ - I host a Jenkins instance on [Clever Cloud](https://www.clever-cloud.com/) too at http://jenkins-app-devops-demo.cleverapps.io/  **Problem description**:  - I setup GitBuket and Jenkins as I explain here: https://github.com/gitbucket/gitbucket/wiki/Setup-Jenkins-GitHub-Branch-Source-plugin to use the **Jenkins GitHub Branch Source plugin**   All works fine: - branches are detected - each commit triggers Jenkins (using Jenkins file)  Except: - a merge on a branch (from a pull request) doesn't trigger Jenkins  So, if I want to use, eg the GitHub flow or Feature flow and automatically deploy my application when I merge from a PR into `master`, I can't  > remark: I checked all the events to trigger the webhook  **Informations**  I created a webapp to get the payload of the `PullRequestEvent`, when I merge and close the pull, I get this result:  - `req.headers['x-github-event']` : `pull_request` - `action` : `closed` - `req.body.pull_request.merged` : `false`  According https://developer.github.com/v3/activity/events/types/#pullrequestevent > ""If the action is ""closed"" and the merged key is true, the pull request was merged""  Hope it helps 🙂   ","false",
"Push fails with authentication error","## Issue **Impacted version**: 4.15.0  **Deployment mode**:  I'm running it locally on my computer on an external hard drive.   **Problem description**:  I set up a repo and (as usual) the setup details pop up:      git remote add origin http://127.0.0.1:8080/git/LunarWatcher/MyRepo.git     git push -u origin master  I am new to GitBucket so I copy-pasted the URL (I know Git, so I know I got that part right) to make sure it (URL) was right. It is, it connects fine when it try to push. I know the connection is fine as a popup requesting username and password shows up.  After entering username and password, it tells me the authentication failed.  The command and what it prints:      $ git push -u origin master     warning: Setting remote service path not supported by protocol.     fatal: Authentication failed for 'http://127.0.0.1:8080/git/LunarWatcher/MyRepo.git/'  And no, there is nothing wrong with the username or password. I still have the `root` user around and even tried with that and it still failed. The username and password is correct.  Reproduction:  * New repo * `git push` to the repo    ","false","question"
"blocking-slick-32: 0.0.9 -> 0.0.10","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"recovery from repository","Hi,  My gitbucket settings were initialized unintentionally, but git repository is still fine. Is there any method to recover past state ?   Thanks for you cooperation!  Cho ","false","question"
"Unable to clone repository with name contains ""+"" via ssh ","## Issue **Impacted version**: 4.15.0  **Deployment mode**:  builtin jetty in CentOS7  **Problem description**: Unable to clone repository with name contains ""+"" sign via ssh . But I can clone it via HTTP.  ``` $ git clone ""ssh://gitbucket:22220/test/te+st.git"" Cloning into 'te+st'... Unknown command: git-upload-pack '/test/te+st.git' fatal: Could not read from remote repository.  Please make sure you have the correct access rights and the repository exists. ```  I haven't tested but I suspect that this regex causes error. https://github.com/gitbucket/gitbucket/blob/614bba4a0ffa3890f775e43ee9cfeac0ae46b188/src/main/scala/gitbucket/core/ssh/GitCommand.scala#L22 ","false","bug"
"Throw Execption when rename repository ","**gitbucket version**: 4.15.0 **in Tomcat 9**  **Problem description**: - *rename repository * - *delete repository *  **Exception**(rename repository) org.h2.jdbc.JdbcSQLException: Referential integrity constraint violation: ""IDX_WATCH_FK0: PUBLIC.WATCH FOREIGN KEY(USER_NAME, REPOSITORY_NAME) REFERENCES PUBLIC.REPOSITORY(USER_NAME, REPOSITORY_NAME) ('root', 'test')""; SQL statement: delete from ""REPOSITORY"" where (""REPOSITORY"".""USER_NAME"" = ?) and (""REPOSITORY"".""REPOSITORY_NAME"" = ?) [23503-195]  BTW, **All GitBucket data is stored in HOME/.gitbucket**(in https://github.com/gitbucket/gitbucket/) WHERE it is? I can't find it, I delete the webapp **gitbucket** in tomcat and redeploy, but all data not lost ","false","bug"
"NullPointerException when getting a tree through API","## NullPointerException occurred when getting a tree through API **Impacted version**: 4.14.1  **Deployment mode**: under webcontainer (tomcat8) without http frontend  **Problem description**: - A repository ""test"" is under owner ""yoshio"" - The repository has one file ""test.txt"" which contains text ""test"" - The current sha is 71d7826153147bdd56facc0a2e22ba77be9296f4 - I wanted to get a tree, so accessed to url ""http://{hostname}:8080/gitbucket/api/v3/repos/yoshio/test/git/trees/71d7826153147bdd56facc0a2e22ba77be9296f4"" - Following error occurred: ``` java.lang.NullPointerException 	at gitbucket.core.controller.ApiControllerBase.$anonfun$$init$$37(ApiController.scala:206) 	at gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38) 	at gitbucket.core.controller.ApiControllerBase.$anonfun$$init$$36(ApiController.scala:203) 	at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:101) 	at scala.Option.map(Option.scala:146) 	at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99) 	at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) 	at gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98) 	at gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93) 	at gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93) 	at gitbucket.core.controller.ApiController.referrersOnly(ApiController.scala:18) 	at gitbucket.core.controller.ApiControllerBase.$anonfun$$init$$35(ApiController.scala:201) 	at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285) 	at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278) 	at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277) 	at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) 	at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) 	at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253) 	at scala.Option.flatMap(Option.scala:171) 	at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251) 	at scala.collection.immutable.Stream.flatMap(Stream.scala:490) 	at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250) 	at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248) 	at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at gitbucket.core.servlet.GHCompatRepositoryAccessFilter.doFilter(GHCompatRepositoryAccessFilter.scala:31) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at gitbucket.core.servlet.ApiAuthenticationFilter.doFilter(ApiAuthenticationFilter.scala:29) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:190) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:190) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:183) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:190) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213) 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) 	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) 	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616) 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) 	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) 	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) 	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1504) 	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1460) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) 	at java.lang.Thread.run(Thread.java:748) ``` - I also tried this with other repositories, but the result is same. - There are following files in the plugins directory:   - gitbucket-4.10-asciidoctor-plugin-assembly-1.0.2.jar   - gitbucket-explorer-plugin_2.12-3.0.0.jar   - gitbucket-ipynb-plugin_2.12-0.2.1.jar   - gitbucket-commitgraphs-plugin_2.12-4.12.0.jar   - gitbucket-gist-plugin_2.12-4.10.0.jar   - gitbucket-network-plugin_2.12-1.4.jar   - gitbucket-emoji-plugin_2.12-4.4.0.jar   - gitbucket-html5media-plugin_2.12-1.0.1.jar","false",
"Notification emails are not sent for PR code comments","In GitBucket 4.15 notification emails are not being sent for comments made inline, in the ""Files Changed"" tab. PR comments made under ""Conversation"" are received just fine so it's not a configuration error. Any ideas?","false","improvement"
"Traverse LDAP groups","I'm on 4.15 and LDAP auth works fine with the top level group. My filter is like:  ~~~ memberOf=CN=Code Users,OU=Permission,OU=LDAP,OU=Groups,OU=Foobar,DC=ad,DC=foobar,DC=com ~~~  Now the problem occurs if I add a group (which I'm a member of) to `Code Users` in which case GitBucket won't let me in. Apparently it won't traverse groups in the group, only users in the group.  Note: for performance reasons, some apps add an option to limit the lookup level, i.e. only traverse the 1st, 2nd, ... level.  Any ideas?","false","LDAP/SSO"
"Fix branch API did not accept branch name with slash","This pull request fixes the branch API did not accept branch name with slash such as `feature/foo`. It improves Jenkins Multi-branch Pipeline can handle branch name with slash.  ### Test result  Prerequisite:  - Create a repository `hello/foo` - Create branches `master` and `feature/foo`  Result:  - http://localhost:8080/api/v3/repos/hello/foo/branches/master -> 200 - http://localhost:8080/api/v3/repos/hello/foo/branches/feature/foo -> 200 - http://localhost:8080/api/v3/repos/hello/foo/branches/feature/notexists -> 404  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"""Not found"" when creating a new folder from within the webui","## Issue **Impacted version**: 4.14.1 and 4.15.0 and probably many others  **Deployment mode**: *standalone app with an http frontend (apache httpd)*  **Problem description**: - Open the webui - Look a a project within gitbucket - Click on the plus sign ""+"" - For the filename, enter {folder}/{file}, for example ""new-folder/tst.md"" - For the file content, enter some dummy lines - Click on ""Commit changes""  Now, an error message will be displayed:  - address bar: `https://mydomain.com/gitbucket/dp/sandbox/blob/master/a%2Fa.md` - error message: `The requested URL /gitbucket/dp/sandbox/blob/master/a/a.md was not found on this server.`  **Solution**  Add this to the configuration of the apache httpd:  ```         AllowEncodedSlashes NoDecode         # Apache22: AllowEncodedSlashes On ```  I've updated the wiki page accordingly. Maybe you need a similar modification for nginx, too? ","false",
"Drop JDK9 build","JDK9 build is often broken by unexpected reason. I can't handle it...","true",
"Users in different network to access cloud application with LDAP authentication","I would like to hear a suggestion from you on the solution that I am trying to build.  **Given situation:** 1. I have 4 different users in different network 2. One application hosted in cloud 3. Authenticate the users from different network using LDAP to access the application **Solution:** Using System.Directories namespace to validate the users against the LDAP individually. The users has to select their respective location during login.  **Question:**  1. Is this a right solution? 2. What is required from accessing the LDAP over the internet to validate the user? 3. Is there a way to identify the LDAP URL from the users email id?  Thanks. ","false","question"
"Unable to push into remote repo","### Before submitting an issue to GitBucket I have first:  - [*] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [*] searched for similar already existing issue - [*] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   Unable to push the data into repo  ## Issue **Impacted version**: xxxx  **Deployment mode**: deployed gitbucket.war on tomcat server in my ubuntu machine.  **Problem description**:When trying to push the large files getting the issue as follows: Counting objects: 108, done. Delta compression using up to 4 threads. Compressing objects: 100% (104/104), done. Writing objects: 100% (108/108), 9.73 MiB | 3.00 MiB/s, done. Total 108 (delta 29), reused 0 (delta 0) error: RPC failed; HTTP 403 curl 22 The requested URL returned error: 403 Forbidden fatal: The remote end hung up unexpectedly fatal: The remote end hung up unexpectedly Everything up-to-date  - I am trying to resolve this issue in many ways by set the origin,defined post buffer size,track the large files using git lfs.but no use  - clone the repo as easily but unable to push the 1.2 mb files. - *explain how to reproduce*  Counting objects: 3, done. Delta compression using up to 4 threads. Compressing objects: 100% (3/3), done. Writing objects: 100% (3/3), 408.46 KiB | 0 bytes/s, done. Total 3 (delta 0), reused 0 (delta 0) error: RPC failed; HTTP 403 curl 22 The requested URL returned error: 403 Forbidden fatal: The remote end hung up unexpectedly fatal: The remote end hung up unexpectedly Everything up-to-date ","false",
"Improve GitHub compatible URL","This pull request allows:  1. Users can access to a repository via GitHub style URLs, e.g.     - `git clone http://localhost:8080/hello/foo`     - `git clone http://localhost:8080/hello/foo.git`     - `git clone http://localhost:8080/git/hello/foo.git` 1. Users can access to a repository ended with `.git`, even if the user-agent did not contains `git` string.  Since git client initiates an operation with a request to URI `/info/refs`, it seems enough to catch and redirect for that. See [10.6 Git Internals - Transfer Protocols](https://git-scm.com/book/en/v2/Git-Internals-Transfer-Protocols) for details.  I've tested following commands with Git 2.10.1 (Mac), 2.11.0 (Jenkins Docker Bundled) and 2.14.1 (Windows). - ls-remote - clone - fetch - push  Of course tested with Jenkins multi-branch job.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"More visual information in PR/Issue/Branch view.","This PR makes more visual information to improve understandability.  - show branch name with color (same algorithm to TextAvatar)     - in Branches view     - in PR view - show avatar on top of issue/PR - show Issue/PR icon - skip owner name in PR description. (n commits into root:master from root:pr => n commits into master from pr)  branch colors: ![20170815-162113 - root test - google chrome](https://user-images.githubusercontent.com/6997928/29305881-e1e1da08-81d5-11e7-9408-75f525650aff.png)  ![20170815-162229 - update test txt - pull request 27 - root test - google chrome](https://user-images.githubusercontent.com/6997928/29305887-f127e264-81d5-11e7-968c-e4be9e9d290b.png)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"add AdminLTE skin selection feature.","This PR is simplified version of #1489. This PR can change only AdminLTE's default skins:  - black(-light) - blue(-light) - green(-light) - purple(-light) - red(-light) - yellow(-light)  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Handle errors to show errors prettify and logging it.","Now, GitBucket doesn't handle exceptions. It handled by scalatra default handler. When error thrown, error description and stack trace only displayed to user. There is no log. In some case, administrator can't see it. Then, administrator can't solve problem.  In this PR, handle Exceptions by `error {}` to show errors prettify and log it by logger.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"NoClassDefFoundError: slick/lifted/MappedProjection$ with latest HEAD","### Before submitting an issue to GitBucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] searched for similar already existing issue - [X] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: latest HEAD (UI says 4.15.0)  **Deployment mode**: *explain here how you use GitBucket : standalone app, under webcontainer (which one), with an http frontend (nginx, httpd, ...)*  Build via `sbt clean executable` after pulling latest changes on `master`; deploy into Tomcat 8 with Apache 2 reverse proxy.  **Problem description**: - *be as explicit has you can* - *describe the problem and its symptoms* - *explain how to reproduce* - *attach whatever information that can help understanding the context (screen capture, log files)* - *do your best to use a correct english (re-read yourself)*  Log in works, browse too. When clicking into a commit hash, blank page is reported, and Tomcat logs say:  ``` java.lang.NoClassDefFoundError: slick/lifted/MappedProjection$         at gitbucket.notifications.model.WatchComponent$Watches.$times(Watch.scala:15)         at slick.lifted.AbstractTable.toNode(AbstractTable.scala:43)         at slick.lifted.RepShape$.toNode(Shape.scala:114)         at slick.lifted.RepShape$.toNode(Shape.scala:106)         at slick.lifted.ShapedValue.toNode(Shape.scala:276)         at slick.lifted.TableQuery.toNode$lzycompute(Query.scala:301)         at slick.lifted.TableQuery.toNode(Query.scala:301)         at slick.lifted.Query.filterHelper(Query.scala:47)         at slick.lifted.Query.withFilter(Query.scala:60)         at slick.lifted.Query.filter(Query.scala:53)         at gitbucket.notifications.service.NotificationsService.getWatch(NotificationsService.scala:13)         at gitbucket.notifications.service.NotificationsService.getWatch$(NotificationsService.scala:11)         at Plugin.getWatch(Plugin.scala:12)         at Plugin.$anonfun$repositoryHeaders$2(Plugin.scala:41)         at scala.Option.map(Option.scala:146)         at Plugin.$anonfun$repositoryHeaders$1(Plugin.scala:38)         at gitbucket.core.html.menu$.$anonfun$apply$6(menu.template.scala:99)         at scala.collection.immutable.Stream.map(Stream.scala:415)         at gitbucket.core.html.menu$.apply(menu.template.scala:98)         at gitbucket.core.repo.html.commit$.apply(commit.template.scala:31)         at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$57(RepositoryViewerController.scala:436)         at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12)         at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$56(RepositoryViewerController.scala:433)         at gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38)         at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$55(RepositoryViewerController.scala:432)         at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$7(Authenticator.scala:104)         at scala.Option.map(Option.scala:146)         at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99)         at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12)         at gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93)         at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:31)         at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$54(RepositoryViewerController.scala:428)         at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285)         at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278)         at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277)         at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33)         at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33)         at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82)         at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81)         at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253)         at scala.Option.flatMap(Option.scala:171)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251)         at scala.collection.immutable.Stream.flatMap(Stream.scala:490)         at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250)         at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248)         at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at gitbucket.core.servlet.PluginControllerFilter$FilterChainWrapper.doFilter(PluginControllerFilter.scala:41)         at gitbucket.core.servlet.PluginControllerFilter.doFilter(PluginControllerFilter.scala:33)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at gitbucket.core.servlet.GHCompatRepositoryAccessFilter.doFilter(GHCompatRepositoryAccessFilter.scala:32)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:190)         at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:190)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:183)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:190)         at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)         at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)         at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)         at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505)         at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)         at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)         at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:956)         at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)         at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423)         at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079)         at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:625)         at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)         at java.lang.Thread.run(Thread.java:748) ```  I find the following slick JAR files into Tomcat:  ``` $ find /opt/tomcat/ -name '*slick*' /opt/tomcat/webapps/gitbucket/WEB-INF/lib/blocking-slick-32_2.12-0.0.9.jar /opt/tomcat/webapps/gitbucket/WEB-INF/lib/slick_2.12-3.2.1.jar ```","false","question"
"Show fullName in userName suggestion.","This PR add display fullName to userName suggestion provider.  ![20170814-152808 -](https://user-images.githubusercontent.com/6997928/29260502-463741ea-8105-11e7-8018-ff646d821a9b.png)  It is useful if many TANAKA/SATO/SUZUKI/... in your team.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Add support to MIME Text part in Email notification.","I use [Becky! 2](http://www.rimarts.co.jp/becky.htm) for receiving E-mail at work. My company restricts that don't use rendering HTML mail in Becky.   So, if commented below: ``` #1 #2 #3 #4 #5  **abc** ~~def~~ `ghi`  ` ` `python import sys print 42 print ""abc""  ` ` `  - this -  is     - list   1. ordered 1. list ```  it shows in Becky: ![20170814-145216 - nas - becky](https://user-images.githubusercontent.com/6997928/29259801-4491fb50-8100-11e7-97de-e4ac719c5492.png)  It is hard to understand comment.  Then I want to add original markdown as MIME Text part in gitbucket-notification-plugin. First step, I want to add MIME Text part support in GitBucket's Notifier.  In this PR, I added `textMsg: Option[String]` to `toNotify` and `send`. and call it with `None` by previous signature's one. It doesn't break plugin interface.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Call addedComment hook(send notification) at PR merged.","Current version of GitBucket doesn't send comment at PR merged. This PR fix it by calling addedComment hook.  ### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  ","true",
"Get single commit API","https://developer.github.com/v3/repos/commits/#get-a-single-commit  Closes #1656","true","feature"
"Add query string for redirect, required by git-2.11-1.","### Before submitting a pull-request to GitBucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  GitBucket 4.15.0 redirects `(context path)/user/repo.git` to `(context path)/git/user/repo.git` but,  git-2.11.1 or higher  version, it doesn't accept this redirect. Because, GitBucket 4.15.0 drops query string.  in this PR, I added query string to redirect URL. git-2.14.1 works correctly. ","true","bug"
"Improve concurrency of initializaton of the plugin system",,"true",
"Add REST endpoint to create and rename a group","## Issue **Impacted version**: 4.15.0  **Problem description**: - It would be great to have a REST method, which creates a group. - It would be great to have a REST method, which renames a group. - The endpoints (POST and PATCH) are described here https://developer.github.com/v3/enterprise-admin/orgs/ ","false","APIv3,feature,help wanted"
"Fix lint and typos",,"true",
"Pull Request Workflow Issue","Note that although this was demonstrated on 4.15.0, we are NOT saying this was a newly introduced problem.  This is the first time we've tried this, so cannot comment on when the problem appeared...  Gitbucket version: 4.15.0  Setup:  a)	There exists a group G with a limited number of members b)	There is a repo R in the group c)	User U1 is a member of G d)	User U2 is NOT a member of G e)	Settings on repo R include: Public, Forks allowed, “All users can view, create and comment on issues and pull requests”, and “All users can view, create and edit wiki pages”  Users U1 and U2 both wish to make contributions to R. Since U2 is not in the group, the only GitBucket way to do this is for U2 to fork the repo, make a change, and issue a pull request back to R.  The following procedure should work for either U1 or U2, but it results in an error for U2: 1)	User forks R to make repo U/R 2)	User clones U/R, makes a change in U/R, commits the change and pushes up to U/R in Gitbucket 3)	User goes the Gitbucket R page, clicks Pull Requests, then New Pull Request 4)	User selects U/R from the “head fork” pull-down menu XXX At this point, U2 gets an error page “Not Found” – this should not happen 5)	User optionally selects other branches to merge to or from 6)	User can preview the differences, then clicks “Create Pull Request” 7)	User optionally enters comments and clicks “Create Pull Request” again At this point, there should be a pending pull request on R  ","false",
"Another MD Issue Discovered","The following markdown does not render a horizontal rule line as it should:      ````     This is a paragraph     --------------------------     This is a paragraph after a horizontal rule  It appears that the `<hr>` tag is not even being generated in this case.  Note that this does work here on github.","false","bug"
"How To Updrade Old Gist DB","I inherited an old instance of GB which I've slowly being cleaning up.  However, the Gist database is very old and is having fits when I try to use latest Gist plugin with 4.15.0:  ...initialization: gitbucket-gist-plugin_2.12-4.10.0.jar java.lang.IllegalStateException: Plugin version is 4.10.0, but database version is 1.2  Best way to fix?","false","question"
"add a script for creating a rpm file from war file.","add a script for creating a rpm for Fedora  ### Before submitting a pull-request to Gitbucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Error during MySQL installation Gitbucket 4.15","**Impacted version**: 4.15 ** MySQL version**: MariaDB 10.0.30 **Deployment mode**: apache2 + tomcat7  **Problem description**: During first start of Gitbucket via tomcat I have error:  ``` java.lang.Thread.run(Thread.java:748) Caused by: java.sql.SQLException: View's SELECT contains a subquery in the FROM clause Query is: CREATE OR REPLACE VIEW ISSUE_OUTLINE_VIEW AS  SELECT    A.USER_NAME,    A.REPOSITORY_NAME,    A.ISSUE_ID,    COALESCE(B.COMMENT_COUNT, 0) + COALESCE(C.COMMENT_COUNT, 0) AS COMMENT_COUNT  FROM ISSUE A  LEFT OUTER JOIN (    SELECT USER_NAME, REPOSITORY_NAME, ISSUE_ID, COUNT(COMMENT_ID) AS COMMENT_COUNT FROM ISSUE_COMMENT    WHERE ACTION IN ('comment', 'close_comment', 'reopen_comment')    GROUP BY USER_NAME, REPOSITORY_NAME, ISSUE_ID  ) B  ON (A.USER_NAME = B.USER_NAME AND A.REPOSITORY_NAME = B.REPOSITORY_NAME AND A.ISSUE_ID = B.ISSUE_ID)  LEFT OUTER JOIN (    SELECT USER_NAME, REPOSITORY_NAME, ISSUE_ID, COUNT(COMMENT_ID) AS COMMENT_COUNT FROM COMMIT_COMMENT    GROUP BY USER_NAME, REPOSITORY_NAME, ISSUE_ID  ) C  ON (A.USER_NAME = C.USER_NAME AND A.REPOSITORY_NAME = C.REPOSITORY_NAME AND A.ISSUE_ID = C.ISSUE_ID)         at org.mariadb.jdbc.internal.util.LogQueryTool.exceptionWithQuery(LogQueryTool.java:146)         at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:223)         at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:212)         ... 48 more  Aug 05, 2017 8:57:18 PM org.apache.catalina.core.ApplicationContext log INFO: HTMLManager: list: Listing contexts for virtual host 'localhost' ```","false",
"Git LFS file lock support","Question: from what I understand, Git LFS v2 [introduced](https://github.com/git-lfs/git-lfs/wiki/File-Locking) file locks. Does GitBucket support this feature yet?","false","feature"
"fix getMergedComment for PR API merged field.","For merged-PR, `/api/v3/repos/:owner/:repo/pulls` API returns `""merged"": false`.  Because, getMergedComment finds comment with action = merged, but getCommentsForApi filters action = comment/close_comment/reopen_comment. (and finds ""merged"", not ""merge"")  And I'm not used to Slick, if there is more smart way to find merged comment, please teach me!  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"503 again in 4.14.1","Get 503 error when trying open gitbucket. The same result through: localhost, 127.0.0.1, ...keendns.net (through internet) and 8080 port. Vertion of GB is 4.14.1. Windows 10.  ``` D:\[SERVER]\gitBucket>java -jar D:\[SERVER]\gitBucket\gitbucket.war --gitbucket.home=D:\[SERVER]\gitBucket 2017-07-29 18:42:56.955:INFO::main: Logging initialized @161ms 2017-07-29 18:42:57.099:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT 2017-07-29 18:42:59.040:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@6956de9{/,null,null}{file:/D:/%5bSERVER%5d/gitBucket/gitbucket.war} java.lang.IllegalStateException: Failed to delete temp dir D:\[SERVER]\gitBucket\tmp         at org.eclipse.jetty.webapp.WebInfConfiguration.configureTempDirectory(WebInfConfiguration.java:376)         at org.eclipse.jetty.webapp.WebInfConfiguration.resolveTempDirectory(WebInfConfiguration.java:264)         at org.eclipse.jetty.webapp.WebInfConfiguration.preConfigure(WebInfConfiguration.java:69)         at org.eclipse.jetty.webapp.WebAppContext.preConfigure(WebAppContext.java:485)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:521)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.handler.StatisticsHandler.doStart(StatisticsHandler.java:252)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131)         at org.eclipse.jetty.server.Server.start(Server.java:422)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:389)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:121) 2017-07-29 18:42:59.130:INFO:oejs.AbstractConnector:main: Started ServerConnector@7cdbc5d3{HTTP/1.1,[http/1.1]}{0.0.0.0:8080} 2017-07-29 18:42:59.131:INFO:oejs.Server:main: Started @2340ms ```","false","waiting 4 user feedback"
"scala-2.12.3","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Get a single commit API","https://developer.github.com/v3/repos/commits/#get-a-single-commit ","false","feature"
"BUG: Sort by ""recently updated"" is not working","## Issue **Impacted version**: 4.13.0  **Deployment mode**:  using gitBucket which is hosted on a server of a university which is a collaborative research partner via a proxy of my company  **Problem description**: - Go to ""issue"" - Select to sort by ""Recently updated"" - All updates by other users are ignored.  In GitHub or GitLab, the update date and time are displayed under the title of the problem and sorted in that order. Of course, all updates, including updates by other users, will be reflected in the sort result.","false",
"Cannot define a password with special chars","## Issue **Impacted version**: 4.14.x  **Deployment mode**: *explain here how you use gitbucket : standalone app*  **Problem description**: Since 4.14.0 I can not define password containing special chars (like +, !, $, ...). The message return when I do that is ""Password contains invalid character."" It was not the case before even in 4.13 Is it normal ? Is there any new behavior modication in version 4.14 ?  Thank you in advance for your help Regards David ","false","question"
"Re-creating group does not work","## Issue **Impacted version**: 4.14.1  **Deployment mode**:  gitbucket : standalone app  **Problem description**: - Create group of a given name - Delete the group - Create the group of the same name again - **ERROR**: *User already exists.* ","false","question"
"support ed25519 key","support ed25519 key (#617)","true",
"The issue title in the log ""referenced the issue"" cannot be updated when the issue title changed","## Issue **Impacted version**: 4.13.0  **Deployment mode**:  using gitBucket which is hosted on a server of a university which is a collaborative research partner via a proxy of my company  **Problem description**: 1. create the first issue 1. create the second issue and refer to the first issue number 1. the log ""referenced the issue"" generated in the first issue 1. edit the second issue title 1. the second issue title in the log ""referenced the issue"" cannot be updated in the first issue  Best Regards  ","false",
"git fetch error on ver 4.14.1","Ver: 4.14.1 Java: 1.8 OS: Ubuntu 14.04 LTS  ## Issue   **Problem description**: $ git fetch remote: internal server error fatal: protocal error: bad pack header  error information in access log: `13:18:32.951 [Thread-65] ERROR gitbucket.core.ssh.GitCommand - null org.eclipse.jgit.transport.UploadPackInternalServerErrorException: null         at org.eclipse.jgit.transport.UploadPack.sendPack(UploadPack.java:1402)         at org.eclipse.jgit.transport.UploadPack.service(UploadPack.java:775)         at org.eclipse.jgit.transport.UploadPack.upload(UploadPack.java:668)         at gitbucket.core.ssh.DefaultGitUploadPack.$anonfun$runTask$4(GitCommand.scala:151)         at gitbucket.core.ssh.DefaultGitUploadPack.$anonfun$runTask$4$adapted(GitCommand.scala:148)         at gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38)         at gitbucket.core.ssh.DefaultGitUploadPack.runTask(GitCommand.scala:148)         at gitbucket.core.ssh.GitCommand.$anonfun$newTask$1(GitCommand.scala:42)         at java.lang.Thread.run(Thread.java:745) Caused by: org.eclipse.jgit.errors.MissingObjectException: Missing commit 43996944dba626dea6e76733e386181cefc11efe         at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:164)         at org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(RevWalk.java:903)         at org.eclipse.jgit.revwalk.RevCommit.parseHeaders(RevCommit.java:155)         at org.eclipse.jgit.revwalk.PendingGenerator.next(PendingGenerator.java:147)         at org.eclipse.jgit.revwalk.StartGenerator.next(StartGenerator.java:184)         at org.eclipse.jgit.revwalk.RevWalk.next(RevWalk.java:435)         at org.eclipse.jgit.revwalk.ObjectWalk.next(ObjectWalk.java:294)         at org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.findObjects(PackWriterBitmapWalker.java:120)         at org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPackUsingBitmaps(PackWriter.java:1876)         at org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(PackWriter.java:1671)         at org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(PackWriter.java:800)         at org.eclipse.jgit.transport.UploadPack.sendPack(UploadPack.java:1516)         at org.eclipse.jgit.transport.UploadPack.sendPack(UploadPack.java:1396)         ... 8 common frames omitted` ","false","waiting 4 user feedback"
"renaming repo fails with java.io.IOException: Unable to delete .pack file ","Hi,  Using Gitbucket 4.13.0 under Tomcat 8 on Windows.  I was trying to rename a repository from `dec-ont/seed-project` into `dec-ont/seed-project-angular` under 'options'. After hitting 'save' I get the traceback shown below.  Next, if I try to correct this by pushing a local copy of the repo to the server by doing `git remote add origin http://github/git/dec-ont/seed-project.git` `git push -u origin master` gives me: `fatal: remote error: Git repository not found`  Any hints?  Thanks.  Albert-Jan  ``` java.io.IOException: Unable to delete file: D:\repos\repositories\dec-ont\seed-project.git\objects\pack\pack-aef42bb6c214246c6b6cd744e46dc991442db23e.pack 	at org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:2381) 	at org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1679) 	at org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1575) 	at org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:2372) 	at org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1679) 	at org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1575) 	at org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:2372) 	at org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1679) 	at org.apache.commons.io.FileUtils.deleteDirectory(FileUtils.java:1575) 	at org.apache.commons.io.FileUtils.moveDirectory(FileUtils.java:2916) 	at gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$8(RepositorySettingsController.scala:127) 	at gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$8$adapted(RepositorySettingsController.scala:125) 	at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) 	at gitbucket.core.controller.RepositorySettingsControllerBase.$anonfun$$init$$5(RepositorySettingsController.scala:125) 	at gitbucket.core.util.OwnerAuthenticator.$anonfun$ownerOnly$2(Authenticator.scala:35) 	at gitbucket.core.util.OwnerAuthenticator.$anonfun$authenticate$3(Authenticator.scala:45) 	at scala.Option.map(Option.scala:146) 	at gitbucket.core.util.OwnerAuthenticator.$anonfun$authenticate$2(Authenticator.scala:40) 	at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) 	at gitbucket.core.util.OwnerAuthenticator.authenticate(Authenticator.scala:39) 	at gitbucket.core.util.OwnerAuthenticator.$anonfun$ownerOnly$1(Authenticator.scala:35) 	at io.github.gitbucket.scalatra.forms.ClientSideValidationFormSupport.$anonfun$post$2(ClientSideValidationFormSupport.scala:26) 	at io.github.gitbucket.scalatra.forms.package$.withValidation(package.scala:21) 	at io.github.gitbucket.scalatra.forms.ClientSideValidationFormSupport.$anonfun$post$1(ClientSideValidationFormSupport.scala:25) 	at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285) 	at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278) 	at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277) 	at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88) 	at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189) 	at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33) 	at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82) 	at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81) 	at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253) 	at scala.Option.flatMap(Option.scala:171) 	at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251) 	at scala.collection.immutable.Stream.flatMap(Stream.scala:490) 	at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250) 	at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248) 	at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178) 	at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79) 	at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58) 	at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33) 	at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33) 	at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53) 	at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70) 	at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33) 	at org.scalatra.FlashMapSupport.handle(flashMap.scala:145) 	at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33) 	at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37) 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at gitbucket.core.servlet.GHCompatRepositoryAccessFilter.doFilter(GHCompatRepositoryAccessFilter.scala:31) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39) 	at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:190) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:190) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:183) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:190) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) 	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) 	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616) 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:528) 	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1099) 	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) 	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520) 	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) 	at java.lang.Thread.run(Unknown Source) ``` ","false","duplicate"
"Test for oraclejdk9 build on Travis",,"true",
"Make preview-able comment editing forms","New issue or comment forms are preview-able, but editing forms are just a textarea. This pull request makes preview-able editing forms as well.","true","improvement"
"Gitbucket 4.14 with MySQL: Cannot add foreign key constraint","An upgrade from 4.13 to 4.14 is impossible with my MySQL db.  It creates the PRIORITY table, but then fails to add foreign key cosntraints.  ``` 2017-07-14 15:56:20.063:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@5dbf5634{/,file:///home/gitbucket/.gitbucket/tmp/webapp/,UNAVAILABLE}{file:/home/gitbucket/gitbucket-4.14.war} java.sql.SQLException: Cannot add foreign key constraint 	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:545) 	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:513) 	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:115) 	at com.mysql.cj.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:1983) 	at com.mysql.cj.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1826) 	at com.mysql.cj.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2034) 	at com.mysql.cj.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:1970) 	at com.mysql.cj.jdbc.PreparedStatement.executeLargeUpdate(PreparedStatement.java:5001) 	at com.mysql.cj.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1955) 	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) 	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) 	at io.github.gitbucket.solidbase.migration.MigrationUtils.updateDatabase(MigrationUtils.java:20) 	at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:93) 	at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:54) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:45) 	at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:29) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1(InitializeListener.scala:94) 	at gitbucket.core.servlet.InitializeListener.$anonfun$contextInitialized$1$adapted(InitializeListener.scala:52) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:190) 	at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:190) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:183) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:190) 	at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:52) 	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:843) 	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:533) 	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:816) 	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:345) 	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1406) 	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1368) 	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:778) 	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262) 	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:522) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) 	at org.eclipse.jetty.server.handler.StatisticsHandler.doStart(StatisticsHandler.java:252) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:131) 	at org.eclipse.jetty.server.Server.start(Server.java:422) 	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:105) 	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) 	at org.eclipse.jetty.server.Server.doStart(Server.java:389) 	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) 	at JettyLauncher.main(JettyLauncher.java:121) ```  Deployment is standalone mode.","false",
"Import github.com/git/git into gitbucket 4.14.0 , explore error on browser","## Issue **Impacted version**: 4.14.0 **JAVA version**: jdk1.8.0_111   **Deployment mode**:  standalone app with Nginx frontend  **Problem Description**: Next are my import steps: ----------------------------------------------- ``` git clone https://github.com/git/git cd git git push --mirror ssh://git@gitbucket.server:3222/mygit/git.git ``` Import steps are ok, just error when exploring reps on browser , next is the error information: --------------------------------------------------------- ```org.eclipse.jgit.errors.IncorrectObjectTypeException: Object 7214aea37915ee2c4f6369eb9dea520aec7d855b is not a commit.         at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:774)         at gitbucket.core.util.JGitUtil$.getRevCommitFromId(JGitUtil.scala:170)         at gitbucket.core.util.JGitUtil$.$anonfun$getRepositoryInfo$3(JGitUtil.scala:230)         at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:234)         at scala.collection.Iterator.foreach(Iterator.scala:929)         at scala.collection.Iterator.foreach$(Iterator.scala:929)         at scala.collection.AbstractIterator.foreach(Iterator.scala:1417)         at scala.collection.IterableLike.foreach(IterableLike.scala:71)         at scala.collection.IterableLike.foreach$(IterableLike.scala:70)         at scala.collection.AbstractIterable.foreach(Iterable.scala:54)         at scala.collection.TraversableLike.map(TraversableLike.scala:234)         at scala.collection.TraversableLike.map$(TraversableLike.scala:227)         at scala.collection.AbstractTraversable.map(Traversable.scala:104)         at gitbucket.core.util.JGitUtil$.$anonfun$getRepositoryInfo$1(JGitUtil.scala:229)         at gitbucket.core.util.SyntaxSugars$.using(SyntaxSugars.scala:38)         at gitbucket.core.util.JGitUtil$.getRepositoryInfo(JGitUtil.scala:221)         at gitbucket.core.service.RepositoryService.$anonfun$getRepository$2(RepositoryService.scala:227)         at scala.Option.map(Option.scala:146)         at gitbucket.core.service.RepositoryService.getRepository(RepositoryService.scala:220)         at gitbucket.core.service.RepositoryService.getRepository$(RepositoryService.scala:219)         at gitbucket.core.controller.RepositoryViewerController.getRepository(RepositoryViewerController.scala:31)         at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99)         at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12)         at gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93)         at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:31)         at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$3(RepositoryViewerController.scala:154)         at org.scalatra.ScalatraBase.liftAction(ScalatraBase.scala:285)         at org.scalatra.ScalatraBase.$anonfun$invoke$1(ScalatraBase.scala:279)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.invoke(ScalatraBase.scala:278)         at org.scalatra.ScalatraBase.invoke$(ScalatraBase.scala:277)         at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:33)         at org.scalatra.json.JsonSupport.$anonfun$invoke$1(JsonSupport.scala:88)         at org.scalatra.ApiFormats.withRouteMultiParams(ApiFormats.scala:189)         at org.scalatra.ApiFormats.withRouteMultiParams$(ApiFormats.scala:175)         at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:33)         at org.scalatra.json.JsonSupport.invoke(JsonSupport.scala:82)         at org.scalatra.json.JsonSupport.invoke$(JsonSupport.scala:81)         at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$3(ScalatraBase.scala:253)         at scala.Option.flatMap(Option.scala:171)         at org.scalatra.ScalatraBase.$anonfun$runRoutes$1(ScalatraBase.scala:251)         at scala.collection.immutable.Stream.flatMap(Stream.scala:490)         at org.scalatra.ScalatraBase.runRoutes(ScalatraBase.scala:250)         at org.scalatra.ScalatraBase.runRoutes$(ScalatraBase.scala:248)         at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:175)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)         at org.scalatra.ScalatraFilter.$anonfun$doNotFound$1(ScalatraFilter.scala:74)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$5(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$3(ScalatraBase.scala:178)         at scala.Option.getOrElse(Option.scala:121)         at org.scalatra.ScalatraBase.runActions$1(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase.$anonfun$executeRoutes$6(ScalatraBase.scala:187)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at org.scalatra.ScalatraBase.cradleHalt(ScalatraBase.scala:205)         at org.scalatra.ScalatraBase.executeRoutes(ScalatraBase.scala:187)         at org.scalatra.ScalatraBase.executeRoutes$(ScalatraBase.scala:153)         at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.$anonfun$handle$1(ScalatraBase.scala:126)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withResponse(DynamicScope.scala:79)         at org.scalatra.DynamicScope.withResponse$(DynamicScope.scala:77)         at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:33)         at org.scalatra.DynamicScope.$anonfun$withRequestResponse$1(DynamicScope.scala:59)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.DynamicScope.withRequestResponse(DynamicScope.scala:58)         at org.scalatra.DynamicScope.withRequestResponse$(DynamicScope.scala:56)         at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:33)         at org.scalatra.ScalatraBase.handle(ScalatraBase.scala:126)         at org.scalatra.ScalatraBase.handle$(ScalatraBase.scala:122)         at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:33)         at org.scalatra.servlet.ServletBase.handle(ServletBase.scala:53)         at org.scalatra.servlet.ServletBase.handle$(ServletBase.scala:46)         at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.$anonfun$handle$1(flashMap.scala:170)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.DynamicScope.withRequest(DynamicScope.scala:70)         at org.scalatra.DynamicScope.withRequest$(DynamicScope.scala:68)         at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:33)         at org.scalatra.FlashMapSupport.handle(flashMap.scala:145)         at org.scalatra.FlashMapSupport.handle$(flashMap.scala:144)         at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:33)         at org.scalatra.ScalatraFilter.$anonfun$doFilter$1(ScalatraFilter.scala:37)         at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)         at org.scalatra.ScalatraFilter.doFilter(ScalatraFilter.scala:37)         at org.scalatra.ScalatraFilter.doFilter$(ScalatraFilter.scala:32)         at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:70)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)         at gitbucket.core.servlet.GHCompatRepositoryAccessFilter.doFilter(GHCompatRepositoryAccessFilter.scala:31)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1759)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1(TransactionFilter.scala:39)         at gitbucket.core.servlet.TransactionFilter.$anonfun$doFilter$1$adapted(TransactionFilter.scala:30)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:190)         at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(TransactionalJdbcBackend.scala:26)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:190)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withSession(BlockingProfile.scala:183)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingDatabase.withTransaction(BlockingProfile.scala:190)         at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:30)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751)         at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)         at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)         at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)         at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)         at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)         at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)         at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)         at org.eclipse.jetty.server.Server.handle(Server.java:534)         at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)         at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)         at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283)         at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108)         at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)         at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)         at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)         at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)         at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)         at java.lang.Thread.run(Thread.java:745)``` ","false","bug"
"Failed to render pandoc markdown style code blocks in markdown file preview (and issue form)","## Issue **Impacted version**: 4.13.0  **Deployment mode**: using gitBucket which is hosted on a server of a university which is a collaborative research partner via a proxy of my company  **Problem description**: - Markdown document using markdown dialect (pandoc markdown) is committed to the repository. - When previewing this document with gitBucket, the code block is not recognized correctly. - The same problem also occurs on the issue form. [EDIT] - No problems with GitHub and GitLab  **Problem details**: - Pandoc markdown like R Markdown and PHP Markdown Extra can specify information (id, class, attribute) for setting styles enclosed in {}, like {# id. Class 1 attribute 1 = value 1}. - Fenced code blocks is one of them. - GitHub and GitLab ignore {} after the start mark (\`\`\`) of fenced code blocks, but gitBucket does not seem to ignore {}. - As a result, the code block is compressed to one line, the code block is not recognized, or the body between the code blocks enters the code block.  Please allow that the posted image is a captured image of gitBucket's issue form because I can not commit unnecessary documents to the servers of other organizations.  **the code block is compressed to one line**: ![gitbucket_issue_render_code_block_001_001](https://user-images.githubusercontent.com/18054170/28195382-cb93041c-6884-11e7-8d9f-bb51768d3b47.PNG)  ![gitbucket_issue_render_code_block_001_002](https://user-images.githubusercontent.com/18054170/28195541-d105d658-6885-11e7-85e1-9591cd1cf44e.PNG)  **the code block is not recognized**: ![gitbucket_issue_render_code_block_002_001](https://user-images.githubusercontent.com/18054170/28195560-fb7539d8-6885-11e7-85c1-d40f2a58823e.PNG)  ![gitbucket_issue_render_code_block_002_002](https://user-images.githubusercontent.com/18054170/28195562-ffe271b6-6885-11e7-9478-140a0b6cdbc4.PNG)  **the body between the code blocks enters the code block**: ![gitbucket_issue_render_code_block_003_001](https://user-images.githubusercontent.com/18054170/28195571-0e788ce2-6886-11e7-8102-bc7cf68310f0.PNG)  ![gitbucket_issue_render_code_block_003_002](https://user-images.githubusercontent.com/18054170/28195576-12ea75c4-6886-11e7-9fcb-1711842b1c9c.PNG)  Best Regards  ","false","improvement"
"Git commit messages not added to ISSUE_COMMENT table when issue referenced","## Issue **Impacted version**: 4.14.1  **Deployment mode**: standalone  **Problem description**: If you commit via the GitBucket interface and reference an issue, the commit messages end up in the ISSUE_COMMENT table which means you see the commits when you look at the associated issue.  When you commit via a Git client this does not happen.  The commits appears in the commits page, but the messages are not added to the ISSUE_COMMENT table, so you can't see the commits from the associated issue.  I feel like I must be missing something here.  Is there a batch process that is supposed to run to synchronise the Git messages with the issues or something?","false","improvement"
"Semantic Versioning","## Semantic Versioning **Impacted version**: 4.14.1  **Deployment mode**: RPM  **Problem description**: First of all: thanks a lot for the amazing work (mostly by @takezoe)! I really love GitBucket. So much easier to deploy and manage than GitLab.  This being said, I've got a little problem for the second time since I'm packaging GitBucket as an RPM. When you follow [semantic versioning](http://semver.org/) (which RPM does), version 4.14.1 will stay newer than most future releases like 4.15!  Could you please consider using 4.15.0 for your next release?  BTW: I could PR a modified rpm spec and init script for el6 if you like it?  That's all :-p","false","document,task"
"feature request: file listing sort by last commit (date)","Feature request: OPTION to sort repo files by date (last commit, ascending or descending)  **Deployment mode**: I use a repo of plain text files as my ""change management"" system.  i personally would like to always see latest modifications on top. ","false","feature"
"""NoSuchMethodException: java.lang.Process.getPid()"" in JDK9 test","depends on https://github.com/flapdoodle-oss/de.flapdoodle.embed.process/issues/57  https://travis-ci.org/gitbucket/gitbucket/jobs/252648985#L888  ``` java.lang.NoSuchMethodException: java.lang.Process.getPid() 	at java.base/java.lang.Class.getMethod(Class.java:2065) 	at de.flapdoodle.embed.process.runtime.Processes$PidHelper$1.getPid(Processes.java:195) 	at de.flapdoodle.embed.process.runtime.Processes.processId(Processes.java:72) 	at de.flapdoodle.embed.process.runtime.ProcessControl.<init>(ProcessControl.java:64) 	at de.flapdoodle.embed.process.runtime.ProcessControl.start(ProcessControl.java:205) 	at de.flapdoodle.embed.process.runtime.AbstractProcess.<init>(AbstractProcess.java:98) ```","false","task"
"Feature request: reply to comments in code changes view","You can put comments in code changes view and that's very useful. But it would be great to allow replies to the comments. Sometimes you want to answer a question or clarify something but you can't.","false","feature"
"Add repositoryHeaderComponent extension point",,"true","feature"
"Operational Concerns With GB","Based on a couple of issues I raised earlier today, I attempted to fail back some production GB systems to 4.13 ... which then failed because the database was now at 4.14.  This is a problem in real world production environments.  There has to be a clean way to fail forward- and back when problems are encountered.    Is there some reason the database has to undergo a change of schema with each release of the code?  ","false",
"[4.14.1] Repo Search Not Working","Confirmed on two different 4.14.1 installations:  The repo search feature no longer works.  Entering a string does nothing.","false","duplicate"
"[4.14.1] Scrollbar Issue","Confirmed on two different 4.14.1 installations with both Firefox and Chrome:  When you first log in, you are presented with two parallel scrollbars on the right side of the UI.  Thereafter, this behavior comes and goes in an unpredictable way.  This appears to be benign and entirely cosmetic as best as I've been able to determine.  ","false","bug"
"Add repo-link class to repository link at sidebar menu","Fixes #1629  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"If add an option ('max_file_size'), you can not run the server","## Issue **Impacted version**: 4.14.1  **Problem description**:  add option 'max_file_size ', you can not run the server  cmd -> ""java -jar gitbucket.war --port=7900 --prefix=/ --host=localhost --gitbucket.home=./../gitbucket_data ""  => Start Server, Connect OK  but,  cmd -> ""java -jar gitbucket.war --port=7900 --prefix=/ --host=localhost --gitbucket.home=./../gitbucket_data --max_file_size=1 (Or higher)   => ""Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException : 2 At JettyLauncher.main<JettyLauncher.java:43>","false","bug"
"Account (permission)","I don't have any rights to the account that I tested. (create account type : normal)  However, when you log in, you can view the repo via the NewsFeed tab. Even if you click on NewsFeed's hyperlink, you can view the source and download it.  also does not appear on the left, but you can see most of the repo by writing "" a "" in the top of the "" Search Repository "".  And, Internet Browser Input URL of unauthorized repository is accessible.","false","question"
"Cannot fork a repository","**Impacted version**: 4.14.0  **Deployment mode**: *standalone app*  **Problem description**: *Cannot fork a repository. I get following error:  ``` java.io.FileNotFoundException: Source '/root/.gitbucket/repositories/test/test-repo' does not exist 	at org.apache.commons.io.FileUtils.checkFileRequirements(FileUtils.java:1405) 	at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:1368) 	at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:1268) 	at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:1237) 	at gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$96(AccountController.scala:611) 	at gitbucket.core.util.LockUtil$.$anonfun$lock$1(LockUtil.scala:30) 	at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12) 	at gitbucket.core.util.LockUtil$.lock(LockUtil.scala:27) 	at gitbucket.core.controller.AccountControllerBase.$anonfun$$init$$95(AccountController.scala:565) 	at gitbucket.core.util.ReadableUsersAuthenticator.$anonfun$readableUsersOnly$2(Authenticator.scala:122) 	at gitbucket.core.util.ReadableUsersAuthenticator.$anonfun$authenticate$11(Authenticator.scala:129) 	at scala.Option.map(Option.scala:146) ```   To reproduce a problem create a new repository and try to fork with another user/group.  I expect this is caused by a commit related to 7761946ec09c764779cfb2cee07e4996f9e942b3 - AccountController.scala line 609. ","false","bug"
"Cannot clone repo using TortoiseGit","**Impacted version**: 4.14  **Deployment mode**: *standalone app*  **Problem description**: I have downloaded the GitBucket 4.14 and running with a command (java -jar gitbucket.war). I can access the web using URL (http://localhost:8080 user: root, password: root) & create a new repository (example: MYREPO).  But I cannot clone the repository using Git Client (TortoiseGit). I got this error message:  `git.exe clone --progress -v ""http://localhost:8080/git/root/MYREPO.git""  ""C:\Users\xxxxx\MYREPO""  Cloning into 'C:\Users\xxxxx\MYREPO'... fatal: repository 'http://localhost:8080/git/root/MYREPO.git/' not found  git did not exit cleanly (exit code 128) (2199 ms @ 7/4/2017 4:25:05 PM)`  Maybe I miss the configuration or installation?  Kindly need your help or this is a bug? ","false","question,waiting 4 user feedback"
"Does not work ""find repository"" on sidebar since 4.14","## Issue **Impacted version**: 4.14  **Deployment mode**: standalone app  **Problem description**: I've updated to 4.14 at today. However ""find repository"" on sidebar of top page does not  work. In other words, I can not narrow down the repository.  **Note:** We can use ""Search repository"" on topbar until this issue will fix. ","false","bug"
"Updated to jgit-4.8.0.201706111038-r","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"[WIP] Copy bundled plugins in initialization process","The purpose of this pull request is making posisble to bundle default plugins with the GitBucket distribution.  The basic concept is copying bundled plugin jars to `GITBUCKET_HOME/plugins` before plugin initialization, but there are two concerns to be considered:  - The current implementation needs to include plugin jars in the gitbucket jar which published to the Maven Central repository. It's desireble to be included in only gitbucket.war. - Bundled plugins are always enabled. It's impossible to disable. It might have to make the plugin hot deployment (#1487) to disable bundled plugins.  Close #1625","true","feature"
"SVG logo","In IE11, transparent PNG shows jaggy image. Because it is reduced by Nearest Neigbor algorithm.  ![20170627-195704 -](https://user-images.githubusercontent.com/6997928/27757784-332e2ac8-5e41-11e7-83fa-0f8cee022fdb.png)  This PR adds SVG logo icon and use it to logo image. It solves above problem.  ![20170630-235818 -](https://user-images.githubusercontent.com/6997928/27757813-b46eb04e-5e41-11e7-9b39-b5c25bcaae5c.png)  SVG logo is created by [potrace](http://potrace.sourceforge.net/). It makes very clear/simple SVG image from PNG image.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Provides a way to bundle plugins to GitBucket distribution",,"false","feature"
"protect branch","Can you block a certain brunch from pushing to another brunch?  As an example, we protect 'develop' branch.  For example, develop branch 'in branch protect mode',   you can CLI 1. git checkout develop 2. git reset --hard head~10 3. git push -f  => We can block git.  However,  CLI Mode Input : git push origin ABranch:develop(protect branch)  When you do, the data goes up in the develop.   I want to block the act and make sure that it can be pushed forward through the 'only pull request'.  Is there a way?  Thanks.","false","feature"
"Fork repos with Git-LFS doesn't copy lfs data","### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: master  **Deployment mode**: standalone  **Problem description**:  steps to reproduce  - Create repository and store some LFS files. (by root user, lfs-test repo) - Fork it by other user. (by test1 user)  problems  - `git clone` reports ""fatal"" error. - in `$GITBUCKET_HOME/repositories` directory, no `test1/lfs-test/lfs` directory.","false","bug"
" Column ""TOKEN"" not found; SQL statement:","I have upgraded versions from 3.11 to 3.14 to 4.0 to 4.2.1 to 4.13.  I could clone, created branches on latest version, but I couldn't push the code and getting below error.  ``` 2017-06-24 04:57:29.473:WARN:root:qtp358699161-19: Internal error during receive-pack to /opt/gitbucket/.gitbucket/repositories/bipin/ZanDataGateway.git org.h2.jdbc.JdbcSQLException: Column ""X7.CTYPE"" not found; SQL statement:|select x2.""USER_NAME"", x2.""REPOSITORY_NAME"", x2.""ISSUE_ID"", x2.""OPENED_USER_NAME"", x2.""MILESTONE_ID"", x2.""ASSIGNED_USER_NAME"", x2.""TITLE"", x2.""CONTENT"", x2.""CLOSED"", x2.""REGISTERED_DATE"", x2.""UPDATED_DATE"", x2.""PULL_REQUEST"", x3.""USER_NAME"", x3.""FULL_NAME"", x3.""MAIL_ADDRESS"", x3.""PASSWORD"", x3.""ADMINISTRATOR"", x3.""URL"", x3.""REGISTERED_DATE"", x3.""UPDATED_DATE"", x3.""LAST_LOGIN_DATE"", x3.""IMAGE"", x3.""GROUP_ACCOUNT"", x3.""REMOVED"", x3.""DESCRIPTION"", x4.""USER_NAME"", x4.""REPOSITORY_NAME"", x4.""ISSUE_ID"", x4.""BRANCH"", x4.""REQUEST_USER_NAME"", x4.""REQUEST_REPOSITORY_NAME"", x4.""REQUEST_BRANCH"", x4.""COMMIT_ID_FROM"", x4.""COMMIT_ID_TO"", x5.""USER_NAME"", x5.""FULL_NAME"", x5.""MAIL_ADDRESS"", x5.""PASSWORD"", x5.""ADMINISTRATOR"", x5.""URL"", x5.""REGISTERED_DATE"", x5.""UPDATED_DATE"", x5.""LAST_LOGIN_DATE"", x5.""IMAGE"", x5.""GROUP_ACCOUNT"", x5.""REMOVED"", x5.""DESCRIPTION"", x6.""USER_NAME"", x6.""FULL_NAME"", x6.""MAIL_ADDRESS"", x6.""PASSWORD"", x6.""ADMINISTRATOR"", x6.""URL"", x6.""REGISTERED_DATE"", x6.""UPDATED_DATE"", x6.""LAST_LOGIN_DATE"", x6.""IMAGE"", x6.""GROUP_ACCOUNT"", x6.""REMOVED"", x6.""DESCRIPTION"", x7.""USER_NAME"", x7.""REPOSITORY_NAME"", x7.""URL"", x7.""CTYPE"", x7.""TOKEN"" from ""ISSUE"" x2, ""PULL_REQUEST"" x4, ""ACCOUNT"" x5, ""ACCOUNT"" x6, ""ACCOUNT"" x3, ""WEB_HOOK"" x7, ""WEB_HOOK_EVENT"" x8 where (((((x8.""EVENT"" = ?) and (x8.""USER_NAME"" = x7.""USER_NAME"")) and (x8.""REPOSITORY_NAME"" = x7.""REPOSITORY_NAME"")) and (x8.""URL"" = x7.""URL"")) and (((((x4.""REQUEST_USER_NAME"" = ?) and (x4.""REQUEST_REPOSITORY_NAME"" = ?)) and (x4.""REQUEST_BRANCH"" = ?)) and (x5.""USER_NAME"" = x4.""USER_NAME"")) and (x6.""USER_NAME"" = x4.""REQUEST_USER_NAME""))) and (((((((x2.""CLOSED"" = ?) and (x4.""USER_NAME"" = x2.""USER_NAME"")) and (x4.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x4.""ISSUE_ID"" = x2.""ISSUE_ID"")) and (x3.""USER_NAME"" = x2.""OPENED_USER_NAME"")) and (x7.""USER_NAME"" = x2.""USER_NAME"")) and (x7.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) [42122-195]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)         at org.h2.message.DbException.get(DbException.java:179) ```  And also in service hook   ``` org.h2.jdbc.JdbcSQLException: Column ""TOKEN"" not found; SQL statement: CREATE FORCE VIEW PUBLIC._0 AS SELECT     USER_NAME AS X3,     REPOSITORY_NAME AS X4,     TOKEN AS X7,     CTYPE AS X6,     URL AS X5 FROM PUBLIC.WEB_HOOK WHERE (USER_NAME = ?1)     AND (REPOSITORY_NAME = ?2) [42122-195] 	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ```","false","question"
"Add assignee entry to the result of pull request related api","Now, gitbucket does not return assignee entry in the result of pull request related api. This patch enables to add assignee entry.  If no assignee is assigned, that entry is  ""assignee"":null. This is same result as GitHub.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Fonts are too thin on macOS"," ![font-thin](https://user-images.githubusercontent.com/22808079/27267820-302dee62-54e6-11e7-8338-b77422f40419.png)  AdminLTE font settings: ```css body {   -webkit-font-smoothing: antialiased;   -moz-osx-font-smoothing: grayscale; ```  It is currently deleted. https://github.com/almasaeed2010/AdminLTE/commit/53b904d946af0b8a6c7be55bc213ec7d6a0ad9fe","false","improvement"
"Relation for issues","## Issue **Impacted version**: not relevant   **Deployment mode**: not relevant  **Problem description**: - Addition for issue wishlist: https://github.com/gitbucket/gitbucket/wiki/Wishlist - As a user of Gitbucket I want to add relations between issues:   - is duplicate of/ is duplicated by   - is child of/ is parent of   - related to   - blocks/ is blocked by   - precedes/ follows    ","false","feature,help wanted"
"Two simultaneous commits to the same file are successful.","Impacted version: 4.13.0  Deployment mode: gitbucket is deployed on Apache Tomcat without an additional HTTP frontend.  Problem description: When two users (or more) commit the same file at (almost) the same time, the changes of the last commit are overriding the first commit (in the commits history of the file both commits are listed).  Steps to reproduce: 1) Login to gitbucket with user A from one host. 2) Login to gitbucket with user B from another host. 3) Edit the same file in both hosts (different changes on the same line in the file). 4) Click the ""Commit changes"" button on both hosts simultaneously.  Expected result: The last commit attempt should fail with an error that a conflict was encountered.  Actual result: The changes of the last commit are overriding the first commit (in the commits history of the file both commits are listed).","false","bug"
"Make all settings configurable by system property or environment variable","This pull request makes all settings in `gitbucket.conf` and `database.conf` by system property or environment variable.  For example, GitBucket resolves `ldap.mail_attribute` as following order:  1. System property `gitbucket.ldap.mail_attribute` 2. Environment variable `GITBUCKET_LDAP_MAIL_ATTRIBUTE` 3. `ldap.mail_attribute` property in `gitbucket.conf`  In other words, if a system property or an environment variable is specified, a configured value in `gitbucket.conf` or `database.conf` is ignored.  Maybe this pull request covers #1577.  ","true","feature"
"Issue priorities","This is a PR for #1396.  Please check it out and comment it.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct","true","feature"
"Add hook for issue and pull request","### Purpose  This PR is a necessary renewal for moving to plugins the notification feature. Notifications Plugin is developing here: https://github.com/shimamoto/gitbucket-notifications-plugin  I will transfer it to the gitbucket organization as soon as completed.  ### Notifications Plugin  In addition to the current notification, the plugin will be added the following features:  * Watch #7 * Issue subscriptions #628","true","feature"
"Support gollum event in web hook","Support created and edited event of Wiki pages in the web hook.  - [x] Call web hook from online editing - [x] Call web hook from pushing to git repository from remote - [x] Update document","true","feature"
"Possible 4.13 ssh Issue?","I upgraded two different GB sites last night with the most recent 4.13 release.  One works as always.  But the other started giving users fits, complaining that the ssh key signature was bogus and that they might be victims of a man in the middle attack.  Is there anything in 4.13 that might have a corner case that messes up ssh key exchanges, say for cloning, pushes, or pulls?   This is really mysterious.  I literally only replaced the .war file and started GB.  No other aspect of the configuration was touched.  Thoughts? ","false",
"Validate password","## Issue **Impacted version**: 4.13 or before  **Problem description**: GitBucket does not validate password in user registration or password modification that we can use any characters for password currently. Maybe it should limit characters which can be used in password as alphabetical, numerical and some special characters.","false","improvement"
"made maxFileSize in FileUploadController configurable","related to #1569 ","true","feature"
"Error occurs when accessing a merged PR via URL like `http://.../issues/:id`","Suppose that a pull-request whose id is `<num>` is already merged. Then, the following error occurs when I access `http://<base URL>/<repo>/<user>/issues/<num>`.  ``` java.util.NoSuchElementException: None.get 	at scala.None$.get(Option.scala:349) 	at scala.None$.get(Option.scala:347) 	at gitbucket.core.issues.html.commentlist$.$anonfun$apply$4(commentlist.template.scala:147) 	at scala.collection.immutable.List.map(List.scala:283) 	at gitbucket.core.issues.html.commentlist$.apply(commentlist.template.scala:55) 	at gitbucket.core.issues.html.issue$.apply(issue.template.scala:71) 	at gitbucket.core.controller.IssuesControllerBase.$anonfun$$init$$7(IssuesController.scala:88) 	at scala.Option.map(Option.scala:146) ... ```  When I access `http://<base URL>/:repo/:user/pull/<num>` instead, there is nothing wrong.  ## Cause  Variable `pullreq` [here](https://github.com/gitbucket/gitbucket/blob/master/src/main/twirl/gitbucket/core/issues/commentlist.scala.html#L128) becomes `None` in this situation.  ## Expected Behavior  I think  `http://<base URL>/<repo>/<user>/issues/<num>`  should be redirected to  `http://<base URL>/:repo/:user/pull/<num>` when the issue is a pul-req. This is the same behavior with GitHub.  e.g. `https://github.com/gitbucket/gitbucket/issues/1385` is redirected to `https://github.com/gitbucket/gitbucket/pull/1385` in GitHub.","false","improvement"
"Load plugins alphabetically","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Currently, the loading order of the plugins not fixed. The order of the menus added by the plugin may be different. Therefore, the plugin is loaded in alphabetical order.  [File#listFiles](https://docs.oracle.com/javase/8/docs/api/java/io/File.html#listFiles--)  > There is no guarantee that the name strings in the resulting array will appear in any specific order; they are not, in particular, guaranteed to appear in alphabetical order.  ![menu_order1](https://cloud.githubusercontent.com/assets/1295639/26441616/31239106-416c-11e7-8d95-5972545fdbe7.png)  ![menu_order2](https://cloud.githubusercontent.com/assets/1295639/26441619/35aafb60-416c-11e7-9f79-a46d1da192b6.png)  ","true","improvement"
"Question About How GB Tracks Forks","Here is the workflow in question (all via GB GUI):  - User forks their own instance of repo Foo -> My-Foo     - GB displays the fact that My-Foo was forked from Foo - Foo is moved to a different owner - GB no longer associates My-Foo as a fork of Foo  Two questions:  - Is this correct behavior, or should GB pickup the fact that My-Foo really is a fork of Foo under new ownership? - What's the best way to reestablish the Foo -> My-Foo forking relationship?","false","bug"
"Feature Request: showing the line number on the comment","It is very helpful if the line number is shown on each comment for pull request.  Currently, it is little bit difficult to jump to specified source code portion from the conversation page.  ","false","feature"
"Starting EXTREME Slow on Raspberry pi 3","The last version of GitBucket takes 1 Hour to fully startup on a PI3 And the webpage dous not even Load when its done starting.","false","question"
"File upload into repository","The original request is #1252 and this fixes #447. ","true","feature"
"Merge Organizations!","Please add support to be able to merge organizations from the Admin UI by admins.  Thank you.","false","feature"
"Use Swagger for the API","Please use [Swagger](http://swagger.io/) for the API: Instead of just the error prone: https://github.com/gitbucket/gitbucket/wiki/API-WebHook  something like http://petstore.swagger.io/  might be of great help (for testing too).  Using Swagger with Scalatra: https://www.infoq.com/articles/swagger-scalatra/ https://abstractionextraction.wordpress.com/2013/03/31/using-swagger-with-scalatra/  thank you.","false",
"Be able to choose if ""collaborators of the private forked repository are copied from the original repository"" or not","**Working with version:** 4.12.1  **Problem description:** It would be interesting that an option could tell if the collaborators of the original repository will be added to the corresponding forked repositories. (option inside the original repository, or during the fork maybe, if we want to let the user decide).  It is interesting because if the user wants a fully private forked repository, he doesn't want the other collaborators of the original repository to be collaborators of his own forked version. Then, if he wants some users to be collaborators to his project, he will add them by hand.","false",
"dropdown menu filter applied to ""variable length"" dropdown.","1. dropdown menu filter applied where that length is variable. 2. In compare.scala.html, use default dropdown menu function for filter.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Possible MD Parsing Bug?","Running GB 4.12.1.  In repo ""test"", I have an mdfile with this content       * This is [This File](./README.md)       * This is [Testfile #1](./dir1/testfile1)       * This is [A directory](./dir2)   The first two forms work as expected.  The third fails.  Instead of taking the user to ./dir2, it tries to do this:  `...test/blob/master/dir2`  I suspect this is a bug because github seems to handle this form OK (I am told ... have not verified).  Thanks,","false","improvement"
"[Suggestion] Give each project's wiki it's own public/private toggle?","Since each wiki is its own git repository it would be nice if the wiki could be set as a public repository while keeping the code repo private.","false","feature"
"Feature request: disable email notification","It would be nice if a user could disable email notification","false","feature"
"function helper.html.dropdown supports filter placeholder","developer can specify filter input placeholder in dropdown menu.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Intermittent Stack Overflow on global issue/pr view","## Issue **Impacted version**: Tried 4.9 and 4.12.1  **Deployment mode**:  - Windows 2008R2 - Java 1.8 u65 - Tomcat 8.0.30 - httpd 2.4.18 - Embedded H2 database  **Problem description**: Possibly when GB is freshly restarted, I click the global ""Issues"" or ""Pull requests"" link and receive a stack overflow error. (Full stack overflow in text files below, I was running 4.9 when this error started and I upgraded to 4.12.1 and it continues).  It does not happen all the time but it often happens first thing in the morning and I do have a process that restarts Tomcat overnight so it may frequently happen effectively the first time it is hit. The error sometimes will continue with repeated attempts. *Sometimes* I can click on a given project and views the project issues, then click the global Issues link again and it will then work.   Hope this helps.  [gb error 4.9.txt](https://github.com/gitbucket/gitbucket/files/1004434/gb.error.4.9.txt) [gb error 4.12.1.txt](https://github.com/gitbucket/gitbucket/files/1004433/gb.error.4.12.1.txt) ","false","duplicate"
"[WIP] Experimental use WebJars","This is a prototype for using WebJars with GitBucket. This feature was proposed in #1430.  Currently, I know that there are the following problems.  * The diff feature does not work. (Not investigated) * WAR becomes bulky.     * Since WebJars includes unnecessary resources such as documents, the size of the WAR has been greatly expanded. It would be desirable to remove unnecessary files and repackage them.  Anyone who has bandwidth to work on above problem is very welcomed. ","true",
"Even repositories which can't be accessed are choosable in creating pull request","## Issue **Impacted version**: 4.12.1  **Problem description**: Even repositories which can't be accessed are choosable in creating pull request. It should be filtered based on user's access right.  ![2017-05-13 13 39 32](https://cloud.githubusercontent.com/assets/1094760/26022501/1eb38a50-37e2-11e7-9b75-4616c6714331.png) ","false","bug"
"why not login","##  hello，I come from china ,  I try  use  gitbucket ,  I build  gitbucket service ， use  root/root login  ###  I login  success ,   I  update userenname and password , but I logout  systeam,  I try again login use new username/password , but I not login!　　 －－－－－ 　I want  konw  how  forget password   or   find password !  ### thank you  very mush  , I hope you  help， we will become friend,  -   - centesos 7.0   - gitbucket 4.9 ","false","question"
"Fix conditional expression for determining whether it is default branch","Currently in the branch list feature, the default branch in a forked repository is not correctly selected.  [EDITED] See also the [diff with whitespace ignored](https://github.com/gitbucket/gitbucket/pull/1592/files?w=1).","true","bug"
"Allow HTML in Markdown","Markedj is going to support HTML in Markdown in 1.0.11 (https://github.com/gitbucket/markedj/pull/18), so upgrade after it's released.","false","feature"
"Fix delete branch feature of PR does not work at all","The feature that delete the forked branch after merging PR does not work at all except for some special use-cases.  I think that this change will not affect users, but since I made a fundamental change, backward compatibility has been lost for this feature (URL). Also, it does not affect PR related API. ","true","bug"
"[Feature] GPG Keys management","Would it be possible to implement GPG key signing and key management?   In a fashion similar to the Github GPG key feature: https://developer.github.com/v3/users/gpg_keys/","false","feature"
"Fix incorrect redirect URL and authorization in Update branch feature","If the branch is out-of-date in PR, the update branch feature can be used. However, in some cases, this feature does not work.  This PR fixes following: * Redirect to incorrect URL after updating branch. * The owner of the PR's source repository can not use the Update branch feature. ","true","bug"
"Disabling directory listing feature on Jetty","Currently, If using `JettyLauncher`, the directory listing feature is enabled. Also, `NullPointerException` occurs when accessing `/assets`. ``` java.lang.NullPointerException         at slick.jdbc.StatementInvoker.results(StatementInvoker.scala:33)         at slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)         at slick.jdbc.Invoker.foreach(Invoker.scala:48)         at slick.jdbc.Invoker.foreach$(Invoker.scala:47)         at slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)         at slick.jdbc.Invoker.firstOption(Invoker.scala:24)         at slick.jdbc.Invoker.firstOption$(Invoker.scala:22)         at slick.jdbc.StatementInvoker.firstOption(StatementInvoker.scala:16)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingQueryInvoker.firstOption(BlockingProfile.scala:90)         at gitbucket.core.service.RepositoryService.getRepository(RepositoryService.scala:213)         at gitbucket.core.service.RepositoryService.getRepository$(RepositoryService.scala:212)         at gitbucket.core.controller.RepositoryViewerController.getRepository(RepositoryViewerController.scala:32)         at gitbucket.core.util.ReferrerAuthenticator.$anonfun$authenticate$6(Authenticator.scala:99)         at gitbucket.core.util.SyntaxSugars$.defining(SyntaxSugars.scala:12)         at gitbucket.core.util.ReferrerAuthenticator.authenticate(Authenticator.scala:98)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly(Authenticator.scala:93)         at gitbucket.core.util.ReferrerAuthenticator.referrersOnly$(Authenticator.scala:93)         at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32)         at gitbucket.core.controller.RepositoryViewerControllerBase.$anonfun$$init$$3(RepositoryViewerController.scala:137)         ... ``` ","true","improvement"
"Add Rest endpoints to add/delete collaborators","## Issue **Impacted version**: 4.12.1  **Problem description**:  It would be great if it was possible to configure permissions from scripts. To make this possible, the [Add   user as collaborator](https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator) and [Remove user as collaborator](https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator) REST endpoints are required.   ","false","APIv3,feature,help wanted"
"Add Scala-IDE specific files to .gitignore","The files `.cache-main` and `.cache-tests` appear to be generated by the Scala IDE.","true",
"dropdown input filter element id from placeholder fix","if html.dropdown specified with filter placeholder that includes inhibit character, dropdown filter does not work. Current, dropdown filter element id is created by placeholder string + random 4 characters. If placeholder includes inhibit character for html id, (e.g. '\s' , '/' and so on) input filter element does not recognized by that id. This patch replace characters(except [a-zA-Z0-9]) to ""_""( allowed to use in id ).  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Fix incorrect font color when screen size 768px or less","Fixes #1582.  [EDITED] Add images. #### Before ![before](https://cloud.githubusercontent.com/assets/7430980/25767386/bc238b0a-3233-11e7-8389-60fa2f0c0ba0.png) #### After ![after](https://cloud.githubusercontent.com/assets/7430980/25767385/bc23744e-3233-11e7-8da2-4e80ff55dfe4.png) ","true",
"Unreadable dropdown menu text when width below 768px","## Issue **Impacted version**: 4.12.0  **Deployment mode**: not relevant  **Problem description**:  When the window width below 768px, I can't read the dropdown menu text because its color is white.  <img width=""288"" alt=""sc 383"" src=""https://cloud.githubusercontent.com/assets/11713748/25751892/844cf91a-31f1-11e7-98b7-c4464d6fd9cf.png"">  This is affected by the following CSS block of AdminLTE. https://github.com/almasaeed2010/AdminLTE/blob/master/dist/css/skins/skin-blue.css#L38-L40  <img width=""360"" alt=""sc 398"" src=""https://cloud.githubusercontent.com/assets/11713748/25752121/4498e36e-31f2-11e7-948e-fa88e3056343.png"">  ( [https://almsaeedstudio.com/themes/AdminLTE/pages/layout/top-nav.html](https://almsaeedstudio.com/themes/AdminLTE/pages/layout/top-nav.html) ) ","false","bug"
"Add convenient installation script for Linux systemd","It provides a means to easily install or upgrade GitBucket on Linux systemd.  I will post it to the wiki after this PR is merged. ","true",
"MariaDB 10.1.22 + Gitbucket 4.12.1 can't start","Today i tried to migrate my private gitbucket to mariadb and i'm getting this error when starting java.sql.SQLException: View's SELECT contains a subquery in the FROM clause  i cannot get tracing working as described in wiki :-( so i hope, this is enough info for you","false",
"dropdown helper function improvement & modification","Helper can specify placeholder for it's filter. To identify each dropdown input filter by id, use unique Id. ---- First, I tried following code to initialize input filter id.  `@filterId = @{filter.toString.replaceAll(""[^a-zA-Z0-9_]"",""_"") + scala.util.Random.alphanumeric.take(4).mkString } `  But this code produces different id where filterId is used. So I abandoned to use this technique.  **If you have any good solution for this, I welcome your comment.**  ---- ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Support BASIC authentication for accessing Atom feed","Currently, if authentication is enabled, we can't subscribe Atom feeds using feed readers like Outlook or Thunderbird. Therefore, I request the authentication for accessing Atom feed will be changed to BASIC authentication in order to be able to subscribe.","false","LDAP/SSO,feature"
"Make read LDAP bind password from environment variables","I think that a realistic way to protect the LDAP bind password that meets the following minimum requirements is to use environment variables.  1. GitBucket should be able to use with operating system's process manager such as Upstart, systemd, and Task Scheduler. In other words, do not use the interactive interface. 1. System users, processes, and applications that can read the LDAP bind password should be minimal.  It is important to note that encryption does not provide any value unless you use an external security module (e.g. HSM) or agents together.  #### Example with systemd ```bash cat << '_EOF_' > /etc/systemd/system/gitbucket.service [Unit] Description=GitBucket After=network.target  [Service] User=gitbucket Environment=""GITBUCKET_LDAP_BIND_PASSWORD=secret"" ExecStart=/usr/bin/java -Xms1024m -Xmx1024m -Djava.net.preferIPv4Stack=true -jar /usr/local/lib/gitbucket/gitbucket.war --gitbucket.home=/var/lib/gitbucket Restart=always PrivateTmp=true  [Install] WantedBy=multi-user.target _EOF_  chmod 400 /etc/systemd/system/gitbucket.service systemctl daemon-reload systemctl enable gitbucket.service systemctl start gitbucket.service ```  Closes #634.","true","improvement"
"Remove SLF4J JDK14 binding","GitBucket is using the assembly version of Apache Mina SSHD which contains all optional libraries. Therefore, GitBucket's WAR contains unnecessary dependencies such as SLF4J JDK14 binding.  This PR removes SLF4J JDK14 binding from dependencies to avoid collision of SLF4J binding. However, in principle, should use Apache Mina SSHD Core directly. See also https://github.com/gitbucket/gitbucket/issues/1109#issuecomment-258848322. ","true","improvement"
"Ensure OSS license compliance","Since GitBucket published release (WAR) including dependency libraries, the release must be in accordance with the license of each library.  IMHO, At least should clarify immediately that apply [FOSS License Exception](https://www.mysql.com/jp/about/legal/licensing/foss-exception/) to GitBucket and redistribute MySQL Connector/J licensed under GPLv2.  Currently there are 77 dependencies (including transitive it), so it will take time to finish everything. 😩 ","false","document,task"
"Hide H2 console in admin panel if using a different DB","I think the title says it all. It's pointless to have this link if we store nothing in the H2 db.","false",
"Add support use mail address as user name when using LDAP","This PR provides an option to use the part of the mail address that appears to the left of the @ symbol (hereinafter called ""PREFIX"") as the user name when using LDAP. If using this option, the user name attribute is used only to identify the user on login.  IMHO, a large bandwidth is required to support user aliases related to #336, #652, and #1157, but in many use-cases, the PREFIX of the mail address registered in LDAP becomes unique and can be used instead of aliases. So this PR could be a good start.  #### 1. System settings ![001_system-settings](https://cloud.githubusercontent.com/assets/7430980/25649674/6da4897a-3012-11e7-8b16-36b77d6573a9.png)  #### 2. Login uid=`12345678`, mail=`john-doe@users.noreply.github.com`, sn=`John Doe` ![002_login](https://cloud.githubusercontent.com/assets/7430980/25649675/6da755ba-3012-11e7-81cb-ac63e34cead5.png)  #### 3. Profile ![003_profile](https://cloud.githubusercontent.com/assets/7430980/25649676/6daf0b66-3012-11e7-963f-49e7ed469070.png)  #### 4. News feed ![004_news-feed](https://cloud.githubusercontent.com/assets/7430980/25649677/6db3446a-3012-11e7-9c70-ffd551f5524f.png) ","true",
"Show icons when sidebar is collapsed.","This PR may improve usage when sidebar is collapsed.  Before: all icons are hide. ![014016-root test - google chrome](https://cloud.githubusercontent.com/assets/6997928/25629741/91b64a00-2fa5-11e7-8885-9e5e5a453123.png)  After: Show icons and badges. If you hover mouse on icon, menu is appeared. ![014437-root test - google chrome](https://cloud.githubusercontent.com/assets/6997928/25629744/96ebed22-2fa5-11e7-93d6-bc4ad92d641a.png)  ![021306-root test - google chrome](https://cloud.githubusercontent.com/assets/6997928/25629905/316084da-2fa6-11e7-8ac1-958f85222255.png)   And two minor feature update:  - add icons to System settings and user profile. - add gitbucket.core.view.helpers.menuicon helper to render icon tag by name (octicon-* and fa-* are supported, default is octicon-*)  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Fix incorrect initial height of textarea","In the Elastic jQuery plugin, recalculation of the height after the blur event is incorrect. Therefore, as shown in the figure below, the height changes only by switching the focus of the textarea.  ![gitbucket-incorrect-initial-height](https://cloud.githubusercontent.com/assets/7430980/25616020/6b1f9afc-2f75-11e7-999f-53b9857934db.png) [EDITED] `before`: initial state, `after`: after switching focus. (focus and unfocus)  This PR fixes the height by explicitly calling the blur event after the `elastic` is initialized.  ","true","improvement"
"""Settings"" -> switches from https to http","## Issue **Impacted version**: 4.12.0  **Deployment mode**: Standalone webapp behind an apache httpd acting as reverse proxy. The apache httpd terminates https.  **Problem description**: - Login to gitbucket: https://my.server.com/gitbucket/ - Select a repo - Mouse-over the ""Settings"" in the navbar at the right side of the screen: https://my.server.com/gitbucket/{group}/repo/settings - Click on ""Settings"": https://my.server.com/gitbucket/{group}/repo/settings -  http://my.server.com/gitbucket/{group}/repo/settings/options shows up in the address bar - Since the apache httpd isn't listening to http://..., the user sees an error page - Within gitbucket.conf, I have specified https://... for the Base URL - I didn't observe the issue with previous versions of gitbucket (as far as I remember) - Manually  changing the URL within the address bar from http -> https seems to work","false",
"maxFileSize in FileUploadController should be configureble","https://github.com/gitbucket/gitbucket/blob/c5a5c737bf9e4125358a257abfbd7d7ee6c5c88f/src/main/scala/gitbucket/core/controller/FileUploadController.scala#L25 ","false","improvement"
"Fix redirect issue - fixes #1567","Fix redirect issue by partially reverting to 956af54 - fixes #1567","true","bug"
"Login page redirect issue","## Issue **Impacted version**: 4.12  **Deployment mode**:  linux, nginx  **Problem description**: I'm using Gitbucket deployed in nginx under subpath (for example: `mydomain.com/gitbucket/`) without anonymous access. This URL is configured in System settings page.  In 4.12 redirect to login page is not working correctly - it redirects to `mydomain.com/signin` instead of `mydomain.com/gitbucket/signin`. In 4.11 it was working just fine.  I looked into git history and this issue is caused by this commit https://github.com/gitbucket/gitbucket/commit/956af54d4f9aec4d03341412670807619d42665a - when I revert changes in this commit everything works as expected.","false","bug"
"fix ApiRepository#apply",,"true",
"GitHub Desktop Enterprise not working","## Issue **Impacted version**: 4.12.0  **Deployment mode**: webcontainer (war) java  **Problem description**: GitHub Desktop says ""Could not reach Server""  Server Logs: 192.168.1.x - - [29/Apr/2017:19:39:03 +0200] ""GET /api/v3/meta?per_page=100 HTTP/1.1"" 401 37 192.168.1.x - - [29/Apr/2017:19:39:08 +0200] ""PUT /api/v3/authorizations/clients/eac522c6b68c504b2aac HTTP/1.1"" 405 - 192.168.1.x - - [29/Apr/2017:19:39:16 +0200] ""PUT /api/v3/authorizations/clients/eac522c6b68c504b2aac HTTP/1.1"" 405 -  ![image](https://cloud.githubusercontent.com/assets/710460/25557543/046fe612-2d14-11e7-9370-1d78fa54e57e.png)  ","false","improvement,waiting 4 user feedback"
"Disabling Server header on Jetty","There is no point in returning the `Server` header.  For reference, Tomcat 9.0.x and 8.5.x no longer set the Server header by default. ","true","improvement"
"Graceful shutdown on Jetty requires StatisticsHandler","The Jetty's graceful shutdown is provided via the [Statistics Handler](https://www.eclipse.org/jetty/documentation/9.3.x/statistics-handler.html). Therefore, the graceful shutdown implemented by #1267 does not work.  See the following:  * [Bug 420142 - Jetty9's graceful shutdown is not graceful](https://bugs.eclipse.org/bugs/show_bug.cgi?id=420142) * [Commit: 420142 reimplemented graceful shutdown](https://github.com/eclipse/jetty.project/commit/28566c72c8bb091b272fd7b25fb7b4389363b024) ","true","bug"
"dropdown menu filter method modified","intermediate match & case insensitive not using regexp  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"https://gitbucket.github.io 404s","This is really a meta project issue. You really should make the main site redirect or do something other than 404. Anyone landing on the plain url without the /gitbucket-news will think the project is gone.","false","document,task"
"Autolinked references","## Issue **Impacted version**: any  **Deployment mode**: irrelevant  **Problem description**:  Requesting the autolinked references feature as described on GitHub's [Autolinked references and URLs](https://help.github.com/articles/autolinked-references-and-urls/) help page.  Specifically, being able to turn `#1` into a reference to an issue/pull request, and being able to turn a commit SHA into a link to the commit.  Many thanks for being awesome.","false","improvement"
"dropdown menu filter algorithm modification","currently it is intermediate match and case sensitive. after modification, intermediate match and case insensitive.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"How to reset the Config file I made  a mistake and Cant acces the Web UI","Fixed","false","question"
"can't subscribe feed","## Issue **Impacted version**: 4.11.10  **Deployment mode**: Windows Server 2012 R2 + Apache 2.4.25 + JDK 8u121 + Tomcat 8.0.43  **Problem description**: I tried to subscribe to /activities.atom with Thunderbird and Outlook, but I got error. I guess that GitBucket returned the redirect response to the login screen. Is there any solution?","false","question"
"Repository mirror","## Issue **Impacted version**: 4.11  **Deployment mode**: not relevant  **Problem description**: As a user I want a repository mirror as described in https://help.github.com/articles/duplicating-a-repository/#mirroring-a-repository-in-another-location . When I create a new repository, I want the ability to setup a mirror. This could be a read-only repository or with forward pushing. It should be updated automatically by a user defined interval.  In Gogs/ Gitea you can choose mirror function when migrating a repository: ![gitea_repository_mirroring](https://cloud.githubusercontent.com/assets/12123241/25444321/f86e7c90-2aaa-11e7-9315-4ac0610922a7.jpg)   ","false","feature,plugin"
"dropdown menu filter in branch compare page","filter applied ""base fork:"" ""base:"" ""head fork:"" ""compare:"" menus. filter method is intermediate match and case insensitive.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct","true","feature"
"Authentication fails with NullPointerException when pushing to gist repository","## Issue **Impacted version**: GitBucket 4.11  ``` java.lang.NullPointerException: null 	at slick.jdbc.StatementInvoker.results(StatementInvoker.scala:33) 	at slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22) 	at slick.jdbc.Invoker.foreach(Invoker.scala:48) 	at slick.jdbc.Invoker.foreach$(Invoker.scala:47) 	at slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16) 	at slick.jdbc.Invoker.firstOption(Invoker.scala:24) 	at slick.jdbc.Invoker.firstOption$(Invoker.scala:22) 	at slick.jdbc.StatementInvoker.firstOption(StatementInvoker.scala:16) 	at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$BlockingQueryInvoker.firstOption(BlockingProfile.scala:90) 	at gitbucket.core.service.AccountService.getAccountByUserName(AccountService.scala:84) 	at gitbucket.core.service.AccountService.getAccountByUserName$(AccountService.scala:83) 	at gitbucket.core.servlet.GitAuthenticationFilter.getAccountByUserName(GitAuthenticationFilter.scala:16) 	at gitbucket.core.service.AccountService.defaultAuthentication(AccountService.scala:34) 	at gitbucket.core.service.AccountService.authenticate(AccountService.scala:20) 	at gitbucket.core.service.AccountService.authenticate$(AccountService.scala:16) 	at gitbucket.core.servlet.GitAuthenticationFilter.authenticate(GitAuthenticationFilter.scala:16) 	at gitbucket.core.servlet.GitAuthenticationFilter.$anonfun$pluginRepository$2(GitAuthenticationFilter.scala:60) 	at gitbucket.core.servlet.GitAuthenticationFilter$$Lambda$573/1298558367.apply(Unknown Source) 	at scala.Option.flatMap(Option.scala:171) 	at gitbucket.core.servlet.GitAuthenticationFilter.pluginRepository(GitAuthenticationFilter.scala:58) 	at gitbucket.core.servlet.GitAuthenticationFilter.$anonfun$doFilter$1(GitAuthenticationFilter.scala:38) 	at gitbucket.core.servlet.GitAuthenticationFilter.$anonfun$doFilter$1$adapted(GitAuthenticationFilter.scala:36) 	at gitbucket.core.servlet.GitAuthenticationFilter$$Lambda$571/1591845119.apply(Unknown Source) 	at scala.Option.map(Option.scala:146) 	at gitbucket.core.servlet.GitAuthenticationFilter.doFilter(GitAuthenticationFilter.scala:36) ```","false","bug"
"Show CommitStatus in commits page.","This PR adds commit status(Jenkins, etc. check) shows in commits page Like [GitHub](https://github.com/gitbucket/gitbucket/commits/master).  ![212204-root jenkinstest - google chrome](https://cloud.githubusercontent.com/assets/6997928/25304426/df07617e-27a1-11e7-85cf-8e9de12c657d.png)   ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Can't clone /owner/repo.git style url by git-2.12.2","### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ## Issue **Impacted version**: current master I checked maybe 4.11 too?  **Deployment mode**: standalone app with listen 80 port.  **Problem description**: - git clone http://localhost/owner/repo.git can't work with current version of git.  ``` C:\Users\kounoike\Documents\gitbucket\t>git --version git version 2.12.2.windows.2  C:\Users\kounoike\Documents\gitbucket\t>git clone http://localhost/root/JenkinsTest.git Cloning into 'JenkinsTest'... fatal: unable to update url base from redirection:   asked for: http://localhost/root/JenkinsTest.git/info/refs?service=git-upload-pack    redirect: http://localhost/git/root/JenkinsTest.git/info/refs ```  maybe, redirect isn't accepted by current version of git cli? It is serious  problem for GitBucket-Jenkins integration.","false","bug"
"invalid characters","v4.11.0  creation of repository with the '+' symbol is permitted (#802), but in editing this repo it throws ""Repository Name contains invalid character."" when applying changes  - create repository with '+' - goto settings - switch for example forks enabled - apply changes","false","bug"
"modify branch filter method","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ---- I recreate this PR in response to a comment in #1549.  This patch enables GitBucket to filter branch names by intermediate & case insensitive match.  ","true","bug"
"Modify branch filter method","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ====  Currently, case sensitive and forward match. This patch makes to achieve case insensitive and intermediate match. When having MANY branches, this feature must be useful. (GitHub seems to have same feature)","true",
"Fix #1525 move attached directory when rename/transfer repo.","This PR fixes #1525 and same problem when transferring ownership of repository.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"root dir in archive file","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ---- With GitHub/GitHub Enterprise, they serve archive file that has root dir. root dir naming rule is same as the name of archive file. e.g.  - hogehoge-master.tar.gz - hogehoge-fc7d067cb13559f248bb362253ff2fa3b2617aba.tar.gz  The archive file that GitBucket makes, does not have root dir. So this patch make GitBucket to output same directory structure as GH/GHE.","true","improvement"
"Scala 2.12.2",,"true",
"dropdown-menu become scrollable","When the number of branches increases, the drop down menu can not be displayed. So I made the drop down menu scrollable.","true","bug"
"""sbt new"" template for GitBucket plug-ins","Please add an SBT template to be used with the ```sbt new ``` http://www.scala-sbt.org/0.13/docs/sbt-new-and-Templates.html that would generate a **usable** and up to date GitBucket plug-in.  I'm aware of https://github.com/gitbucket/gitbucket-plugin-template but that's not very usable right now (look more as an example than a template)  Thank you.","false","plugin"
"Add Release page. (close #607)","This PR adds Release page.  - Can write release notes by markdown. - Can add binary files to release. - Can modify title/release notes. - Releases appears on activity log.  These features not yet implemented.  - GitHub compatible Release API - Notification(mail)  Limitations:  - Upload file size is upto 3MB by [here](https://github.com/gitbucket/gitbucket/blob/c5a5c737bf9e4125358a257abfbd7d7ee6c5c88f/src/main/scala/gitbucket/core/controller/FileUploadController.scala#L25).  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Word wrap commit descriptions","As @joshuacurtiss noticed in #1539, commit descriptions do not word wrap. Also because of this ""Browse code"" link was missing/hidden (see screenshots).  I fixed it as @joshuacurtiss suggested. Thanks!  Before fix: ![before](https://cloud.githubusercontent.com/assets/25744491/25066873/00f9d95c-2233-11e7-957d-5408380c51ef.png)  After fix: ![after](https://cloud.githubusercontent.com/assets/25744491/25066875/0898e27a-2233-11e7-8e78-667d11857b14.png)  ","true","improvement"
"error: unpack failed: error Out of memory loading unknown object","git push receive error:  POST git-receive-pack (chunked) error: unpack failed: error Out of memory loading unknown object","false","question"
"Fixes #1481","Slick was generating invalid SQL query because of missing Options in column definitions.  After this fix, tags appear in issues list.","true","bug"
"Commit comments do not word wrap","## Issue **Impacted version**: 4.11 (and previous)  **Deployment mode**: Irrelevant   **Problem description**: Commit descriptions do not word wrap. The additional comments that are wrapped with `pre` tags will have horizontal scrolling and not actually word wrap.  This is not consistent with GitHub behavior which uses `pre` tags but still wraps the content.  May I suggest adding the following CSS to the `.commit-description` class to accomplish word wrapping that mimics GitHub:  ``` white-space: pre-wrap; word-break: break-word; ```","false","improvement"
"Fix loading avatar from resources","Unknown users avatars (the ones who don't have account created in Gitbucket) wasn't displaying (404 error).  After investigating, I found that resource path was invalid.  Before: ![before](https://cloud.githubusercontent.com/assets/25744491/25006539/97c202b0-205d-11e7-8d4a-ddb9e4dec7ab.png)  After: ![after](https://cloud.githubusercontent.com/assets/25744491/25006548/a2702390-205d-11e7-86ef-28e196a71d90.png) ","true",
"To have compatibility with GitHub/GitHubEnterprise","when archive downloading with sha1, even if supplied part of sha1, GH/GHE gives a filename with full(long) sha1.  This patch make GitBucket to be compatible with GH/GHE behaviour.  You can check that difference by following url. I upload same repo as in GitHuB to GitBucket demo site.   GitHub:   https://github.com/MunGell/awesome-for-beginners/archive/fc7d067.tar.gz GitBucket: http://gitbucket.herokuapp.com/root/awesome-for-beginners/archive/fc7d067.tar.gz  GH returns, awesome-for-beginners-fc7d067cb13559f248bb362253ff2fa3b2617aba.tar.gz Otherwise GitBucket returns, awesome-for-beginners-fc7d067.tar.gz  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Max File Size for LFS Files?","## Issue **Impacted version**: 4.11  **Deployment mode**: standalone app on a Windows Server 2016 machine, intranet access via a 1Gbps wired network  **Problem description**: LFS files over 30,000,000 bytes cannot be pushed.  I've created a dummy file (`1fb535...`) of size 30,000,001 bytes, running  ``` GIT_TRACE=1 git lfs push --object-id origin 1fb535... ``` gives a 404 error while **PUT**ting (see the log attached at the end of this issue, too long). However, if this file is one byte shorter, it can be pushed successfully.   Is there a place I could config the max file size?  The log attached:  > 11:31:55.457406 git.c:563               trace: exec: 'git-lfs' 'push' '--object-id' 'origin'  '1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac' 11:31:55.457908 run-command.c:336       trace: run_command: 'git-lfs' 'push' '--object-id' 'origin' '1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac' trace git-lfs: run_command: 'git' version trace git-lfs: run_command: 'git' config -l trace git-lfs: tq: running as batched queue, batch size of 100 trace git-lfs: tq: sending batch of size 1 trace git-lfs: api: batch 1 files trace git-lfs: creds: git credential fill (""http"", ""10.2.10.110:1111"", ""git/project/project.git"") trace git-lfs: Filled credentials for http://10.2.10.110:1111/git/project/project.git trace git-lfs: HTTP: POST http://10.2.10.110:1111/git/project/project.git/info/lfs/objects/batch trace git-lfs: HTTP: 200 trace git-lfs: HTTP: {""transfer"":""basic"",""objects"":[{""oid"":""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"",""size"":30000001,""authenticated"":true,""actions"":{""upload"":{""href"":""http://10.2.10.110:1111/git/git-lfs/project/project/1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"",""header"":{""Authorization"":""woOeaiGIUPvw9g0wluK/7ChAhyUvd6yUnLD1BDTJE+d6Ucold9sptT0WsFSj2TijvvVh6xvmX+u0uwFbTCn1BztKtoGC6qmJ3Fw0b/tZTPs=""},""expires_at"":""2017-04-10T03:41:54Z""}}}]} trace git-lfs: tq: starting transfer adapter ""basic"" trace git-lfs: xfer: adapter ""basic"" Begin() with 3 workers trace git-lfs: xfer: adapter ""basic"" started trace git-lfs: xfer: adapter ""basic"" worker 0 starting trace git-lfs: xfer: adapter ""basic"" worker 1 starting trace git-lfs: xfer: adapter ""basic"" worker 1 waiting for Auth trace git-lfs: xfer: adapter ""basic"" worker 2 starting trace git-lfs: xfer: adapter ""basic"" worker 2 waiting for Auth Git LFS: (0 of 1 files) 0 B / 28.61 MB                                         trace git-lfs: xfer: adapter ""basic"" worker 0 processing job for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" trace git-lfs: HTTP: PUT http://10.2.10.110:1111/git/git-lfs/project/project/1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac Git LFS: (0 of 1 files) 0 B / 28.61 MB                                         trace git-lfs: xfer: adapter ""basic"" worker 1 auth signal received trace git-lfs: xfer: adapter ""basic"" worker 2 auth signal received trace git-lfs: HTTP: 404 trace git-lfs: xfer: adapter ""basic"" worker 0 finished job for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" trace git-lfs: tq: retrying object 1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac trace git-lfs: tq: enqueue retry #1 for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" (size: 30000001) trace git-lfs: tq: sending batch of size 1 trace git-lfs: api: batch 1 files trace git-lfs: creds: git credential fill (""http"", ""10.2.10.110:1111"", ""git/project/project.git"") trace git-lfs: Filled credentials for http://10.2.10.110:1111/git/project/project.git trace git-lfs: HTTP: POST http://10.2.10.110:1111/git/project/project.git/info/lfs/objects/batch trace git-lfs: HTTP: 200 trace git-lfs: HTTP: {""transfer"":""basic"",""objects"":[{""oid"":""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"",""size"":30000001,""authenticated"":true,""actions"":{""upload"":{""href"":""http://10.2.10.110:1111/git/git-lfs/project/project/1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"",""header"":{""Authorization"":""woOeaiGIUPt8cYJ4Mwq2qyhAhyUvd6yUnLD1BDTJE+d6Ucold9sptT0WsFSj2TijvvVh6xvmX+u0uwFbTCn1BztKtoGC6qmJ3Fw0b/tZTPs=""},""expires_at"":""2017-04-10T03:41:55Z""}}}]} Git LFS: (0 of 1 files) 0 B / 28.61 MB                                         trace git-lfs: xfer: adapter ""basic"" worker 1 processing job for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" trace git-lfs: HTTP: PUT http://10.2.10.110:1111/git/git-lfs/project/project/1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac trace git-lfs: HTTP: 404 trace git-lfs: xfer: adapter ""basic"" worker 1 finished job for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" trace git-lfs: tq: retrying object 1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac trace git-lfs: tq: enqueue retry #2 for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" (size: 30000001) trace git-lfs: tq: sending batch of size 1 trace git-lfs: api: batch 1 files trace git-lfs: creds: git credential fill (""http"", ""10.2.10.110:1111"", ""git/project/project.git"") trace git-lfs: Filled credentials for http://10.2.10.110:1111/git/project/project.git trace git-lfs: HTTP: POST http://10.2.10.110:1111/git/project/project.git/info/lfs/objects/batch trace git-lfs: HTTP: 200 trace git-lfs: HTTP: {""transfer"":""basic"",""objects"":[{""oid"":""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"",""size"":30000001,""authenticated"":true,""actions"":{""upload"":{""href"":""http://10.2.10.110:1111/git/git-lfs/project/project/1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"",""header"":{""Authorization"":""woOeaiGIUPsyhad92GsQdyhAhyUvd6yUnLD1BDTJE+d6Ucold9sptT0WsFSj2TijvvVh6xvmX+u0uwFbTCn1BztKtoGC6qmJ3Fw0b/tZTPs=""},""expires_at"":""2017-04-10T03:41:55Z""}}}]} Git LFS: (0 of 1 files) 4.00 KB / 28.61 MB                                     trace git-lfs: xfer: adapter ""basic"" worker 2 processing job for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" trace git-lfs: HTTP: PUT http://10.2.10.110:1111/git/git-lfs/project/project/1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac trace git-lfs: HTTP: 404 trace git-lfs: xfer: adapter ""basic"" worker 2 finished job for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" trace git-lfs: tq: retrying object 1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac trace git-lfs: tq: enqueue retry #3 for ""1fb5354d4d618bcff0c01c1540c487d9fb71f35ac83c0c6f8b1e3a0bd8b26eac"" (size: 30000001) trace git-lfs: tq: sending batch of size 1 trace git-lfs: api: batch 1 files trace git-lfs: creds: git credential fill (""http"", ""10.2.10.110:1111"", ""git/project/project.git"") trace git-lfs: Filled credentials for http://10.2.10.110:1111/git/project/project.git trace git-lfs: HTTP: POST http://10.2.10.110:1111/git/project/project.git/info/lfs/objects/batch","false","document,question"
"Support Basic Auth for ""Raw"" when repo is private.","This is a feature request: I would like to have basic auth for requests to the raw url on private repo's.   This way I could wget the data still without having git onto the target system.","false","feature"
"improve workding",,"true",
"Dependency updates","Separate #1526 in 2 PRs . This is the second one!","true","improvement"
"Wording improvements.","Separate https://github.com/gitbucket/gitbucket/pull/1526 in 2 PRs . This is the first one!","true",
"LFS Folder Path is Incorrect","## Issue **Impacted version**: 4.11  **Deployment mode**: standalone app  **Problem description**: The **lfs** folder path is incorrect for lfs-enabled projects. E.g., for the project _bar_ of owner _foo_, gitbucket attempts to create the lfs folder under `GITBUCKET.HOME/repositories/foo/bar/lfs` while all other files are stored under `GITBUCKET.HOME/repositories/foo/bar.git`. The first path, however, is not created while pushing lfs-handled files.   **Workaround**: For now I can create the desired lfs folder by myself, and copy all lfs objects (flattened hierarchy) into that folder manually.","false","help wanted,question"
"archive naming rule modification to have comatibility with GitHub/GitHubEnerprise.","When downloding archive file, GH/GHE use ""-"" as escape character for ""/"" in brach name.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"[hotdeploy branch] Can't copy jar to .installed on Windows","I'm writing ipynb rendering plugin with hotdeploy branch. It is very useful for writing plugins, but sometimes unstable. I found one reason described below.  ### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   ## Issue **Impacted version**: master + plugin-hotfix branch merged  **Deployment mode**: standalone  **Problem description**: - PluginRegistory copies jar to .installed step and other program(I'm using BAT file, maybe explorer) copy process are simultaneously write and reading. - It shows error message: <details> ``` Exception in thread ""Thread-11"" java.io.FileNotFoundException: C:\Users\kounoike \Documents\gitbucket\gitbucket-home-4.11\plugins\gitbucket-ipynb-plugin_2.12-1.0 .0.jar (プロセスはファイルにアクセスできません。別のプロセスが使用中です。)         at java.io.FileInputStream.open0(Native Method)         at java.io.FileInputStream.open(Unknown Source)         at java.io.FileInputStream.<init>(Unknown Source)         at org.apache.commons.io.FileUtils.doCopyFile(FileUtils.java:1138)         at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:1091)         at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:1038)         at gitbucket.core.plugin.PluginRegistry$.$anonfun$initialize$2(PluginReg istory.scala:219)         at gitbucket.core.plugin.PluginRegistry$.$anonfun$initialize$2$adapted(P luginRegistory.scala:216)         at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scal a:32)         at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.sca la:29)         at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:193)         at gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistory.scal a:216)         at gitbucket.core.plugin.PluginRegistry$.reload(PluginRegistory.scala:17 6)         at gitbucket.core.plugin.PluginWatchThread.$anonfun$run$3(PluginRegistor y.scala:325)         at gitbucket.core.plugin.PluginWatchThread.$anonfun$run$3$adapted(Plugin Registory.scala:323)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$Blo ckingDatabase.$anonfun$withTransaction$2(BlockingProfile.scala:190)         at slick.JdbcProfileBlockingSession$BlockingSession.withTransaction(Tran sactionalJdbcBackend.scala:26)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$Blo ckingDatabase.$anonfun$withTransaction$1(BlockingProfile.scala:190)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$Blo ckingDatabase.withSession(BlockingProfile.scala:183)         at com.github.takezoe.slick.blocking.BlockingJdbcProfile$BlockingAPI$Blo ckingDatabase.withTransaction(BlockingProfile.scala:190)         at gitbucket.core.plugin.PluginWatchThread.run(PluginRegistory.scala:323 ) ``` </details>","false",
"DIFF too large -> can I somehow look at the diff of a single file within gitbucket?","### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.11 and probably all previous versions  **Deployment mode**: standalone app behind an apache rev proxy  **Problem description**: * I look at the commits of a repository * Some of them are quite large, for example when affecting hundreds of files * For these, the diffs aren't shown. Instead, the string ""Too large"" appears (which is fine) * Now the issue: I cannot find any way to show the diff for a single file. I know and I accept that the diffs for all 500 files is ""Too large"" to show. But for a single file, it should be possible to show the diff somehow. ","false","feature"
"nested group","Is it possible to support nested group?  ~~~~ ncomp/sirius.git ncomp/sirius/manager.git ~~~~","false","question"
"update dependencies and wording","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"comments directory doesn't  renamed when repository renamed","### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.11  **Deployment mode**: Tomcat, also reproduced on standalone mode.  **steps to reproduce**: - create repository `root/test` - create issue `root/test#1` with one or more attachement files. - rename `root/test` to `root/test_renamed`  **problems**:  Now, `root/test_renamed#1`'s attachement shows 404. There are two (or more?) problems.  1. in `$GITBUCKET_HOME/repositories/root`, there are three directory `test`, `test_renamed.git` and `test_renamed.wiki.git`. first one is not `test_renamed`. 2. in issue `root/test/#1`, attachements are linked as full path to old repository name.  by problem 1, we can't access to attachement file by any URL. neither old one or renamed one. `$GITBUCKET_HOME/repositories/root/test` directory MUST be renamed as `$GITBUCKET_HOME/repositories/root/test_renmaed` when repository is renamed. links in comments SHOULD be rewritten automatically or show message such as ""please rewrite link"".","false","bug"
"LDAP Login issue - for some","I have a working gitbucket and ldap system, but some users (esp. new) cannot login to gitbucket with the same password they use everwhere else  I had done some testing on this, but even pretty plain ascii [A-z0-9] passwords do not work.   Users that have logged in earlier are not bugged?!  I noticed, that there are different messages on the console, but i don't know scala to look through any code myself:  user with right password cannot login:   09:41:38.661 [qtp21338231-5855] INFO  g.core.service.AccountService - Failed to authenticate: ldaptest  user with wrong password cannot login (as expected)  09:42:31.862 [qtp21338231-5312] INFO  gitbucket.core.util.LDAPUtil$ - LDAPException: Invalid Credentials (49) Invalid Credentials LDAPException: Matched DN:  09:42:31.863 [qtp21338231-5312] INFO  g.core.service.AccountService - LDAP error: User LDAP Authentication Failed. 09:42:31.864 [qtp21338231-5312] INFO  g.core.service.AccountService - Failed to authenticate: ldaptest   NOTE: when I extend the right password with some crappy more signs behind, the FIRST message stay, only if i messed the password completely, SECOND notice is send.   I tried every combination of SSL/TLS setting, also with registration free but it doesn't change. Any Idea?   ","false","LDAP/SSO"
"Gitbucket 4.11 is invalidate SSH-Keys which contains newline character","## Issue **Impacted version**: 4.11  **Deployment mode**: standalone app  **Problem description**:  Gitbucket 4.10 or before allow newline charactor at SSH-Key strings. When I update Gitbucket from 4.10 to 4.11, all SSH-keys with newlines stored database become invalid-keys. ","false","bug"
"s/newInstance()/getDeclaredConstructor().newInstance()","`java.lang.Class#newInstance` deprecated since Java 9  http://download.java.net/java/jdk9/docs/api/java/lang/Class.html#newInstance--","true",
"update MySQL v5_7_latest in test","v5_7_10 does not work with Sierra  https://github.com/wix/wix-embedded-mysql/blob/wix-embedded-mysql-2.1.4/src/main/java/com/wix/mysql/distribution/Version.java#L86 ","true",
"some refactoring",,"true",
"Rename H2 Database File!","Please rename the H2 Database file from ```data.mv``` to something more suggestive like ```gitbucket.mv``` or ```gitbucket-db.mv```  Thank you.","false",
"Add caution message when using H2 database","This PR adds messages when using H2 database. Because H2 is not stable for production environment.  In sign in dialog: ![192658-sign in - google chrome](https://cloud.githubusercontent.com/assets/6997928/24578850/bfe57a70-1724-11e7-907c-515f63476025.png)  In System settings: ![214653-system settings - google chrome](https://cloud.githubusercontent.com/assets/6997928/24578852/c8b8a974-1724-11e7-9db4-881952112157.png)   ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Fix #1516 send noimage.png if user is removed.","This PR fixes #1516. Sorry, I didn't care to removed user in #1497.  Before: ![205518-manage users - google chrome](https://cloud.githubusercontent.com/assets/6997928/24578784/0802730a-1723-11e7-9c6d-335a4202bf40.png)   After: ![205802-manage users - google chrome](https://cloud.githubusercontent.com/assets/6997928/24578785/0a4ea156-1723-11e7-8efe-d1e1a4240caa.png)   ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing (mysql test is failed by timeout) - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"getting avatars of disabled accounts results in 404 (as of 4.11)","`_unknown/_avatar` returns 404 under GitBucket 4.11 <img width=""380"" alt=""2017-04-01 20 43 48"" src=""https://cloud.githubusercontent.com/assets/18342/24578492/3d46d94a-171c-11e7-9844-1baea6e18ee2.png"">  returning an image is expected (gray-man is okay).","false","bug"
"GitBucket Compatibility Issues With golang","I have a client whose dev team has identified what is believed to be a golang import problem that makes it not place nice with GitBucket.  See:  https://github.com/golang/go/issues/19766  Additionally, there is a corner case that has shown up that they believe is an artifact of default GitBucket behavior:  If you try to import domain.of.repo/repo/name/deep/import, go tries to http get domain.of.repo/repo/name/deep/import, which 404s, because gitbucket serves that path at domain.of.repo/repo/name/tree/master/deep/import.  The devs are asking if the GitBucket team might consider whether gitbucket could be enhanced to be smart enough to redirect requests for a path inside a known repo to default to the master branch so http get /repo/name/deep/import -> /repo/name/tree/master/deep/import  Thoughts?  ","false","improvement"
"Possible Regression?","Just noticed in 4.10   http://gitbucket ..../user/reponame  -> works  http://gitbucket ..../user/reponame/  -> trailing slash breaks and shows jetty error","false","duplicate"
"Migrate from joda-time to java.time","Joda-time was a great library prior to Java SE 8. But since gitbucket targets Java SE 8 now, it is recommended (by joda authors) to migrate to `java.time` API.  How to migrate: http://blog.joda.org/2014/11/converting-from-joda-time-to-javatime.html","false","improvement"
"Enable safe optimisations in scalac","As discussed in https://github.com/gitbucket/gitbucket/commit/a024491296578f00893857d3b704e9f28d7b9524","true","improvement"
"Group updating is incorrect","## Issue **Impacted version**: 4.10  **Problem description**: - UPDATED_DATE is not updated when group is updated - DESCRIPTION and URL are swapped when group is updated in the admin console  This bug was reported on gitter. ","false","bug"
"Integration with Slack sends message with broken link if branch name has a slash character","## Issue **Impacted version**: 4.9.0  **Problem description**: Every time I push a branch to GitBucket, a notification message is posted on a Slack channel. That message has a link that points to the branch. If the branch name has a slash character, like `feature/some-branch-name`, the link is broken because the slash becomes a `%2F`. To illustrate that, using the JavaScript encodeURI & encodeURIComponent functions:  console.log(`encodeURI('feature/do-something')`) VM161:1 `feature/do-something`  console.log(`encodeURIComponent('feature/do-something')`) VM167:1 `feature%2Fdo-something`  I'm not sure exactly whose problem this is -- of GitBucket or of Slack. Whoever is creating the link seems to be encoding the slash in the branch name to %2F.  #### Message in Slack: ``` github APP [9:46 AM]  [some-repository:feature/do-something] (<-- broken link) 1 new commit by Some One: `52a9b52` Add missing parameters to main function - Some One ```  LINK:  `https://www.some.where/gitbucket/some-group/some-repository/tree/feature%2Fdo-something`","false","help wanted"
"Fix broken diffstat layout at zoom in/out","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  **currently zoom out** ![image](https://cloud.githubusercontent.com/assets/1295639/24248174/bb665fb0-1011-11e7-91c7-3565b9ec9375.png)  **currently zoom in** ![image](https://cloud.githubusercontent.com/assets/1295639/24248205/e0d886ec-1011-11e7-999f-592e936fcd45.png) ","true","bug"
"Integration with intellij tasklist","## Issue **Impacted version**: 4.10.0  **Deployment mode**: Deployed using tomcat8, with or without nginx proxy  **Problem description**: With IntelliJ, we can connect to several issue manager ![image](https://cloud.githubusercontent.com/assets/972209/24100343/09b6d316-0d74-11e7-9c3e-367f18e71e9c.png)   When I try to add my own installation of gitbucket as a github one, I have this error message:  ``` Can't get queried issues: Dibox/DIBOX - repo%3ADibox%2FDIBOX+state%3Aopen+null 404 Introuvable - Not Found ```  Also, I can't update issue from IntelliJ.  I'm using: IntelliJ IDEA 2017.1 Build #IC-171.3780.52, built on March 15, 2017 JRE: 1.8.0_112-release-736-b11 amd64 JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o Linux 4.10.3-1-ARCH","false",
"Extending markdown code block renderer by plugin system","This changes provides code render in a markdown file. A plugin will be able to render a code block like the below code in markdown.      ```plantuml     @startuml     Bob->Alice : hello     @enduml     ```  This code will be handle by a plugin.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Diffstat displays only top-level files in the first commit.","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Currently, diffstat displays only top-level files at the first commit. This patch displays diffstat for all files.  --- **fixed diffstat**  ![image](https://cloud.githubusercontent.com/assets/1295639/24077631/72375862-0c97-11e7-9a45-09b41bf1004f.png)  --- **git log**  ![image](https://cloud.githubusercontent.com/assets/1295639/24077632/83d8cfba-0c97-11e7-8b62-ceb788ff4988.png)  --- **currently diffstat**  ![image](https://cloud.githubusercontent.com/assets/1295639/24077636/989c5a48-0c97-11e7-96b4-6fc662b8ba0e.png) ","true","bug"
"fix to align diffstat positions (refs #1503)","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  ![image](https://cloud.githubusercontent.com/assets/1295639/24070982/e930e5ce-0c0a-11e7-9f8a-6f8c87cd2b24.png)  It is strange that `class=""border""` was not attached when i = 0 in the source before correction. If there is no `class=""border""` in the 1st diffstat, the 2nd diffstat will not be aligned.  ![image](https://cloud.githubusercontent.com/assets/1295639/24071064/4f329af0-0c0d-11e7-9940-d7a01dd87798.png) ","true",
"Upgraded to jgit-4.6.1.201703071140-r","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"diffstat is not align in commit view page","### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: 4.10  **Deployment mode**: standalone app  **Problem description**:  ![image](https://cloud.githubusercontent.com/assets/1295639/24068852/a9af0224-0bdc-11e7-9244-75d166bda77c.png)  ","false","bug,help wanted"
"Failing to add new files tracked by LFS when using SSH protocol","I have a set of repositories managed from a locally running GitBucket server. The repositories are cloned on the drive using ssh protocol, and I track pdf files (among others) using git lfs.  One thing is not working though. When I add a new file which is tracked (e.g. x.pdf) and commit, during push to remote it will fail with following error message:  [master 02b133e] commit message  1 file changed, 3 insertions(+)  create mode 100644 test/x.pdf diego@diego-T420s ~/Documents/test (master)$ git push Git LFS: (0 of 1 files) 0 B / 920.54 KB                                                                                                                                        batch request: exit status 1 error: failed to push some refs to 'ssh://git@localhost:29418/diego/Documents.git'  This won't happen if I clone using HTTP protocol. But there it keeps asking for user name and password, which is annoying (therefore I would prefer to keep using SSH)  Any hints on how to make it work? Where can I find helpful log files produced by GitBucket? Thx Diego ","false","question"
"add permalink to issue comments","This PR adds permalink to issue comments.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"fix CSS for PR comments layout (refs. #1366)","from https://developer.mozilla.org/en-US/docs/Web/CSS/white-space white-space: normal is initial value. This PR changes `white-space: initial;` to `white-space: normal`.  broken image in #1366.  This PR fixes layout.  Internet Explorer 11: ![004051-update readme md - pull request 4 - gr1 test1 - internet explorer](https://cloud.githubusercontent.com/assets/6997928/24051227/d9ae5910-0b74-11e7-8eb4-404df0a70464.png)  Chrome: ![004015-update readme md - pull request 4 - gr1 test1 - google chrome](https://cloud.githubusercontent.com/assets/6997928/24051235/e178be06-0b74-11e7-9c0d-2d45ebfe3af9.png)   Firefox: ![004204-update readme md - pull request 4 - gr1 test1 - mozilla firefox](https://cloud.githubusercontent.com/assets/6997928/24051257/eb0240be-0b74-11e7-94d4-4e03685d20a4.png)   ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Guest users can't clone private repositories","**Impacted version**: 4.10  **Problem description**:  Guest users can clone or fetch private repositories via ssh, but they can't do it via http.  This issue was reported by @leo-sugiyama on the gitter.","false","bug"
"Exception in repository transferring or renaming","**Impacted version**: 4.10  **Problem description**:  Repository transferring or renaming cause a following exception:   ``` org.h2.jdbc.JdbcBatchUpdateException: ユニークインデックス、またはプライマリキー違反: ""PRIMARY_KEY_2 ON PUBLIC.ISSUE_LABEL(USER_NAME, REPOSITORY_NAME, ISSUE_ID, LABEL_ID) VALUES ('[移動先グループ名]', '[リポジトリ名]', 81, 1304, 660)"" Unique index or primary key violation: ""PRIMARY_KEY_2 ON PUBLIC.ISSUE_LABEL(USER_NAME, REPOSITORY_NAME, ISSUE_ID, LABEL_ID) VALUES ('[移動先グループ名]', '[リポジトリ名]', 81, 1304, 660)""; SQL statement: insert into ""ISSUE_LABEL"" (""USER_NAME"",""REPOSITORY_NAME"",""ISSUE_ID"",""LABEL_ID"")  values (?,?,?,?) [23505-192] ～～ ～～ ```  This issue was reported by @qoAopx on the gitter room.","false","bug"
"Add support auto-generated icon for default avatar.","If gravatar settings is off and user doesn't upload icon, GitBucket 4.10 returns noimage.png for avatar. This PR changes noimage.png to auto generated icon by first letter of name and random color.  ![224828-manage users - google chrome](https://cloud.githubusercontent.com/assets/6997928/24002649/a242a5b0-0aa4-11e7-9f4c-2b96116beccf.png)  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Deployment fails on Synology NAS - Tomcat 7","## Issue **Impacted version**:  4.10  **Deployment mode**:  Synology NAS DS214 DSM 6.1 (armv32) Tomcat 7.0.73 Java 8.0.101  **Problem description**: - Deployment via Tomcat Manager fails (see error logs)  **Error logs**  ``` INFO: Deploying web application archive /volume1/Webapps/gitbucket.war Mar 15, 2017 3:52:47 PM org.apache.catalina.startup.TldConfig execute INFO: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time. SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/volume1/Webapps/gitbucket/WEB-INF/lib/logback-classic-1.1.7.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/volume1/Webapps/gitbucket/WEB-INF/lib/slf4j-jdk14-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] 15:53:42.969 [http-bio-7070-exec-2] INFO  o.scalatra.servlet.ScalatraListener - The cycle class name from the config: ScalatraBootstrap 15:53:43.324 [http-bio-7070-exec-2] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap Mar 15, 2017 3:54:54 PM org.apache.catalina.core.StandardContext startInternal SEVERE: One or more listeners failed to start. Full details will be found in the appropriate container log file Mar 15, 2017 3:54:54 PM org.apache.catalina.core.StandardContext startInternal SEVERE: Context [/gitbucket] startup failed due to previous errors 15:55:27.727 [http-bio-7070-exec-2] INFO  o.a.sshd.common.util.SecurityUtils - Trying to register BouncyCastle as a JCE provider 15:55:45.603 [http-bio-7070-exec-2] INFO  o.a.sshd.common.util.SecurityUtils - Registration succeeded 15:55:49.987 [http-bio-7070-exec-2] INFO  o.scalatra.servlet.ScalatraListener - Destroying life cycle class: ScalatraBootstrap Mar 15, 2017 3:55:50 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesJdbc SEVERE: The web application [/gitbucket] registered the JDBC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. Mar 15, 2017 3:55:50 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [job-scheduler-1] but has failed to stop it. This is very likely to create a memory leak. Mar 15, 2017 3:55:50 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [job-akka.actor.default-dispatcher-6] but has failed to stop it. This is very likely to create a memory leak. Mar 15, 2017 3:55:51 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [job-akka.actor.default-dispatcher-7] but has failed to stop it. This is very likely to create a memory leak. Mar 15, 2017 3:55:52 PM org.apache.catalina.loader.WebappClassLoaderBase loadClass INFO: Illegal access: this web application instance has been stopped already.  Could not load akka.actor.dungeon.ChildrenContainer$NormalChildrenContainer$.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact. ```","false",
"gitbucket upgrade","I have tried to upgrade from 3.11 to latest version,   1. first upgraded from 3.11 to 3.14 then 4.0. It has been upgraded, but latest repositories are lost, i could not find them in 4.0.  2. Can we in creating repository, is this area a wordpress site?  Can I create pages with the wordpress admin, etc.  Can I load a theme?  Does GitBucket allow page creation like BitBucket?  3. Need to create docs and wiki for particular repo.  early response much appreciated..  ","false","question"
"Update documentation (readme and/or Wiki) with the minimal requirements","## Issue **Impacted version**: 4.10  **Deployment mode**: not applicable  **Problem description**: I am considering installing gitbucket on my server, but I am concerned by the minimum hardware requirements (mainly CPU and memory). It would be helpful to have a small overview of what will be used by the application (I mean are we talking about Octocore+16GB or monocore+500MB)? This could be interesting to adapt the README (and/or the Wiki) without being as exhausted as [Gitlab](https://docs.gitlab.com/ce/install/requirements.html#hardware-requirements)   ","false","document"
"Update copyright's year in the license file","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [ ] verified that project is compiling → I assumed that my changes would not break the compilation - [ ] verified that tests are passing → I assumed that my changes would not invalidate the tests - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct → I did not find any open issue with copyright or license keyword ","true",
"add Java 9 test",,"true",
"Add Cache-Control header for _avatar and /plugin-assets (refs #777)","For reduce network connection and CPU usage, add Cache-Control header.  On my PC, _avatar image transfer requires ~30ms per user. /plugin-assets requires 200~300ms per file. on #1489, some CSS/JS moved to /plugin-assets, it requires maybe 1s. Because browser caches these files, it makes good effect to CPU usage too.  max-age=3600 means 60*60sec. There is no reason to chose this time.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Can't compile with Java9","replace [`java.util.Base64`](https://docs.oracle.com/javase/8/docs/api/java/util/Base64.html) ?  ``` [error] /home/travis/build/xuwei-k/gitbucket/src/main/scala/gitbucket/core/util/AuthUtil.scala:16: type BASE64Decoder is not a member of package sun.misc [error]       new String(new sun.misc.BASE64Decoder().decodeBuffer(header.substring(6))) [error]                               ^ [error] one error found [error] (compile:compileIncremental) Compilation failed ```  - https://travis-ci.org/xuwei-k/gitbucket/jobs/210258433 - https://github.com/xuwei-k/gitbucket/commit/e55ad2ea5bc89b1967675448d4afdaa02ec86145 - https://github.com/gitbucket/gitbucket/blob/a684fa8a8e09e298ae816e150ac7f1a2c026eca4/src/main/scala/gitbucket/core/util/AuthUtil.scala#L16  ","false","improvement"
"Add Theme Plugin support","This PR introduce ""Theme Plugin"" support. discoused in #1279.  Each GitBucket instance has some ""theme""s. And each theme has some ""skin""s. ex.  - [AdminLTE theme](https://github.com/kounoike/gitbucket-theme-AdminLTE-plugin) is theme of AdminLTE theme.     - skin-blue     - skin-blue-light     - skin-black     - skin-black-light, etc. - [AdminLTE pink theme](https://github.com/kounoike/gitbucket-theme-AdminLTE-pink-plugin) is demonstrate version theme.     - skin-pink  In System settings, You can chose ""skin name"" with theme/skin pair.  ![140328-system settings - google chrome](https://cloud.githubusercontent.com/assets/6997928/23829182/af3b1952-072d-11e7-94f3-8d950e0e3dda.png)  first option is adminLTE-pink theme's skin. others are AdminLTE theme's skin.  theme/skin setting is saved into GITBUCKET_HOME/gitbucket.conf.  Every page of GitBucket load only selected theme's CSS/JS.  If you didn't have no theme-plugins, fallback to previous AdminLTE/skin-blue settings.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Add account(group/user)'s webhooks feature.","This PR adds account(group/user) level webhooks feature. When this PR is merged, users required only once settings for many repository's webhook.  ### Group Webhook feature  [Organization Webhooks](https://developer.github.com/v3/orgs/hooks/) are GitHub's feature. But, I didn't know this feature, because I'm not member of any GitHub Organization.  ### User Webhook feature  GitHub is lucked this feature. But, I introduce it, because I can implement very easy and it maybe helpful for users.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"Plugin hot deployment","See #1484 and #1468","true","feature"
"Avoid HTTP requests to third party services such as fonts.googleapis.com","Reasons: * Privacy. Internal domains can leak through referrer headers. * Speed: When Internet access is slow, the page rendering blocks sometimes for the request to complete.  If outright removal of these references is not possible, please provide a config option to disable it. Hopefully, opt-in rather than opt-out.","false","improvement"
"Scala optimisations","In build.sbt, the scalac options have: `""-Ydelambdafy:method"", ""-target:jvm-1.8""`  Both are default in scala 2.12, so they are now redundant.  I suggest using: `-opt:_` instead. It enables all optimisations.","false",
"Development Mode for Plug-ins too!","Please add a **Development Mode** for plug-ins too!  There's a development mode for GitBucket itself:  https://github.com/gitbucket/gitbucket/blob/master/doc/how_to_run.md#run-for-development  so that source modification is detected and reloaded automatically, but there's no such a mode for the development of the plug-ins themselves :(.  One possibility might be that when in development mode, e.g. the plug-in sources could be linked from a ```/plugins/``` subdirectory and reloaded the same way it's done now for GitBucket itself.    Thank you.","false",
"Export/Import does not cover all tables!","Export/Import functionality does not seem to cover all tables in the schema: e.g. those created by the various plug-ins. They're not even included in the list so that the users can 'check' them :( .  Thank you.","false",
"SSH Keys now invalid","## Issue **Impacted version**: 4.10  **Deployment mode**: Tomcat 7  **Problem description**: I previously set up some SSH keys for my account in V4.9 and everything was working fine. Now since V4.10 my keys were suddenly shown as invalid, so I deleted them and tried adding them again but they can no longer be added as I always get the message ""Key is invalid"". I had generated 2 keys, one with ssh-keygen and another with Putty Key Generator as described [here](http://hanxue-it.blogspot.com/2014/06/using-ssh-authentication-wth-gitbucket.html), and both had worked, but before I deleted them, both were marked as invalid.  If I use the test: ssh -p 29418 -vT <myserver> this had previously provided the response described in the link, but now I get the following: > debug1: Connecting to myserver [10.216.146.132] port 29418. debug1: Connection established. debug1: identity file /C=/Users/uid61121/.ssh/identity type -1 debug1: identity file /C=/Users/uid61121/.ssh/id_rsa type 1 debug1: identity file /C=/Users/uid61121/.ssh/id_dsa type -1 debug1: Remote protocol version 2.0, remote software version SSHD-CORE-1.2.0 debug1: no match: SSHD-CORE-1.2.0 debug1: Enabling compatibility mode for protocol 2.0 debug1: Local version string SSH-2.0-OpenSSH_5.2 debug1: SSH2_MSG_KEXINIT sent debug1: SSH2_MSG_KEXINIT received debug1: kex: server->client aes128-ctr hmac-md5 none debug1: kex: client->server aes128-ctr hmac-md5 none debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024<1024<8192) sent debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP Connection closed by 10.216.146.132 > Any ideas what has gone wrong? ","false","question"
"Milestone on issue list","**Impacted version**: 4.10  **Deployment mode**: standalone app  **Problem description**: On the issue list apart of issue title, issue number, date and author in 4.9 there used to be milestone, issue belongs to. In 4.10 it dissapeared.","false","bug"
"Add .editorconfig","[EditorConfig](http://editorconfig.org/) supports many editors(Vim/Emacs/VS Code/Atom, etc.)/IDEs(IDEAJ/Eclipse, etc.)'s configuration with `.editorconfig` file. If this PR is merged, editors are automatically configured by GitBucket's 2-space indent style.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [ ] rebased my branch over master - [x] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Setting branch as protected fails probably because of slash used in the branch name","## Issue **Impacted version**: 4.6.0  **Deployment mode**:    standalone app with apache proxy  **Problem description**:  I have branch called version/1.0 (with slash) and I want to make it protected (settings->branches tab->Protected branches and choose branch containing slash in its name).  Results is: ``` URL: http://(...cut...)/someGroup/someRepo/settings/branches/version%2F1.0  Not Found  The requested URL /someGroup/someRepo/settings/branches/version/1.0 was not found on this server. Apache/2.2.22 (Debian) Server at (...cut...) Port 80 ```","false","bug"
"Improve GitHub API compatibility for Jenkins Integration.","This PR improves API compatibility w.r.t. Jenkins GitHub Organization Folder Plugin based integration.  ### Changes  - Add /api/v3/repos/:owner/:repo/branches/:branch API - Add non-GitHub compatible API for raw contents transfer with BASIC auth     - this action needs getPathObjectId() and responseRawFile(), then move these methods to ControllerBase. - /api/v3/users/:userName also accepts groupname - Add some fields for improve compatibility     - ApiContents     - ApiBranch  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Provides repository hook extension point for plugins","It makes possible to hook following actions for repository by plugins:  - Create the repository - Delete the repository - Rename the repository - Transfer the repository to the other user - Fork the repository by the other user","false","feature"
"Add ""Compare & pull request"" button on the top of the repository viewer","![create-pill-request](https://cloud.githubusercontent.com/assets/1094760/23602112/15320c52-0292-11e7-9633-97e7e7855907.png)  refs #1475 ","true","feature"
"Improve pull request usabillity",,"false","improvement"
"How to backup LFS files?","## Issue **Impacted version**: 4.10  **Deployment mode**: Tomcat **Problem description**:  You have a nice description and example scripts on how to back up the repositories in the wiki:  https://github.com/gitbucket/gitbucket/wiki/Backup  But my question is how best to backup the LFS files, which are not copied to the clone?  Thanks in advance for any ideas. ","false","document"
"MySQL Import Error","## Issue **Impacted version**: 4.10.0  **Deployment mode**: Gitbucket with Tomcat   **Problem description**: I have been used GitBucket since version 4.8, and recent I follow the wiki guide to move the database from H2 to MySQL. 1. Export the old data 2. Follow the wiki guide to create database.conf with correct username and password 3. start Gitbucket, tables created with no errors 4. import the data from MySQL console and get error: ``` INSERT INTO ACCOUNT (USER_NAME, MAIL_ADDRESS, PASSWORD, ADMINISTRATOR, URL, REGISTERED_DATE, UPDATED_DATE, LAST_LOGIN_DATE, IMAGE, GROUP_ACCOUNT, FULL_NAME, REMOVED, DESCRIPTION) VALUES ('root', 'root@localhost', 'edd3796286733edd02120f8bd13ab34298f04d40', true, 'https://github.com/gitbucket/gitbucket', '2016-03-14T19:33:47', '2016-03-14T19:42:36', '2016-03-14T19:44:18', NULL, false, 'root', false, NULL)  MySQL Response:  #1054 - Unknown column 'DESCRIPTION' in 'field list' ``` It seems the expoted SQL script has some problems.","false","question"
"Wrong Issue Save Button Label.","The save button when editing an issue **text** (so not when editing a **comment**) is called **""Update Comment""**.  This is however not a ""comment"" and this text is also not saved in the ISSUE_COMMENT table but in ISSUE table, in the **""content""** column.  IMHO the button should be called ""Save Changes"" or just ""Save"".  Thank you.","false",
"Deploy key support","This pull request makes possible to register ssh public key to the repository. Users can clone and push (if allowed) to the repository as the repository owner using this key.  Fixes #474","true","feature"
"Ahead/Behind indicator in the Branches section not accurate","## Ahead/Behind indicator not accurate **Impacted version**:  4.9  **Deployment mode**:  Container (Docker)  **Problem description**: I have two branches on a repo, master and DEV.  When I go to the Branches view, I see a ""column"" under the DEV branch with two numbers separate by a pipe:  0 | 0  When I hover over this, it says ""0 commits ahead, 0 commits behind master.""  I assume this is supposed to indicate how DEV has diverged from master, however, it never changes regardless of how many commits I make to DEV without merging or making any commits to master.  For example, I would expect to see the second number change to 5 if I made five commits to DEV and no commits to master.  I couldn't find any docs on this feature so I don't know what the desired behavior is supposed to be.  ","false","bug"
"Hide wiki sidebar by a user choice","## Issue  **Impacted version**: 4.10 and others  **Deployment mode**: using gitbucket from tomcat  **Problem description**: - There is no option to hide wiki sidebar (right-hand side of wiki pages) - Having an option like what we have at menu-bar at left-hand side is good idea.  Hiding both by one button is good enough for me.  Please consider having such an option.  Thanks.","false","improvement"
"Plugin auto discovery & plugin registry","This issue is created to expose/gather needs/idea for a future implementation of a plugin discovery/installation system in gitbucket probably working together with a plugin registry.  # Requirements to provide a plugin installation mechanism in gitbucket  ## with internet access  - a central registry exists - the registry exposes API to retrieve plugin information     + plugin name/description/version/download URL - with hotdeployment     + gitbucket download the new plugin/version     + gitbucket/plugins stop/unload old plugin classes & services     + gitbucket deploy the downloaded plugin into GITBUCKET_HOME/plugin-name.jar erasing the previously installed one (if one existed)     + gitbucket creates an URLClassLoader for this plugin and initialize it - without hotdeployment     + gitbucket download the new plugin/version     + gitbucket stores it in a temporary place     + on next reload, before starting plugins, gitbucket deploy the plugin from temporary place into GITBUCKET_HOME/plugin-name.jar erasing the previously installed one (if one existed)     + gitbucket creates an URLClassLoader for this plugin and initialize it  ## without internet access  - gitbucket server does not see the internet, but user does - a central registry exists - the registry exposes page to select plugins/version to installation - a download action is available to collect a packaging of the selected plugins - user put the downloaded package in some location - on startup or with hotdeployment gitbucket is capable of extracting plugins from this downloaded package  ## Gitbucket registry  ### Pure static registry  Can be a simple website exposing static data (json, xml, yaml) via for example github pages.  __PRO__: simple, fast to setup, good enough to start, running cost is 0   __CONS__: need pure manual update, cannot gather/expose feedback from gitbucket installations  ### Static registry updated automatically  Same as the pure static registry with some automation to update the data. Could be some implemented with some build script running continuous integration systems (like travis-ci, circleci, ...) to execute some logic to update the static data - for each registered plugin     - fetch its latest data (via github API, ...)     - update the static data file    - commit/push them back  __PRO__: provide dynamic behavior, running cost is 0   __CONS__: need a CI service offering ""cron"" like feature, cannot gather/expose feedback from gitbucket installations  ### Dynamic registry   The registry is a webapplication hosted somewhere.  __PRO__: cover every possible scenario including dynamic feedback from gitbucket installations (number of installations, plugin incompatibilities, starring, ...) __CONS__: requires CPU Power + data storage ","false","document,feature,plugin"
"add anchors in 'System Adminsitration > Plugins' page","fixes #1466   simple change in plugins page to make anchors work properly.","true","bug"
"anchor links do not work on plugins page","## Issue **Impacted version**: 4.10  **Deployment mode**: not relevant  **Problem description**: On the `System Administration > Plugins`  page, the anchors in links do not work and are not linked to any header.  ![image](https://cloud.githubusercontent.com/assets/1119660/23407026/2881ac4c-fdc2-11e6-9639-85566aa1f3a4.png) ","false","bug"
"allow plugins to register secured endpoint","## Issue **Impacted version**: all, latest known 4.10  **Deployment mode**: not relevant  **Problem description**: As a plugin developper, I want to have the possibility to enhance gitbucket with secured endpoints:  __Acceptance criteria__: 1. *MUST*: the plugin is able to register an URL mapping for security filtering or a default base route like `/plugins/secured` is defined & documented in gitbucket 1. *SHOULD* : the [ControllerBase#Unauthorized()](https://github.com/gitbucket/gitbucket/blob/master/src/main/scala/gitbucket/core/controller/ControllerBase.scala#L127) method in gitbucket correctly redirects  See a current workaround using http redirection & the base route `api/v3` [gitbucket-plugins/gitbucket-h2-backup-plugin#a66623e](https://github.com/jgitver/jgitver-maven-plugin/commit/3792fa3ee4351524b2f1d597c6e1aa88f84c2eb8)","false","improvement,plugin"
"Running error","###gutbucket   ```vserion: 4.10```   ###OS   ```Ubuntu 14.04 LTS (GNU/Linux 3.13.0-24-generic x86_64)```  ###java:  ```openjdk version &quot;1.8.0_111&quot; OpenJDK Runtime Environment (build 1.8.0_111-8u111-b14-3~14.04.1-b14) OpenJDK 64-Bit Server VM (build 25.111-b14, mixed mode) ```  ###run info  ```root@localhost:~/.gitbucket# java -jar ~/gitbucket/gitbucket.war --port=8001 2017-02-27 05:15:27.526:INFO::main: Logging initialized @214ms 2017-02-27 05:15:27.780:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT 2017-02-27 05:15:29.511:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/root/.gitbucket/tmp/webapp/WEB-INF/lib/slf4j-jdk14-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/root/.gitbucket/tmp/webapp/WEB-INF/lib/logback-classic-1.1.7.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory] Feb 27, 2017 5:15:31 AM com.zaxxer.hikari.HikariDataSource <init> INFO: HikariPool-1 - Started. Feb 27, 2017 5:15:31 AM gitbucket.core.servlet.InitializeListener $anonfun$contextInitialized$1 INFO: Start schema update Feb 27, 2017 5:15:32 AM gitbucket.core.servlet.InitializeListener $anonfun$contextInitialized$1 INFO: Initialize plugins Feb 27, 2017 5:15:32 AM org.quartz.core.SchedulerSignalerImpl <init> INFO: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl Feb 27, 2017 5:15:32 AM org.quartz.core.QuartzScheduler <init> INFO: Quartz Scheduler v.2.2.3 created. Feb 27, 2017 5:15:32 AM org.quartz.simpl.RAMJobStore initialize INFO: RAMJobStore initialized. Feb 27, 2017 5:15:32 AM org.quartz.core.QuartzScheduler initialize INFO: Scheduler meta-data: Quartz Scheduler (v2.2.3) 'QuartzScheduler~job' with instanceId 'job'   Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.   NOT STARTED.   Currently in standby mode.   Number of jobs executed: 0   Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.   Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.  Feb 27, 2017 5:15:32 AM org.quartz.impl.DirectSchedulerFactory createScheduler INFO: Quartz scheduler 'QuartzScheduler~job Feb 27, 2017 5:15:32 AM org.quartz.impl.DirectSchedulerFactory createScheduler INFO: Quartz scheduler version: 2.2.3 Feb 27, 2017 5:15:32 AM org.quartz.core.QuartzScheduler start INFO: Scheduler QuartzScheduler~job_$_job started. [INFO] [02/27/2017 05:15:32.820] [main] [[QuartzScheduler~job]] Setting up scheduled job 'Daily', with 'com.typesafe.akka.extension.quartz.QuartzCronSchedule@4a60ee36' Feb 27, 2017 5:15:32 AM grizzled.slf4j.Logger info INFO: The cycle class name from the config: ScalatraBootstrap Feb 27, 2017 5:15:32 AM grizzled.slf4j.Logger info INFO: Initializing life cycle class: ScalatraBootstrap 2017-02-27 05:15:34.019:WARN:/:main: unavailable org.h2.message.DbException: IO Exception: ""java.net.UnknownHostException: localhost.localdomain: localhost.localdomain: Name or service not known"" [90028-192]         at org.h2.message.DbException.get(DbException.java:168)         at org.h2.message.DbException.convert(DbException.java:287)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:273)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  org.h2.jdbc.JdbcSQLException: IO Exception: ""java.net.UnknownHostException: localhost.localdomain: localhost.localdomain: Name or service not known"" [90028-192]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)         at org.h2.message.DbException.get(DbException.java:168)         at org.h2.message.DbException.convert(DbException.java:287)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:273)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  java.net.UnknownHostException: localhost.localdomain: localhost.localdomain: Name or service not known         at java.net.InetAddress.getLocalHost(InetAddress.java:1505)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:271)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  java.net.UnknownHostException: localhost.localdomain: Name or service not known         at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)         at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)         at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)         at java.net.InetAddress.getLocalHost(InetAddress.java:1500)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:271)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) 2017-02-27 05:15:34.035:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@2416498e{/,file:///root/.gitbucket/tmp/webapp/,UNAVAILABLE}{file:/root/gitbucket/gitbucket.war} javax.servlet.ServletException: H2Console@9929790d==org.h2.server.web.WebServlet,1,false         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:661)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  org.h2.message.DbException: IO Exception: ""java.net.UnknownHostException: localhost.localdomain: localhost.localdomain: Name or service not known"" [90028-192]         at org.h2.message.DbException.get(DbException.java:168)         at org.h2.message.DbException.convert(DbException.java:287)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:273)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  org.h2.jdbc.JdbcSQLException: IO Exception: ""java.net.UnknownHostException: localhost.localdomain: localhost.localdomain: Name or service not known"" [90028-192]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)         at org.h2.message.DbException.get(DbException.java:168)         at org.h2.message.DbException.convert(DbException.java:287)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:273)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  java.net.UnknownHostException: localhost.localdomain: localhost.localdomain: Name or service not known         at java.net.InetAddress.getLocalHost(InetAddress.java:1505)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:271)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) Caused by:  java.net.UnknownHostException: localhost.localdomain: Name or service not known         at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)         at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)         at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)         at java.net.InetAddress.getLocalHost(InetAddress.java:1500)         at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:271)         at org.h2.server.web.WebServer.updateURL(WebServer.java:333)         at org.h2.server.web.WebServer.init(WebServer.java:322)         at org.h2.server.web.WebServlet.init(WebServlet.java:53)         at javax.servlet.GenericServlet.init(GenericServlet.java:244)         at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:640)         at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:419)         at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:875)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:349)         at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)         at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)         at org.eclipse.jetty.server.Server.start(Server.java:411)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)         at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)         at org.eclipse.jetty.server.Server.doStart(Server.java:378)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at JettyLauncher.main(JettyLauncher.java:91) 2017-02-27 05:15:34.070:INFO:oejs.AbstractConnector:main: Started ServerConnector@2f0f6727{HTTP/1.1,[http/1.1]}{0.0.0.0:8001} 2017-02-27 05:15:34.072:INFO:oejs.Server:main: Started @6767ms ```    ## HTTP ERROR: 503  Problem accessing /gitbucket. Reason:  Service Unavailable   Powered by Jetty:// 9.3.z-SNAPSHOT","false",
"Private project owner cannot access forks.","So I am not sure if it is intented or not but when a collaborator fork a private project, his fork, while visible, cannot actually be accessed by people who have access to the parent.  Shouldn't there be some kind of access granted by the parent project over the forks?","false","improvement"
"collaborators can edit any comment","**Impacted version**: 4.6.0  Currently, users can edit _any_ comment in issues of repositories where they have the `collaborator` role. This does not make a whole lot of sense, they should only be able to edit their own comments.  I am not sure though if this is already covered in the `4.7` milestone (https://github.com/gitbucket/gitbucket/issues/1286).","false","improvement"
"Mailto email address not formatting properly in wiki","## Issue **Impacted version**: 4.9  **Deployment mode**: httpd and tomcat on Windows server  **Problem description**: In wiki formatting, a mailto email address will not be formatted properly.  For example, the markdown: ``` Send email to <joe@bob.com> ``` Will render as `http://myserver/myproj/wiki/_blob/mailto:joe@bob.com` instead of just `mailto:joe@bob.com`.  ","false","bug"
"fix deprecation warning","https://github.com/FasterXML/jackson-core/blob/jackson-core-2.8.4/src/main/java/com/fasterxml/jackson/core/JsonParseException.java#L31","true",
"fix deprecation warnings","https://github.com/scalatest/scalatest/blob/release-3.0.0/scalatest/src/main/scala/org/scalatest/mock/package.scala#L38 ","true",
"remove scala-java8-compat","I have added this for new Java8 backend. https://github.com/gitbucket/gitbucket/commit/2bcab3052964343a54d79357c04 I think no longer needed because githbucket updated Scala 2.12.","true",
"Scala 2.12.1",,"true",
"Accessing a ""standalone deployed"" gitbucket from the LAN"," ## Issue **Impacted version**: 4.9  **Deployment mode**: standalone app  **Problem description**:  HOW TO REPRODUCE  - Default deploy server standalone as described in the instructions:   ""java -jar gitbucket.war"" - Able to access the server web page as http://localhost:8080 - Attempt to access as http://[hostname].[domain]:8080 will automatically redirect to https://[hostname].[domain]:8080.  It of course fails because 8080 is being used for http, not https.  QUESTIONS  1) Is the ""standalone"" deployment intended for access from the local LAN?  Or is deploying it inside a web application server like Tomcat the only viable way to use it?  - If the server is intended for use from the local LAN when deployed standalone - meaning that other computers in the network can access it for ""Git operations"" through the one open port (8080 by default) - is all server management expected to be done from localhost?  2) Is there any more complete documentation somewhere than what is in the wiki at https://github.com/gitbucket/gitbucket/wiki?  That wiki does seems more like a random collection of howtos rather than an attempt at user documentation, which makes me think the real documentation is elsewhere.  Especially useful would be a *complete* list of parameters for when starting the server standalone.","false","question"
"(refs #1454) Clarify text for PR permission settings","Referencing #1454  This is some suggested text changes to clarify that what is currently just labelled the ""issues"" permission selector also applies to pull request permissions. This assumes all the levels of issues permissions apply in a like manner to PRs. ","true","improvement"
"Pull Request permissions on repos in another group","## Issue **Impacted version**: 4.9.0  **Deployment mode**:  standalone app,   **Problem description**: In my environment, we have several groups defined. I am a member of some of these groups, but not a member of others. There is a public repository in one of the groups that I am not a part of, and I would like to make a pull request against that repository. I was correctly not allowed to push a branch to the repository, and realized that I need to fork the repository. So, I forked the repository, made a branch in my fork, and pushed the change to my private fork. Then, I requested to make a pull request from my private fork branch to master on the base repo. When I push the ""Create pull request"" button, I get no error, but I do not see the Pull Request anywhere. Where did it go?  I have confirmed that I am able to successfully do the same process against another public repository that is under a group that I am a member of.  So, what is the problem here? Is it intentional that I cannot create a pull request against a public repo in a group I'm not a member of? Or is there some other bit of configuration I'm missing?  --UPDATE-- I have discovered through some trial and error that in order to make a pull request to a repo in a group I  am not a member of, one of these things needs to be set on the repo: - In the repo setting, The ""Issues"" selector must be set to ""All users can view, create, and comment on isues"" [sic] - I must be listed as a Collaborator of the repo (either individually or as a member of a group)  So, I suggest two particular improvements: 1) Display an *error message* when a user tries to create a pull request against a repo for which they do not have permission. Best would be to do this as early as possible - like in the Pull Request form when choosing a base fork that is not allowed. The error message should include a clear explanation of why the user is not allowed and instructions on how to become allowed. 2) Improve the text around the ""Issues"" selector in repo settings to indicate that selector also applies to Pull Requests - or make a separate selector to control the access for Pull Requests. ","false","improvement"
"Failure to clone LFS file when repository rename or transfer","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  I have tested this patterns.  1. push repository with LFS file 1. rename repository     * check LFS file display in file brower     * check the contents of the LFS file in the cloned repository     * check that the LFS directory before the rename is deleted on the server side 1. transfer repositry     * check LFS file display in file brower     * check the contents of the LFS file in the cloned repository     * check that the LFS directory before transfer is deleted on the server side 1. delete repository     * check that the LFS directory has been deleted on the server side ","true","bug"
"Display file size in file viewer","The file size was added to the file browser as follows.  ![filesize-lfs](https://cloud.githubusercontent.com/assets/1295639/22854717/166ad2b6-f0b8-11e6-8179-80b105836fc0.png) ![filesize-large](https://cloud.githubusercontent.com/assets/1295639/22854718/1c39605e-f0b8-11e6-8c3d-9af641bc2a51.png) ![filesize-normal](https://cloud.githubusercontent.com/assets/1295639/22854720/1fd78ad8-f0b8-11e6-96d1-0b9f420b6396.png)  However, the appearance of the file size is not good. Is there a better display?","true","feature"
"Add plugins to main codebase for a more complete solution ","we really love the gitbucket project.  For a lot of first tine users, they only see announcement for gitbucket and dont even realize there is a plugin system for additional functionality.   you guys have brilliant pieces of functionality like gist, pages.. even the h2 tool to migrate from older versions.   It is important for end users that you package them together and give them a complete solution. It will be a huge and massive benefit to first time users of gitbucket that they get so much functionality in out-of-the-box install. ","false","improvement"
"LFS files not being stored on the gitbucket server"," ## Issue **Impacted version**: 4.9  **Deployment mode**: Tomcat 7  **Problem description**: Have just installed 4.9 so that I can test out the LFS support. When uploading an LFS tracked file, I see the LFS symbol, but the file is not available in the gitbucket GUI:  ![image](https://cloud.githubusercontent.com/assets/20796832/22698577/3626ee34-ed55-11e6-879e-041c9f457a28.png)  and checking the server, there is no ""lfs"" folder created in the repository folder:  ![image](https://cloud.githubusercontent.com/assets/20796832/22698677/81591d00-ed55-11e6-8d3b-62c6d3c4b4e5.png)  I had the same problem with a ""bmp"" image file as well. ","false",
"Administrator doesn't see private repositories","## Administrator doesn't see private repositories **Impacted version**: 4.9.0  **Deployment mode**: *standalone*  **Problem description**: *Administrators can't see private repositories on ""your repositories"" tree. But can be accessed using a direct link or navigating through user/group management.*","false","improvement"
"Add ""owner"" to notification subject","refs #1447   - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [ ] verified that project is compiling - [ ] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Mail notification subject with repository owner","## Issue **Impacted version**: 4.9.0  **Deployment mode**: standalone app launched by PM2, with nginx  **Problem description**: I want to know repository owner in mail notification subject.  Currently mail notification subject has only repository name and title and Id. If I am a member of a different groups and they have a repository of the same name, I can not determine which repository notified me. ","false","improvement"
"The characters in the list on the file screen will overlap and appear","**Impacted version**: 4.9  **Deployment mode**: under webcontainer (tomcat)  **Problem description**: If you write a comment like ""Fixed #123 example"", the characters in the list on the file screen will overlap and appear.  ```html <td class=""ellipsis-cell"" style=""width: 70%;"">   <a href=""http://example.com/gitbucket/sample/commit/53bb142fff642631fa62374b0b222b5281e78c12""     class=""commit-message"" title=""Fixed #123 comment"">Fixed </a>   <a href=""http://example.com/gitbucket/sample/issues/123"">#123</a>   comment </td> ```  **Web browser**: Chrome, Firefox, Edge","false","duplicate"
"404 for non-implemented api","When I call non-implemented api, GitBucket spent some times and return 404 by container.  BEFORE ``` $ curl -u root:root http://pc.local:8080/api/v3/emojis <html> <head> <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/> <title>Error 404 Not Found</title> </head> <body><h2>HTTP ERROR 404</h2> <p>Problem accessing /api/v3/emoji. Reason: <pre>    Not Found</pre></p><hr><i><small>Powered by Jetty://</small></i><hr/>  </body> </html> ``` This PR add support 404 for non-implemented API calls.  AFTER ``` $ curl -u root:root http://pc.local:8080/api/v3/emojis {""message"":""Not Found""} ```  ### Before submitting a pull-request to Gitbucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [ ] verified that tests are passing - [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"GVFS support","> GVFS stands for Git Virtual File System. GVFS virtualizes the file system beneath your git repo so that git and all tools see a fully hydrated repo, but GVFS only downloads objects as they are needed.  This thing is rather new so I'm pretty sure things will change in the coming months pretty quickly, but this ticket will be good as a heads-up at least.  References:  https://github.com/Microsoft/GVFS/blob/master/Protocol.md https://github.com/Microsoft/GVFS/blob/master/Readme.md http://www.phoronix.com/scan.php?page=news_item&px=Microsoft-GVFS-Git-Filesystem https://blogs.msdn.microsoft.com/visualstudioalm/2017/02/03/announcing-gvfs-git-virtual-file-system/ ","false","feature,help wanted,pending"
"Search repository box on login page","## Issue **Impacted version**: 4.9.0  **Deployment mode**: *standalone*  **Problem description**: On login page there is ""search repository"" box present. It's useless there as user is not logged in yet. ","false",
"An error occurred when trying to edit a snippet","## Issue **Impacted version**: 4.9.0  **Deployment mode**: standalone app  **Problem description**:  StackTrace  ```java java.lang.NoSuchMethodError: gitbucket.core.util.Implicits$.RichRequest(Ljavax/servlet/http/HttpServletRequest;)Lgitbucket/core/util/Implicits$RichRequest; 	at gitbucket.gist.util.GistEditorAuthenticator$class.authenticate(GistAuthenticator.scala:16) 	at gitbucket.gist.util.GistEditorAuthenticator$class.editorOnly(GistAuthenticator.scala:11) 	at gitbucket.gist.controller.GistController.editorOnly(GistController.scala:29) 	at gitbucket.gist.controller.GistControllerBase$class.gitbucket$gist$controller$GistControllerBase$class$$$anonfun$6(GistController.scala:75) 	at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:285) 	at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:279) 	at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:279) 	at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:189) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:278) 	at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:28) 	at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88) 	at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82) 	at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:189) 	at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:28) 	at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82) 	at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:253) 	at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:251) 	at scala.Option.flatMap(Option.scala:171) 	at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:251) 	at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:250) 	at scala.collection.immutable.Stream.flatMap(Stream.scala:493) 	at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:250) 	at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:175) 	at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:28) 	at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:28) 	at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:28) 	at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:28) 	at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170) 	at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145) 	at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:28) 	at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:28) 	at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:69) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676) 	at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74) 	at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74) 	at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74) 	at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178) 	at scala.Option.getOrElse(Option.scala:121) 	at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177) 	at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187) 	at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205) 	at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187) 	at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126) 	at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78) 	at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:28) 	at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:28) 	at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57) 	at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:28) 	at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125) 	at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:28) 	at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53) 	at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:28) 	at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170) 	at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145) 	at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69) 	at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:28) 	at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145) 	at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:28) 	at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37) 	at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37) 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58) 	at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36) 	at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:69) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676) 	at gitbucket.core.servlet.GHCompatRepositoryAccessFilter.doFilter(GHCompatRepositoryAccessFilter.scala:30) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676) 	at gitbucket.core.servlet.TransactionFilter.gitbucket$core$servlet$TransactionFilter$$$anonfun$1(TransactionFilter.scala:38) 	at gitbucket.core.servlet.TransactionFilter.gitbucket$core$servlet$TransactionFilter$$$anonfun$1$adapted(TransactionFilter.scala:29) 	at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54) 	at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426) 	at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54) 	at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54) 	at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34) 	at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46) 	at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54) 	at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46) 	at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:29) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668) 	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226) 	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1174) 	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511) 	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) 	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1106) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134) 	at org.eclipse.jetty.server.Server.handle(Server.java:524) 	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319) 	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253) 	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273) 	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95) 	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148) 	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136) 	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671) 	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589) 	at java.lang.Thread.run(Thread.java:745) ```","false",
"Create test","### Before submitting a pull-request to Gitbucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Allow to specify a branch when filing for an issue","This would be a slight Quality of life improvement, sometimes bugs are only present in a specific development branch and filing an issue on the master branch is not that useful.","false","feature,help wanted,plugin"
"Cannot use GitLFS if the base URL is contained subdirectories","**Impacted version**: 4.9  **Deployment mode**: under Tomcat  **Problem description**:  I cannot use GitLFS if the base URL is contained subdirectories. (ex. http://foo.bar:8080/gitbucket )  `push` command is succeeded. But ""lfs"" directory and files are not created on the server. Then, `clone` command is failed.  https://github.com/gitbucket/gitbucket/blob/4.9/src/main/scala/gitbucket/core/servlet/GitRepositoryServlet.scala#L77 GitBucket extracts `owner` and `repository` from the request URI. However, the access log of my Tomcat server is as follows.  ``` POST /gitbucket/git/user/repos.git/info/lfs/objects/batch HTTP/1.1 ```  According to this, ""git"" is set to `owner` and ""user"" is set to `repository`.","false","bug"
"Tags link displays a blank white screen","## Issue **Impacted version**: 4.8  **Deployment mode**: *under tomcat*  **Problem description**: Under the ""Tags"" section, clicking on the tag link displays a white screen.  The commit and download links work but not the link of the tag name itself.","false","bug"
"Why does gitbucket keep asking for user/password?","I have configured my local gitbucket instance to use SSH authentication for my main user (""diego""). However, after I clone a repository using ssh protocol and push, it keeps asking for the user and password every time, e.g.:  ``` diego@diego-T420s ~/git/coding (master)$ git push Username for 'http://localhost:8080': ```  When I input the login data, it works as expected. What am I missing here?  This is the server logging output I get (started server, and pushed to one of the repositories using the ""diego"" user name)  ``` 2017-01-29 15:15:31.312:INFO::main: Logging initialized @329ms 2017-01-29 15:15:31.518:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT 2017-01-29 15:15:31.899:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/home/diego/git/gitbucket/WEB-INF/lib/slf4j-jdk14-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/home/diego/git/gitbucket/WEB-INF/lib/logback-classic-1.1.7.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory] Jan 29, 2017 3:15:32 PM com.zaxxer.hikari.HikariDataSource <init> INFO: HikariPool-1 - Started. Jan 29, 2017 3:15:32 PM gitbucket.core.servlet.InitializeListener gitbucket$core$servlet$InitializeListener$$$anonfun$1 INFO: Start schema update Jan 29, 2017 3:15:33 PM gitbucket.core.servlet.InitializeListener gitbucket$core$servlet$InitializeListener$$$anonfun$1 INFO: Initialize plugins Jan 29, 2017 3:15:33 PM org.quartz.core.SchedulerSignalerImpl <init> INFO: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl Jan 29, 2017 3:15:33 PM org.quartz.core.QuartzScheduler <init> INFO: Quartz Scheduler v.2.2.1 created. Jan 29, 2017 3:15:33 PM org.quartz.simpl.RAMJobStore initialize INFO: RAMJobStore initialized. Jan 29, 2017 3:15:33 PM org.quartz.core.QuartzScheduler initialize INFO: Scheduler meta-data: Quartz Scheduler (v2.2.1) 'QuartzScheduler~job' with instanceId 'job'   Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.   NOT STARTED.   Currently in standby mode.   Number of jobs executed: 0   Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.   Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.  Jan 29, 2017 3:15:33 PM org.quartz.impl.DirectSchedulerFactory createScheduler INFO: Quartz scheduler 'QuartzScheduler~job Jan 29, 2017 3:15:33 PM org.quartz.impl.DirectSchedulerFactory createScheduler INFO: Quartz scheduler version: 2.2.1 Jan 29, 2017 3:15:33 PM org.quartz.core.QuartzScheduler start INFO: Scheduler QuartzScheduler~job_$_job started. [INFO] [01/29/2017 15:15:33.800] [main] [[QuartzScheduler~job]] Setting up scheduled job 'Daily', with 'com.typesafe.akka.extension.quartz.QuartzCronSchedule@599f571f' Jan 29, 2017 3:15:33 PM grizzled.slf4j.Logger info INFO: The cycle class name from the config: ScalatraBootstrap Jan 29, 2017 3:15:33 PM grizzled.slf4j.Logger info INFO: Initializing life cycle class: ScalatraBootstrap Jan 29, 2017 3:15:34 PM org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration call INFO: Trying to register BouncyCastle as a JCE provider Jan 29, 2017 3:15:34 PM org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration call INFO: Registration succeeded Jan 29, 2017 3:15:34 PM gitbucket.core.ssh.SshServer$ start INFO: Start SSH Server Listen on 29418 2017-01-29 15:15:34.871:INFO:oejsh.ContextHandler:main: Started o.e.j.w.WebAppContext@48b4a043{/,file:///home/diego/git/gitbucket/,AVAILABLE}{file:/home/diego/git/gitbucket.war} 2017-01-29 15:15:34.877:INFO:oejs.AbstractConnector:main: Started ServerConnector@117d32e{HTTP/1.1,[http/1.1]}{0.0.0.0:8080} 2017-01-29 15:15:34.878:INFO:oejs.Server:main: Started @3905ms Jan 29, 2017 3:15:39 PM org.cache2k.core.util.Log$Slf4jLogger info INFO: cache2k starting. version=1.0.0.CR1, build=undefined, defaultImplementation=HeapCache ```","false","question"
"fix typo in log message",,"true",
"Problems on Deploying GitBucket with Nginx proxy_pass","**Impacted version**: 4.8  **Deployment mode**: Tomcat 7; JDK 8 update 111; ARMv7 Linux; Nginx Proxy  **Problem description**: I used GitBucket for a long time, and it is a good Git web interface for ARMv7 CPU.   I'm currently using Nginx proxy to pass the port `80/443` to the Tomcat port `7070`. ```nginx server {     ...     server_name mydomain.com;     location /gitbucket/ {         proxy_pass http://127.0.0.1:7070/gitbucket/;     } } ``` gitbucket.conf: ``` base_url=https\://mydomain.com/gitbucket ``` The above Nginx server configuration works fine for me to access GitBucket through `mydomain.com/gitbucket/`.      However when I change the domain to `gitbucket.mydomain.com/` for the GitBucket, It **don't let me login** even password is correct:   ```nginx server {     ...     server_name gitbucket.mydomain.com;     location / {         proxy_pass http://127.0.0.1:7070/gitbucket/;     } } ``` And the **gitbucket.conf**: ``` base_url=https\://gitbucket.mydomain.com ``` I changed back using `mydomain.com/gitbucket` afterwards, and I can login normally! Can anyone help?","false",
"Show login failed message","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Related to #503. (but, I think it will not be solved completely, it won't be closed by this PR)  Show login failed message without detail reason. When above, remain username and password user entered. ![sign in](https://cloud.githubusercontent.com/assets/3643499/22272701/1b21104a-e2df-11e6-8948-01d4d850fd61.png) ","true","improvement"
"Allow all users to view/post issues and edit wiki, but deny to view source.","Is this even possible?","false","feature"
"add temp_dir option","### Before submitting a pull-request to Gitbucket I have first: - [✓] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [✓] rebased my branch over master - [✓] verified that project is compiling - [✓] verified that tests are passing - [✓] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [✓] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  This PR adds a command line option `--temp_dir=[TEMP_DIR]` which can be used to set an arbitrary jetty context temporary directory. If the path specified is not-existent or it is not a directory an exception is thrown. If the option is not given or no path has been specified the old value (`getGitBucketHome() + ""tmp""`) is used.","true","improvement"
"New repositories require master branch","When I create a new empty repository, I can't `git push -u origin test` when there is no master branch. Somehow the repository remains empty. So it seems to be required that the default branch has the name __master__. This is not useful for cases where I want to supply only a certain branch without merging it into my local master branch without c&p my local stuff and reinitialize git.","false","help wanted,improvement"
"use webjars","Would you like to use webjars? http://www.webjars.org/  Webjars has libraries of npm and bower registered, you can easily use it from servlet by just registering it in sbt. Many registered javascript and css are optimized. (refs #965 Compress JavaScript and CSS resources)  Also, by using webjars, it is guaranteed that the original is unchanged, so it helps to upgrade the library version.","false","improvement"
"Request: Hide navbar if anonymous access is active","The option description states that on ""Deny"" :   > "" Users must authenticate before viewing any information.""  I think that there is no reason for the navbar and the search form to show up in this case.","false","improvement"
"use value class",,"true",
"when i change group, error occured","i create new group. -> group1 i create new repository. -> repo1  i create new group -> group2  i try to change group1/repo1 -> group2/repo1 but error occured. ","false","bug"
"After creating a repository whose name ends with ""git"", a page other than ""Files"" is displayed as ""HTTP status 404 -"".","## Issue **Impacted version**: 4.8  **Deployment mode**:  Apache Tomcat 7.0.69 on CentOS 7.3.1611  **Problem description**: 1. Create a new repository with the repository name ending in "".git"". 2. After transitioning to a page other than ""Files"" on the new repository page, ""HTTP status 404 -"" is displayed. ","false","bug"
"Prevents security warning dialog from being displayed during testing.","When Emmbed Mysql server starts, windows will display a security warning dialog.  ![image](https://cloud.githubusercontent.com/assets/18655/21964525/d5b3fc5c-db90-11e6-9915-413748c68048.png) ","true",
"Account description","This pull request based on #813 Added group descriptions (implements #674) by @dotboris  And use group description as bio if account type is user.   Group Management ![Group Management](https://cloud.githubusercontent.com/assets/18655/21963981/80de5380-db86-11e6-82cb-e930a0a13cbd.png)  Group Edit ![image](https://cloud.githubusercontent.com/assets/18655/21964355/93121f8a-db8d-11e6-921d-66a5f6f8ba06.png)  Group page ![image](https://cloud.githubusercontent.com/assets/18655/21964360/b0caeb1a-db8d-11e6-99f0-109a3953badc.png)  User Management ![User Management](https://cloud.githubusercontent.com/assets/18655/21963987/c0e724fc-db86-11e6-8c0d-6357e3088996.png)  User Register ![image](https://cloud.githubusercontent.com/assets/18655/21964295/c1161acc-db8c-11e6-9caa-abc121eefcc6.png)  Edit my profile ![image](https://cloud.githubusercontent.com/assets/18655/21964316/1cca2b24-db8d-11e6-82c2-a7886b905c7e.png)  User Profile page ![image](https://cloud.githubusercontent.com/assets/18655/21964332/3d22388a-db8d-11e6-9adf-8a15c715ab34.png) ","true","feature"
"remove unused imports",,"true",
"cache sbt launcher",,"true",
"(ref #1376) commit message overlap with issue number link","## Issue **Impacted version**: 4.8  commit message overlap with issue number link (both long message and short message).  ![screenshot 2017-01-13 13 24 25](https://cloud.githubusercontent.com/assets/294127/21918336/ac685f40-d993-11e6-8e94-93fd362dc3eb.png)  https://github.com/gitbucket/gitbucket/blob/master/src/main/webapp/assets/common/css/gitbucket.css#L300-L308  ```css td.ellipsis-cell > * {   position: absolute;   left: 0;   right: 0;   padding-right: 5px;   text-overflow: ellipsis;   white-space: nowrap;   overflow: hidden; } ```  `position: absolute` cause this issue. ","false",
"bump embedded-mysql for windows support","Older versions fail because they do not support testing on windows.","true",
"Issue and PR template per repository","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Related #1342. When Issue/PR creating, set initial content via template file in project root or `.gitbucket` folder. (compliant with [GitHub behavior](https://github.com/blog/2111-issue-and-pull-request-templates))","true","feature"
" How to configure it to support multiple languages  ,i18n support."," How to configure it to support multiple languages  ,i18n support. ","false","wontfix"
"Linkable Line Numbers?","We've just upgraded to 4.8 and noticed that line numbers are no longer linkable - i.e, They do not update the URL to take you right to the line number in question.  This may have happened prior to 4.8, but we just noticed it.  Is there some setting or config option we need to know about or is this a bug?","false","bug"
"Add download page for installation files","It would be great if you guys added a download page like the one of [GitHub](https://github.com/gitbucket/gitbucket/releases). So that we can release new software and add the installation files on GitBucket.  Is this a feature that will be added soon, or to we need to find another solution?","false","duplicate"
"make it clear that issues must be closed via commit message, fix #1414",,"true",
"clarify PR guideline regarding closing issue rule",,"false","document"
"Fix erroneous label for definition, assumably caused by copy-paste","Title says it all.","true",
"Add support for SMTP STARTTLS","Fixes #1410  STARTTLS is mandatory for certain SMTP providers, such as Office 365. This PR adds that option, tested and veified to be working with our subscription.","true","feature"
"Hint about issue description syntax ","Every time, during editing issues in gitbucket I experiencing difficulties with syntax. I'm using  Ok, powerful editor, like in github -- not simple, but you can simply add note about used syntax with link to tutorial (like ""Styling with Markdown is supported"") https://guides.github.com/features/mastering-markdown/","false","improvement"
"Cannot send emails with STARTTLS","Hi,  Office 365 SMTP requires STARTTLS instead of SSL for sending emails. There's no option to enable that in the GitBucket admin panel.  For Jenkins the workaround was adding  ~~~ JAVA_OPTS=""-Dmail.smtp.starttls.enable=true"" ~~~  But here adding that to the Tomcat (in which I run GitBucket) config won't fix the problem. There's no related information in the logs. All the website says is:  > [Error] org.apache.commons.mail.EmailException: sending the email to the following server failed : smtp.office365.com:587  I can't find any related log whatsoever. Tried to run GitBucket in standalone mode with ~~~ java -Dlogback.configurationFile=/opt/gitbucket/config/logback-settings.xml -jar gitbucket.war ~~~  But the mentioned logfiles under `/opt/gitbucket/log` are not created and STDOUT doesn't produce any useful information either.  I tried to patch Notifier.scala with:  ~~~ email.setStartTLSEnabled(true) email.setStartTLSRequired(true) ~~~  But it didn't fix the problem. Additionally, when I try to run my own .war file in standalone mode, it says  ~~~ Error: Could not find or load main class JettyLauncher ~~~  So I'm pretty much out of ideas. Did anyone have luck figuring this out?","false",
"Spelling and grammar fixes","### Before submitting a pull-request to Gitbucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [X] verified that tests are passing - [X] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [X] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"add api 'List issues for a repository'","https://developer.github.com/v3/issues/#list-issues-for-a-repository  refs #1147 ","true","feature"
"(refs #1406)Don't begin database session in TransactionFilter for git…","Fix for #1406","true","bug"
"java.sql.SQLTransientConnectionException in cloning a large repository","## Issue **Impacted version**: 4.8 or before  **Problem description**: If cloning a repository takes over 30 seconds, a database session which is began by open session in view pattern is timed out and throws an exception. As a result, cloning fails.","false","bug"
"Add sbt-coursier and enable travis cache",,"true",
"add api 'create an issue'","https://developer.github.com/v3/issues/#create-an-issue  refs #1147 ","true","feature"
"The JavaScript file 'moment.js' includes a vulnerable version of the library 'moment.js'","Impacted version: 4.8  Problem description:  The library moment.js version 2.10.6 has known security issues. visit this website https://github.com/moment/moment/issues/2936  The vulnerability is affecting all versions prior 2.11.2 (between * and 2.11.2) ","false","help wanted,task"
"(refs #1075)show alert on webhook ajax error.","![alert](https://cloud.githubusercontent.com/assets/18655/21618698/906e42fc-d22f-11e6-907c-ad3366c8a47b.PNG) ![image](https://cloud.githubusercontent.com/assets/18655/21618710/9ea5ada6-d22f-11e6-87b6-16333a5a32c2.png) ","true",
"GitLFS support","See a following blog article about GitLFS support in GitBucket to know about details of this pull request: https://gitbucket.github.io/gitbucket-news/gitbucket/2017/01/03/git-lfs-support.html ","true","feature"
"Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.   NOT STARTED","OS：Centos7 # java -version openjdk version ""1.8.0_111"" OpenJDK Runtime Environment (build 1.8.0_111-b15) OpenJDK 64-Bit Server VM (build 25.111-b15, mixed mode)  # java -jar gitbucket.war --port=8888  ``` 2017-01-03 01:30:37.532:INFO::main: Logging initialized @256ms 2017-01-03 01:30:37.853:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT 2017-01-03 01:30:40.299:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/root/.gitbucket/tmp/webapp/WEB-INF/lib/logback-classic-1.1.7.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/root/.gitbucket/tmp/webapp/WEB-INF/lib/slf4j-jdk14-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] 01:30:41.286 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Started. 01:30:41.895 [main] INFO  g.core.servlet.InitializeListener - Start schema update 01:30:43.367 [main] INFO  g.core.servlet.InitializeListener - Initialize plugins 01:30:44.107 [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl 01:30:44.110 [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.2.1 created. 01:30:44.122 [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized. 01:30:44.129 [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.2.1) 'QuartzScheduler~job' with instanceId 'job'   Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.   NOT STARTED.   Currently in standby mode.   Number of jobs executed: 0   Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.   Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.  01:30:44.130 [main] INFO  o.quartz.impl.DirectSchedulerFactory - Quartz scheduler 'QuartzScheduler~job 01:30:44.130 [main] INFO  o.quartz.impl.DirectSchedulerFactory - Quartz scheduler version: 2.2.1 01:30:44.134 [main] INFO  org.quartz.core.QuartzScheduler - Scheduler QuartzScheduler~job_$_job started. [INFO] [01/03/2017 01:30:44.155] [main] [[QuartzScheduler~job]] Setting up scheduled job 'Daily', with 'com.typesafe.akka.extension.quartz.QuartzCronSchedule@4a9486c0' 01:30:44.237 [main] INFO  o.scalatra.servlet.ScalatraListener - The cycle class name from the config: ScalatraBootstrap 01:30:44.243 [main] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap 2017-01-03 01:30:45.602:INFO:oejsh.ContextHandler:main: Started o.e.j.w.WebAppContext@9fc9f91{/,file:///root/.gitbucket/tmp/webapp/,AVAILABLE}{file:/root/gitbucket.war} 2017-01-03 01:30:45.629:INFO:oejs.AbstractConnector:main: Started ServerConnector@44b194fe{HTTP/1.1,[http/1.1]}{0.0.0.0:8888} 2017-01-03 01:30:45.631:INFO:oejs.Server:main: Started @8364ms ```  Can not access http://ip:8888  Is there anything wrong? ","false","question"
"can gitbucket be deployed by source code? ","I can not download the WAR package from release page. https://github.com/gitbucket/gitbucket/releases   very very slow... ","false",
"Commit message with link overlaps","**Impacted version**:4.8 **Reproduction**: 1. create a issue or pull request (ex. `#1`) 1. put the issue number in the commit message (ex. `refs #1 fix bug`) 1. open the top page of the repository  ![overlap_message](https://cloud.githubusercontent.com/assets/1295639/21592591/07fdc88a-d152-11e6-852b-957bf59c10c1.png) ","false","bug"
"Download ZIP function does not consider .gitattributes crlf configulation","## Issue  **Impacted version**: 4.7.1  **Deployment mode**:  builtin jetty server on CentOS 7  **Problem description**: In [this](http://stackoverflow.com/questions/17347611/downloading-a-zip-from-github-removes-newlines-from-text-files/17371220#17371220) answer says, if I set `eol=crlf` in `.gitattributes`, `git archive` command outputs CRLF line endings file. GitHub Download ZIP button too.  I tested with [this branch](https://github.com/split-n/nl-test/tree/attr-text-crlf) .  If I get zip file from GitHub Download ZIP button or clone and `git archive` command, the README.md line endings is CRLF.   But the ZIP that from GitBucket Download ZIP button, the README.md line endings is LF. ","false",
"Add sortable priority as an issue attribute","GitBucket is not a clone of GitHub no longer. We can improve GitBucket features more than GitHub according to requirements of GitBucket users. One of them is issues. GitHub issues is simple and fits for small projects, but it's not enough for large projects.  As a first step to improve issues, I would like to add a priority attribute as a sortable attribute.","false","feature"
"RestructuredText?","Is there a way for GB to render RST files natively and/or a hook of some kind that would allow a callout to rst2html.py?  ","false","plugin,question"
"how to drop repository?","### how to drop repository?  I find i can not drop repository. ","false","question"
"avoid deprecated method since sbt 0.13.13","``` build.sbt:168: warning: `<<=` operator is deprecated. Use `key := { x.value }` or `key ~= (old => { newValue })`. See http://www.scala-sbt.org/0.13/docs/Migrating-from-sbt-012x.html publishTo <<= version { (v: String) =>           ^ ```","true",
"CONTRIBUTING.md: ...reproduce GitHub behavior?","``` ... First priority of GitBucket is easy installation and reproduce GitHub behavior, so we might reject if your request is against it. ```  Is reproducing GitHub behavior a first prio, still?  The UI of Gitbucket diverged from GitHub significally since the last couple of versions, so prios might have changed...","false","document"
"Upgrade JGIT to jgit: 4.6.0.201612231935-r","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  For me, this looks fine now. Rough tests show no issues.","true",
"Attaching to wiki pages doesn't work","## Issue **Impacted version**: 4.8  **Deployment mode**: using gitbucket with tomcat.  **Problem description**: - Attaching to wiki page doesn't work.  I've tested jpg image and pptx files. - wiki page tries to attach files, but responds ""Uploading your files... Server responded with 400 code"" - Attaching to issue page works great.  Only wiki page doesn't. ","false","bug"
"Update README.md - fixed another typo","...to the servlet container... -> ...to a servlet container... ","true",
"add support plugin when edit file on repository want preview instead …",,"true","improvement"
"Readme improvements","This is a request that you add the line ""you can simply run it using `java -jar gitbucket.war`  or deploy it to the Servlet 3.0 container such as Tomcat 7.x, Jetty 8.x, GlassFish 3.x or higher.""  you dont make it obvious on how easy it is to run gitbucket!","false","document"
"The library jquery version 1.11.1 has known security issues."," ## Issue **Impacted version**: 4.7.1  **Problem description**: - The library jquery version 1.11.1 has known security issues.    visit this website https://github.com/jquery/jquery/issues/2432  ### Please update the JQuery version ","false","help wanted,task"
"Add API to get a single issue","This PR adds the [API to get a sigle issue](https://developer.github.com/v3/issues/#get-a-single-issue).  **Usage** ```sh $ curl http://localhost:8080/api/v3/repos/:owner/:repo/issues/:issue_number ``` --- The [second commit](https://github.com/gitbucket/gitbucket/commit/668f9ef91974424d31a76d0c1c96a41fc307c106) is a small fix of https://github.com/gitbucket/gitbucket/pull/1328. This is independent from the first commit, but it's so small that I didn't divide into another PR.  ### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","feature"
"failed to deploy gitbucket.war on wildfly 10.1","## Issue **Impacted version**: 4.7.1  **Deployment mode**:  I try to deploy gitbucket.war on Wildfly 10.1.0-final. **Problem description**: I see the following errors in log file during deployment:  `2016-12-17 13:25:53,706 WARN  [org.jboss.modules] (ServerService Thread Pool -- 81) Failed to define class liquibase.serializer.core.yaml.YamlSerializer$LiquibaseRepresenter in Module ""deployment.gitbucket.war:main"" from Service Module Loader: java.lang.NoClassDefFoundError: Failed to link liquibase/serializer/core/yaml/YamlSerializer$LiquibaseRepresenter (Module ""deployment.gitbucket.war:main"" from Service Module Loader): org/yaml/snakeyaml/representer/Representer ... 2016-12-17 13:25:53,713 WARN  [org.jboss.modules] (ServerService Thread Pool -- 81) Failed to define class liquibase.serializer.core.yaml.YamlSnapshotSerializer$SnapshotLiquibaseRepresenter in Module ""deployment.gitbucket.war:main"" from Service Module Loader: java.lang.NoClassDefFoundError: Failed to link liquibase/serializer/core/yaml/YamlSnapshotSerializer$SnapshotLiquibaseRepresenter (Module ""deployment.gitbucket.war:main"" from Service Module Loader): Failed to link liquibase/serializer/core/yaml/YamlSerializer$LiquibaseRepresenter (Module ""deployment.gitbucket.war:main"" from Service Module Loader): org/yaml/snakeyaml/representer/Representer `  Finally the application is deployed, but I am unable to login . I got the message  `java.lang.NoClassDefFoundError: com/sun/net/ssl/internal/ssl/Provider`  Is there anything I need to install/deploy first on wildfly? Running in standalone modus works.","false","document"
"Add explanation of the demo site to README.md","refs #1382","false","document"
"Where is the user/pass to try out the demo?","I just found out about this project and would like to play a little bit with the demo `https://gitbucket.herokuapp.com/`, but I can't login. Could you guys provide a test login?  ","false","question"
"Scala 2.12 support","refs #1346","true","task"
"Username is case sensitive, confuses users signing in","## Issue **Impacted version**: 4.7.1  **Deployment mode**: `java -jar gitbucket.war --port=80 --prefix=/gitbucket --host=myComputerName`  **Problem description**:  The username is case sensitive in the sign-in form, which users don't expect (""why isn't my login working, I typed my password right""). Suggest making usernames not be case sensitive.","false",
"--prefix requires forward slash, not necessarily obvious","## Issue **Impacted version**: 4.7.1  **Deployment mode**: `java -jar gitbucket.war --port=80 --prefix=/gitbucket --host=myComputerName`  **Problem description**: The `--prefix` command line argument requires a preceding forward slash, which wasn't obvious to me. Might add that to the readme or made GitBucket handle context path without the slash in the argument.","false","improvement"
"h:m:s render to hⓂ️s. ","## Issue  **Impacted version**: 4.7.1  When I write code block like the following,  on comment, snippets  and so on   It renders to hⓂ️s.   ``` h:m:s ```  It would better to render like `h:m:s`.  ![sample](https://cloud.githubusercontent.com/assets/767650/21128775/eea21fce-c140-11e6-967b-c77e81a79d84.png)   ","false","bug"
"Cache commits and objects information","Maybe this request fixes #1375.","true","improvement,invalid"
"(refs #1282) Fix text-ellipsis which does't work","- [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  This PR fixes layout-break caused by too long commit message, referred in #1282.  Google Chrome 54.0 ![2016-12-12 20 56 29](https://cloud.githubusercontent.com/assets/2328540/21099497/eafaa376-c0b1-11e6-9548-c80febe83bd6.png)  FireFox 49.0 ![2016-12-12 20 57 01](https://cloud.githubusercontent.com/assets/2328540/21099517/ffd8f13a-c0b1-11e6-91f4-c7274865a316.png)  Safari 10.0 ![2016-12-12 20 57 57](https://cloud.githubusercontent.com/assets/2328540/21099527/14295aee-c0b2-11e6-8fb2-3242083b40e5.png) ","true","bug"
"take 5 seconds to load rep at chrome"," ![take5second](https://cloud.githubusercontent.com/assets/1438526/21094953/4c76605e-c094-11e6-8942-f1ebe47ec323.png)  (1) the raw rep size is > 500M ~/.gitbucket/repositories/raindy$ du -h -s godns.git 532M    godns.git  (2) it takes >5s to open this rep at chrome , pls check the attach file  (3)the java progress is ocurried 100% cpu when load rep at chrome , the java version is 1.8.0_72 ~/.gitbucket/repositories/raindy$ java -version java version ""1.8.0_72"" Java(TM) SE Runtime Environment (build 1.8.0_72-b15) Java HotSpot(TM) 64-Bit Server VM (build 25.72-b15, mixed mode)  (4) test version 4.0~4.71 , same status   Thanks a lot .","false","improvement"
"Don't search for undisplayed tabs","To improve performance of the search form.","true","improvement"
"(refs #1348)Keep pull request comment if new commits are pushed",,"true","improvement"
"Error when editing a comment on commit","## Issue **Impacted version**: Encountered with 4.5 and 4.7.1. Probably affected versions: x.x - 4.7.1 **Deployment mode**: Standalone app **Environment**:  Linux CentOS-72-64-minimal 3.10.0-327.36.1.el7.x86_64 Raid1 Write cache off java version ""1.8.0_73"" Java(TM) SE Runtime Environment (build 1.8.0_73-b02) Java HotSpot(TM) 64-Bit Server VM (build 25.73-b02, mixed mode)  **Problem description**: I was editing a comment I added to a commit. I pressed 'Update Comment' and edited it again and pressed 'Update Comment'.   ![pic](https://cloud.githubusercontent.com/assets/22718104/21056335/d7d23dde-be3d-11e6-9b5c-11f6cba0389c.png)  Then Gitbucket crashed and started return error 500 for every request:   ``` Server Error Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30000ms..  ```  The process stayed alive and I had to stop it by Linux kill command.  To reproduce: - comment on a commit - edit the comment and save it repeatedly without pause between actions - Gitbucket crashes  Log excerpt: ``` ... 18:04:58.483 [qtp1528902577-15] WARN  o.e.j.i.storage.file.ObjectDirectory - Pack file /home/gitbucket/repositories/root/my_repo.git/objects/pack/pack-bba0b5d2e2234655551d40ac643292fd4f1a5acb.pack was deleted, removing it from pack list 18:04:58.483 [qtp1528902577-14] ERROR o.e.j.i.storage.file.ObjectDirectory - ERROR: Exception caught while accessing pack file /home/gitbucket/repositories/root/my_repo.git/objects/pack/pack-6530a195e9672a71c909f1ef88941a8558f3705f.pack, the pack file might be corrupt java.io.IOException: Unreadable pack index: /home/gitbucket/repositories/root/my_repo.git/objects/pack/pack-6530a195e9672a71c909f1ef88941a8558f3705f.idx 	at org.eclipse.jgit.internal.storage.file.PackIndex.open(PackIndex.java:100) 	at org.eclipse.jgit.internal.storage.file.PackFile.idx(PackFile.java:171) 	at org.eclipse.jgit.internal.storage.file.PackFile.get(PackFile.java:262) 	at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(ObjectDirectory.java:417) 	at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedFromSelfOrAlternate(ObjectDirectory.java:386) 	at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(ObjectDirectory.java:378) 	at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:142) 	at org.eclipse.jgit.lib.ObjectReader.open(ObjectReader.java:226) ... ```  ","false","question"
"(refs #1271)Add some properties to ApiPullRequest model","Add following properties to `ApiPullRequest` model  - merged - merged_at - merged_by","true","improvement"
"Search for repository names","this is a feature.  We have a lot of repositories. It will be great if we can search for repository names. Just the names, not any content inside the repositories (I know this is not easy) thx","false","feature,help wanted"
"Fixed dropdown menu text color","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Hi, In small screens text color becomes #fff and cannot see profile, account settings or sign out fields. I just changed that property to inherit its value from its parent element.","true",
"Fixed username suggestion on issue/PR.","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ###  Fixed username suggestion, because it has not working after dbdee135 maybe. ","true","bug"
"Cannot push to protected branches","## Issue **Impacted version**: 4.6 & 4.7.1  **Deployment mode**: standalone app  **Problem description**:  Steps to reproduce: * Create repository * git clone repository * Commit a change * git push origin master (works as expected) * Protect master branch * Commit a change * git push origin master <- Fails  Expected behavior: Commits are pushed to remote branch  Actual behavior: Push is blocked  Error message: Cannot force-push to a protected branch.  Editing files directly in the UI works as expected. ","false","bug"
"Pull request comments layout issue in Internet Explorer","**Impacted version:4.6, 4.7, 4.7.1**  **Problem description**: In Files Changed tab of Pull Requests page, broken layout inline commment in Internet Explorer.  Internet Explorer 11 ![ie](https://cloud.githubusercontent.com/assets/23052805/20878566/03389cda-bb13-11e6-8715-01ea4ae1b9c2.png)  Google chrome 54 ![chrome](https://cloud.githubusercontent.com/assets/23052805/20878570/05ae6db4-bb13-11e6-8c79-98d315db5a28.PNG)  This issue may be caused by Internet Explorer doesn't work CSS:initial. But Gitbucket uses it.  https://github.com/gitbucket/gitbucket/blob/master/src/main/webapp/assets/common/css/gitbucket.css#L1135-L1139 ```css .not-diff > .comment-box-container {     white-space: initial;     line-height: initial;     padding: 10px; } ```  ","false","bug"
"Use lowercase for the first character of most 2nd words","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Unchanged: Mail Address, Full Name","true","improvement"
"4.7.1: Inconsistent Button Labels ""Create User"" <-> ""Create repository"" (a very minor issue)","## Issue **Impacted version**: 4.7.1  The labels of buttons are inconsistent. Sometimes, the ""2nd word"" begins with a lowercase character, sometimes with an uppercase character.  * Which variant do we prefer? * Shall we unify the labels? ","false","improvement"
"4.7.1: Modify via WebUI works but ""git push"" fails - return code 22","## Issue **Impacted version**: 4.7.1  **Deployment mode**: standalone webapp behind an apache revproxy  **Problem description**: - I do have an installation with several groups: dp, mhp, pag - There are several users - Each of them belongs to all three groups - There are several repositories belonging to these groups, i.e. the git clone url reads similar to   https://{myhost}/gitbucket/git/{group}/repo.git - All repos are ""private"" repos  Now for some repos, I observe that - All users can clone the repos - Some users can't push changes into some repos - All users can modify the files of all repos using the web ui  Pushing the changes leads to errors like this:  ``` nadine@nadine:~/git/plp$ git push Password for 'https://nXXXX@internal.daemons-point.com': Password for 'https://nXXXX@internal.daemons-point.com': error: Cannot access URL https://nXXXX@internal.daemons-point.com/gitbucket/pag/plp.git/, return code 22 fatal: git-http-push failed error: Fehler beim Versenden einiger Referenzen nach 'https://nXXXX@internal.daemons-point.com/gitbucket/pag/plp.git' ```  Note: When using a wrong password, the error message looks completely different. Within the gitbucket.log, I see ""nothing"".  I'm willing to provide more details in case you need them.  Best regards, Uli","false",
"Sbt errors compiling the project","I cloned the source code and installed jdk8 and sbt. I tried to compile the project: sbt compile A large quantity of jars were then downloaded. When everything got ready, I got some errors: program packages are not found. My os is windows. Will you please correct the dependencies, or may you please pack the ivy & sbt folder ? Scala is new to me. It's really confusing.","false","question"
"Recent Commits Not Showing On Home Page","Noted initially when we upgraded to 4.6.  Was told to wait for 4.7.  Still seeing in 4.7.1:  Recent commits are not showing up on the default gitbucket page, but older ones are.  Problem seems to be variable and not isolated to a particular user or use pattern.","false","question"
"Add class to make text visible","### Before submitting a pull-request to Gitbucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Fixes #1357","true","improvement"
"Updated admin lte to 2.3.8","I found a problem with alignment of labels and wanted to ensure that the latest AdminLTE has the problem. It [does](https://github.com/almasaeed2010/AdminLTE/issues/1260).  As a side-effect I have updated the AdminLTE version.","true","improvement"
"Enable copy button without flash if JavaScript copy command is enable","If flash is disabled then [copy button is removed](https://github.com/gitbucket/gitbucket/blob/4.7/src/main/twirl/gitbucket/core/helper/copy.scala.html#L30-L33 ""https://github.com/gitbucket/gitbucket/blob/4.7/src/main/twirl/gitbucket/core/helper/copy.scala.html#L30-L33"").  This changes enable copy button without flash when JavaScript copy command is supported. If JavaScript copy command is not supported, use flash copy button.  # How to use? 1. Make a html element(\<input>, \<pre>, etc.) that contains copy text. 2. Add `id` to the element. 3. Pass the `id` to [gitbucket.core.helper.html.copy](https://github.com/tksugimoto/gitbucket/blob/64248d1fce53a1d000d687c9467cf6e6c6c62ddf/src/main/twirl/gitbucket/core/helper/copy.scala.html#L1 ""https://github.com/tksugimoto/gitbucket/blob/64248d1fce53a1d000d687c9467cf6e6c6c62ddf/src/main/twirl/gitbucket/core/helper/copy.scala.html#L1"") function's 4th argument(`targetTextId`).  # What are conditions JavaScript copy command is used? * [gitbucket.core.helper.html.copy](https://github.com/tksugimoto/gitbucket/blob/64248d1fce53a1d000d687c9467cf6e6c6c62ddf/src/main/twirl/gitbucket/core/helper/copy.scala.html#L1 ""https://github.com/tksugimoto/gitbucket/blob/64248d1fce53a1d000d687c9467cf6e6c6c62ddf/src/main/twirl/gitbucket/core/helper/copy.scala.html#L1"") function's 4th argument(`targetTextId`) is [non-empty](https://github.com/tksugimoto/gitbucket/commit/64248d1fce53a1d000d687c9467cf6e6c6c62ddf#diff-0ed6739ddbb860b6fa3835c48f4e4781R17 ""https://github.com/tksugimoto/gitbucket/commit/64248d1fce53a1d000d687c9467cf6e6c6c62ddf#diff-0ed6739ddbb860b6fa3835c48f4e4781R17""). * Browser supports [document.execCommand('copy')](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand ""https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand"").     * Chrome 43+     * Firefox 41+     * Internet Explorer 9+     * Opera 29+     * Safari 10+   # Tested browsers * Chrome 54.0.2840.99 m (64-bit) * Firefox 50.0 * Edge 38.14393.0.0 * Internet Explorer 11.447.14393.0 * Opera 41.0.2353.69 * Vivaldi 1.5.658.44 (Stable channel) (32 bit) * Firefox Developer Edition 52.0a2 (2016-11-26) (64 bit)  # Related Issues * #470 [2014/08/13] Why is flash required? * #471 [2014/08/14] Show the copy button only when flash is available   ---- ### Before submitting a pull-request to Gitbucket I have first:  - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [X] verified that tests are passing     * `Tests: succeeded 124, failed 0, canceled 0, ignored 0, pending 0` - [X] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [X] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct     * Opened related issues is nothing. ","true","improvement"
"4.6: Error messages are hard to read (... a very minor issue)","## Issue **Impacted version**: 4.6 and probably all recent versions  **Deployment mode**: standalone webapp behind an apache rev proxy  **Problem description**:  I enter a ""funny url"" within the address bar, for example "".../gitbucket/does-not-exist"" or "".../gitbucket/heinz/becker"". I expect an error message to show up.  The error messages shows up, but it is pretty hard to read:  ![auswahl_036](https://cloud.githubusercontent.com/assets/1677414/20646628/31a4f320-b47e-11e6-85d3-1657e7a939bc.png) ","false","bug"
"Fixed typo in 4.7: '... ans guests...' -> '... and guests...'","Fixes a simple typo.","true",
"4.7: Your repositories 0","## Issue **Impacted version**: 4.7 (4.6 is OK)  **Deployment mode**: standalone webapp behind an apache rev proxy  **Problem description**  The list of ""your repositories"" is empty:  ![auswahl_030](https://cloud.githubusercontent.com/assets/1677414/20639586/2199b184-b3c8-11e6-98a4-d9548aa6a861.png)  On 4.6, it looks like this:  ![auswahl_032](https://cloud.githubusercontent.com/assets/1677414/20639617/c19c7c7a-b3c8-11e6-8034-323d0a4da1f8.png) ","false","bug"
"Prevent LinkConverter matching escaped apostrophe (fixes #1148)","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  I was able to reproduce the bug and fix by changing regex in LinkConverter. Confirmed that apostrophe not parsed as link and issue 39 is linkable (when applicable): ![gitbucket-apostrophe](https://cloud.githubusercontent.com/assets/8049605/20638872/40f3a5cc-b381-11e6-8a42-b800e9f8acdc.png) ","true","bug"
"Link milestone label to its issue list","### Before submitting a pull-request to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  ![milestone](https://cloud.githubusercontent.com/assets/6268183/20592073/1ce6ceec-b26f-11e6-8664-34d3c104826b.png)  ","true","improvement"
"Improve push performance by caching existing commit ids",,"false","improvement,wontfix"
"Cannot start Gitbucket on tomcat7","Not sure which log files to include here, please let me know and I'll post them. ","false","question"
"Repository name length is limited as 40 characters","## Issue **Impacted version**: 4.6  **Problem description**: Max repository name length is 100 characters in the repository creation. However limited as 40 characters in the repository setting form and repository creation API. They should accept max 100 characters. ","false","bug"
"Feature/s-654-cs-logout-api","### Before submitting a pull-request to Gitbucket I have first:  - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)* - [] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Keep comment on source code even if new commits are pushed","**Impacted version**: 4.6  **Problem description**: Comment on source code is disabled if new commits are pushed in the current version of GitBucket. However If new commits don't updated commented line, it's good to keep comment. ","false","help wanted,improvement"
"How to optimize gitbucket performance?","jetty:9.3.13.v20161014 gitbucket:4.6.60 java:1.8.0_101  git repository : 27 git user: 30+  now , if git repository is large , the  web is slow, and pull is slow, push is slow . so How to optimize gitbucket performance? please help!","false","question"
"Upgrade to Scala 2.12","Scala 2.12 version of Scalatra <del>2.5.0-RC1</del> 2.5.0 has been released, but Slick is still 2.12.0-M5. We will start updating our code using blocking-slick after Scala 2.12 version of Slick release.","false","task"
"Update layout of issue and pull request page","Remove large size avatar image to use width efficiently.","false","improvement"
"Recent Pushes Not Reflected On Home Page","One of the GB instances I manage is failing to show the most recent push updates on the summary page.  If you go to the project repo itself, it looks fine, it's just the overview page that is failing to note the latest push/checkins.  This has only been noted since the 4.5.0 update but it may have been an issue previously, I don't know.  Any ideas?","false","question"
"Even if edited file that has executable permission, WebUI commit file as regular file.","### Before submitting an issue to Gitbucket I have first:  - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   *(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*  ## Issue **Impacted version**: gitbucket-4.7  **Deployment mode**: standalone app, with an http frontend (nginx)  **Problem description**: - Even if edited file that has executable permission, WebUI commit file as regular file. - to reproduce   - commit file that has executable permission.   - push   - edit and commit via WebUI  ","false","bug"
"Added per-repository issue template feature.","This feature allows repository administrators to enter a default issue text on the repository options form. On new issue creation this default text is presented in the issue description textarea.","true",
"Tip :: Create a roadmap","Tip: Create a roadmap showing where the product will be going, features you would like to include and articulate a greater vision for the project.  This could be linked to from README.md","false","document,task"
"Dropdown list goes out of screen","In Gitbucket 4.6, when there are many labels are possible assignees, the dropdown list in the issue viewer can grow too large for the screen, making it impossible to reach users below the screen edge. There are no scrollbars.  ![screenshot_2016-11-01_12-13-53](https://cloud.githubusercontent.com/assets/781030/19888118/f0767546-a02c-11e6-8889-e681fb00d038.png)","false","improvement"
"Allow manual label color entry","When creating a label in Gitbucket 4.6, one has to use the color picker. You cannot enter the color directly into the hex code box due to a readonly="""" attribute. This would be useful if you e.g. want several labels with the exact same color. Please remove the readonly attribute. Thanks!","false","help wanted,improvement"
"New permission system",,"true","feature"
"""SMTP Port"" Setting is ignored","## Issue **Impacted version**: 4.6.0  **Deployment mode**: Deployment mode: Windows Server 2012 R2 + Apache 2.4.16 + JDK 8u60 + Tomcat 8.0.32  **Problem description**: 1. I enter 587 to ""SMTP Port"" field on ""System Settings"" page. 2. I push the ""Apply changes"" button. 3. I enter my mail adress and I push the ""Send"" button near the Text of ""Send test mail to"". 4. I get an error message becaus of trying to connect to port 465 instead of port 587.  > [Error] org.apache.commons.mail.EmailException: Sending the email to the following server failed : xxxx.xxxx.net:465","false","bug"
"(refs #1318) make record***Activity via ssh works again","### Impacted version  4.5.0 and 4.6.0 ### Problem  In commit 2ca20af, ""auto commit"" feature is disabled in TransactionFilter.scala. Because it prevents gitbucket from recognizing ssh push from the client, it affects several issues as below. - Issue #1318 : Commits does not appear in front-page. - Pull-request is not updated (It is reported [here](https://gitter.im/gitbucket/gitbucket_ja?at=58003f8c457ae29b71d9cdc2)).  I think it can affect any other phenomenons which gitbucket needs record***Activity. Especially, pull-request is key feature of the gitbucket. So, I think this is critical issue to be resolved as soon as possible. I hope 4.6.1 is released... ### Solution  My solution is very simple. Because I'm not sure why it is set as false, I made ""auto commit"" feature configurable. But I think it shall be set as true. So, I changed its default value true.  I confirmed all tests passed and the phenomenon diapered. I hope it works well. Thank you!  ","true","bug"
"LDAP authentication fails because of escaping characters in password","I setup GitBucket on our server. Now the service account for authentication of LDAP contains a # character. When I place the password in the password field of the LDAP settings the password in the config file contains \# instead of only #. How can I use this credentials to login to LDAP? After changing the password in the config file I cannot login and the log file contains the ""cannot authenticate with LDAP"". ","false","LDAP/SSO"
"""Members"" tab in group view do not indicate who in that group is its manager.","Would be very helpful to have indication who is the manager of the group in the ""members"" tab.  Long version: In ""Collaborators"" tab within ""Settings"" of repository there's a list like: ""username"" ""username"" (manager)  ""username""  And only there. Unfortunately settings of repository are visible only for managers/admin.   Ordinary users (even members of the group) have no way to tell who is manager of the group to, in example, request addition to the group.  Gitbucket installed version 4.5.0 . ","false","improvement"
"Archives of a commit have different md5sum each time even though content stays the same","## Issue  **Impacted version**: 4.5 and 4.2.1 (upgrade to see if problem persisted)  **Deployment mode**: standalone app  **Problem description**: Whenever I download an archive (tar.gz and/or zip) at a particular commit, the resulting file has a different checksum (md5sum) every time, even though there is no apparent difference in the content of the file. _This problem is probably caused by gzip (or zip) adding a new time stamp within the archive header region, resulting in a different checksum_.  **For Example**: I have a repo [startw](https://git.hans.ninja/hans/startw) which has several tags - if I download an archive of the latest tag (e.g. using the link https://git.hans.ninja/hans/startw/archive/1.1.1.tar.gz) with curl and do an md5sum, I get the following:  ``` sh $ cd /tmp $ curl -OL https://git.hans.ninja/hans/startw/archive/1.1.1.tar.gz $ md5sum 1.1.1.tar.gz 8a5a94d54cf8b5740cab8376102a1edc  1.1.1.tar.gz ```  If I repeat the above procedure, I get a different checksum result:  ``` sh $ cd /tmp $ curl -OL https://git.hans.ninja/hans/startw/archive/1.1.1.tar.gz $ md5sum 1.1.1.tar.gz e2dfae2e18465f80b0ae73435483ceef  1.1.1.tar.gz ```  Obviously there must be something different about the archives to cause this, and so I decided to do a md5sum of the contents of the archives I downloaded - for clarity lets call them _test1_ and _test2_ respectively.  ``` sh $ md5sum 1.1.1.tar.gz  e2dfae2e18465f80b0ae73435483ceef  1.1.1.tar.gz  $ tar xvf 1.1.1.tar.gz -C test1 LICENSE README example.conf/ example.conf/winitrc man/ man/startw.1 startw  $ curl -OL https://git.hans.ninja/hans/startw/archive/1.1.1.tar.gz $ md5sum 1.1.1.tar.gz                                              3d1f874b98c20d605438c981b6372aff  1.1.1.tar.gz  $ tar xvf 1.1.1.tar.gz -C test2                                    LICENSE README example.conf/ example.conf/winitrc man/ man/startw.1 startw ```  If we now have a look, we can see that the content of both archives is identical:  ``` sh $ cd test1 $ find . -type f -exec md5sum {} \; c5851fb713b928ac2c99b6f513361762  ./startw 9ef65ab9c6f9aa9b2e06ab410117264f  ./man/startw.1 1990549d86e2944bc8569dbb2ef1ab6b  ./example.conf/winitrc ed940bce4db3b092b77bdf752a10f991  ./README 704901c775dac923198527e631cf7d73  ./LICENSE  $ cd test2 $ find . -type f -exec md5sum {} \; c5851fb713b928ac2c99b6f513361762  ./startw 9ef65ab9c6f9aa9b2e06ab410117264f  ./man/startw.1 1990549d86e2944bc8569dbb2ef1ab6b  ./example.conf/winitrc ed940bce4db3b092b77bdf752a10f991  ./README 704901c775dac923198527e631cf7d73  ./LICENSE ```  This implies that something is happening with the actual generation of the tar.gz archive files themselves. I presume it has to do with gzip and it setting a modification time stamp within the header. Having a look at the headers, this seems to be the case:  ``` sh $ gzip -lv 1.1.1.tar.gz  method  crc     date  time           compressed        uncompressed  ratio uncompressed_name defla 78e3b08b Oct 24 14:00                3360               20480  83.7% 1.1.1.tar  $ curl -OL https://git.hans.ninja/hans/startw/archive/1.1.1.tar.gz $ gzip -lv 1.1.1.tar.gz                                            method  crc     date  time           compressed        uncompressed  ratio uncompressed_name defla 62e327b0 Oct 24 14:02                3359               20480  83.7% 1.1.1.tar ```  The problem is the same with ZIP archives as well. ","false","improvement"
"How to add a limitation of filesize when pushing?","version is 4.5.0  I want to add a global limitation on single file likes 2MB  ","false","question"
"How to access created issues?","We are using gitbucket v 3.8 and like to access all created issues per repository.  We found the attachments on the file system, but where are to issues stored?   Thanks ","false","question"
"when upgrade from 3.11->3.14->4.0->4.1 sql error","I upgrade from 3.11->3.14->4.0 successfully. But when from 4.0->4.1 get the error as fllow  ``` Oct 20, 2016 9:45:16 AM org.apache.catalina.core.StandardContext listenerStart SEVERE: Exception sending context initialized event to listener instance of class gitbucket.core.servlet.InitializeListener org.h2.jdbc.JdbcSQLException: Table ""ACCOUNT"" already exists; SQL statement: CREATE TABLE PUBLIC.ACCOUNT (USER_NAME VARCHAR(100) NOT NULL, MAIL_ADDRESS VARCHAR(100) NOT NULL, PASSWORD VARCHAR(40) NOT NULL, ADMINISTRATOR BOOLEAN NOT NULL, URL VARCHAR(200), REGISTERED_DATE TIMESTAMP NOT NULL, UPDATED_DATE TIMESTAMP NOT NULL, LAST_LOGIN_DATE TIMESTAMP, IMAGE VARCHAR(100), GROUP_ACCOUNT BOOLEAN NOT NULL, FULL_NAME VARCHAR(100) NOT NULL, REMOVED BOOLEAN) [42101-190]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)         at org.h2.message.DbException.get(DbException.java:179)         at org.h2.message.DbException.get(DbException.java:155)         at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)         at org.h2.command.CommandContainer.update(CommandContainer.java:78)         at org.h2.command.Command.executeUpdate(Command.java:253)         at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:157)         at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:143)         at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)         at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)         at io.github.gitbucket.solidbase.migration.MigrationUtils.updateDatabase(MigrationUtils.java:20)         at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:80)         at io.github.gitbucket.solidbase.migration.LiquibaseMigration.migrate(LiquibaseMigration.java:54)         at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:45)         at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:29)         at gitbucket.core.servlet.InitializeListener.gitbucket$core$servlet$InitializeListener$$$anonfun$1(InitializeListener.scala:78)         at gitbucket.core.servlet.InitializeListener.gitbucket$core$servlet$InitializeListener$$$anonfun$1$adapted(InitializeListener.scala:36)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)         at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:36)         at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4973)         at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5467)         at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)         at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)         at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)         at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:632)         at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1083)         at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1880)         at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)         at java.util.concurrent.FutureTask.run(FutureTask.java:266)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ``` ","false","question"
"gist plugin stopped working after gitbucket 4.2.1","Please see gitbucket/gitbucket-gist-plugin#33 ## Issue  **Impacted version**: gitbucket 4.2.1  **Deployment mode**: standalone app  **Problem description**: The gist plugin v 4.0.0 worked with gitbucket 4.2.1 for me, in the sense that: - I would see a ""Snippets"" link on the header - Clicking the Snippets link, or viewing `$URL/gist` would take me to a list of my snippets  See screencap from gitbucket 4.2.1 ![cap1](https://cloud.githubusercontent.com/assets/3464572/19011890/29796110-8772-11e6-836e-307f87566ec8.png)  If I upgrade either gist plugin to a newer version (4.2 or 4.3); or, if I upgrade gitbucket to a new version (4.3 onward), the Snippets link is gone and manually hitting `$URL/gist` produces a ""Not Found"" page. See screepcap from gitbucket 4.5 ![cap2](https://cloud.githubusercontent.com/assets/3464572/19011898/96dfbce0-8772-11e6-9d70-1720320e0629.png)  I do not see errors in my syslog. The Snippets simply are not there. Any idea what has happened? ","false","question"
"Support custom media types in get-content API","Support [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for [Get-Content API](https://developer.github.com/v3/repos/contents/#get-contents). By adding the `Accept` header in the request, users can choose the format of the data. ## Usage: - raw  ``` shell $ curl http://localhost:8080/api/v3/repos/:user/:repo/contents/:path \  -H ""Accept: application/vnd.github.v3.raw"" ``` - HTML  ``` shell $ curl http://localhost:8080/api/v3/repos/:user/:repo/contents/:path \  -H ""Accept: application/vnd.github.v3.html"" ```  If the `Accept` header is not passed, a JSON object including the Base64 encoded content will be returned. ","true","improvement"
"Cleanup white pixels in gitbucket logo.","### Problem  In IE, GitBucket logo has some white pixels. ![gb-logo](https://cloud.githubusercontent.com/assets/6997928/19415131/0321035c-93a1-11e6-90f3-cd5be9a9f247.png) ### Solution  Delete white pixels.  ![gb-logo-modified](https://cloud.githubusercontent.com/assets/6997928/19415138/8413330e-93a1-11e6-8257-34107bcb7a6e.png) ","true","improvement"
"Suppress noisy transition animation on load in IE11","### Problem  In IE11, on loading pages. Sidebar and navigation bar are show animation very noisy. ![noizy-animation-ie](https://cloud.githubusercontent.com/assets/6997928/19415071/b12fbac2-939e-11e6-807a-20398a2850ba.gif) ### Solution  http://stackoverflow.com/a/25674229 ","true","improvement"
"Git blame & diff does not show properly if file begin with newline.","## Issue  **Impacted version**: 4.5 (standalone mode `java -jar gitbucket.war`)  **Problem Description**: - [Git blame show wrong line number](https://gist.githubusercontent.com/hiroyuki-sato/3b6d8e4ac4b1a906d969fee4bda468cf/raw/4744f66d9a1f240351be30fe57db4f22ead4eb74/gitbucket.png).   - The first `test` character begin line number 3, not 2. -  [Git log same show commits](https://gist.githubusercontent.com/hiroyuki-sato/3b6d8e4ac4b1a906d969fee4bda468cf/raw/4744f66d9a1f240351be30fe57db4f22ead4eb74/gitbucket.png).    - It's show `first commit` `e73755b` first and third. - [Git diff highlight wrong line](https://gist.githubusercontent.com/hiroyuki-sato/3b6d8e4ac4b1a906d969fee4bda468cf/raw/4744f66d9a1f240351be30fe57db4f22ead4eb74/gitbucket2.png).   - test character should be line 4.  ``` diff diff --git a/README.txt b/README.txt index c7e16dd..531870f 100644 --- a/README.txt +++ b/README.txt @@ -2,3 +2,4 @@   test  test +test ```  ```  commit b8973ff10e8422d482b28457947fd8c6dd1a5857 Author: Hiroyuki Sato <hiroysato@gmail.com> Date:   Fri Oct 14 11:23:47 2016 +0900      commit  commit 7d17689983852e30c7ec2f1fa0d7bb9852761069 Author: Hiroyuki Sato <hiroysato@gmail.com> Date:   Fri Oct 14 11:23:41 2016 +0900      commit  commit 7361c285c4806aa44febf3bb4043508944f62582 Author: Hiroyuki Sato <hiroysato@gmail.com> Date:   Fri Oct 14 11:09:22 2016 +0900      commit  commit e73755b317ea1017c595b6946651b29f118104fa Author: Hiroyuki Sato <hiroysato@gmail.com> Date:   Fri Oct 14 11:08:39 2016 +0900      first commit (END) ``` ### The sample project & test log - [gitbucket_issue20161014](https://github.com/hiroyuki-sato/gitbucket_issue20161014) - [Test log](https://gist.github.com/hiroyuki-sato/3b6d8e4ac4b1a906d969fee4bda468cf) ### Reference - Reported by [@ccskoba](https://gitter.im/gitbucket/gitbucket_ja?at=5800293e78bd0d0363bfb2e6) ","false","bug"
"Ldap login with Ldap group","I have a question regarding using GitBucket with LDAP settings. How can I setup Gitbucket for accepting users that are members of one specific groups? ","false",
"switch to commonmark","This PR is work in progress and is only submitted to show the attempt & progress on this subject & to allow discussions. - [x] introduce commonmark dependencies - [x] use commonmark for markdown rendering - [ ] move RefLinks into a commonsmark-extension - [ ] provide better handling/rendering for tasks, options:   - use an AttributeProvider   - extend an existing NodeRenderer   - create an extensions - [ ] ensure all mardown usage uses Markdown class - [ ] remove markedj - [ ] update existing tests, add additionals - [ ] extend gitbucket to allow additional commonmark extensions   - via Plugins mechanism   - via configuration only and class availability in the classpath   Do not hesitate to help on this topic if you are interested in the subject. ","true","pending"
"Create issue button in top","It will be useful, if you put ""create issue"" in the page header, near of pull requests and issues link. ","false","improvement,plugin"
"Improve GitHub compatibility for Jenkins","I am using [Jenkins Multibranch Pipeline](https://wiki.jenkins-ci.org/display/JENKINS/Pipeline+Multibranch+Plugin) and found it does not work with GitBucket. It assumes Git client can access to a repository via GitHub compatible URL. Also it assumes Users API serves not only a user but also an organization (this is current behavior of GitHub API but not documented on [specification](https://developer.github.com/v3/users/)).  This pull request contains ~~2 commits~~ a commit to improve GitHub compatibility as follows. 1. Add redirection to allow Git client to access a repository by GitHub compatible URL, e.g. redirection from `/int128/gitbucket.git/` to `/git/int128/gitbucket.git/`. 2. ~~Change Users API serves also organization as GitHub API, e.g. `/api/v3/users/gitbucket` serves the organization `gitbucket`.~~ This is not needed on the latest Multibranch Pipeline.  I have tested these features on both my Mac and EC2 server terminated with ELB SSL.  Additionally, I am happy to contribute a Wiki page how to use Jenkins Multibranch Pipeline and GitBucket. For more details, please see [my blog post](http://int128.hatenablog.com/entry/2016/10/06/224444) (Japanese).  Thanks for the great work. ","true","improvement"
"Add API to get a file content","Support [Get-Contents API](https://developer.github.com/v3/repos/contents/#get-contents) for a **file**. **cf.** Get-Contents API for a **directory** is already supported by #1248  When a given path is a file, base64-encoded content will be returned. ### Example  **API call:**  ``` shell $ curl http://localhost:8080/api/v3/repos/user1/gitbucket/contents/project/build.properties ```  **Reponse:**  ``` js {   ""type"":""file"",   ""name"":""build.properties"",   ""content"":""c2J0LnZlcnNpb249MC4xMy4xMgo="",   ""encoding"":""base64"" } ``` ","true","improvement"
"Multiple issue reference","**Impacted version**: 4.5.0 (probably all versions)  **Deployment mode**: standalone with apache  **Problem description**: When you mention issue in commit more than once, this commit appears in issue tab multiple times. ","false","bug"
"Commits not appear in front-page since 4.5.0","## Issue  **Impacted version**: 4.5.0 **Deployment mode**: _apache2 mod_proxy_  **Problem description**: - _Since upgrade to 4.5.0 commits don't appear in front page (AKA News Feed) only issues_ ","false","bug"
"Defect/uses filepath hex decoding","### Before submitting a pull-request to Gitbucket I have first: - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"A link to page history should be available in ""View"" mode","## Issue  **Impacted version**: 3.14 **Deployment mode**: _with an http frontend (nginx)_  **Problem description**: To see the history of a page in the Wiki, you need two clicks: first click on ""Edit Page"", then click on ""Page History"". Please consider adding the a link to ""Page History"" directly on the page, reducing the click count to 1. ","false","improvement"
"Support creating directories via the GitBucket web interface","## Issue  **Impacted version**: 3.14 **Deployment mode**: _with an http frontend_  **Problem description**: It is possible to create a new file via the web interface of GitBucket. Please allow for creating a new directory via the web interface as well. ","false",
"LDAP Authentication - some questions","I'm using gitbucket-4.5 and I'm doing some tests related to LDAP authentication. It basically works, but I do have some questions: 1. According to my observations, you can mix and match LDAP users and local gitbucket users.    Is this a feature? Can I depend on it?    - gitbucket users can login using their gitbucket password    - LDAP users can login using their LDAP password 2. ""Fresh"" LDAP users can do a login. For my installation, they have to enter their email address    within the account settings page and that's it. Within system settings, ""Account registration"" is    set to ""Deny""    - Is there any way to prevent these logins?    - In other words: Can I restrict the access to gitbucket in any way?    - Or is it a feature that every LDAP user can access gitbucket? 3. Doing a login using LDAP credentials doesn't provide any error message in case you make a typo.    Instead, the login screen is cleared and you can try again.    - Do you have any plans to show an error message? Something like ""username and/or password is wrong""?  Thanks for your help, Uli ","false","LDAP/SSO"
"remove unused scalaz",,"true",
"Sidemenu badge position in Firefox","## Issue  **Impacted version**: 4.5  **Problem description**: - Sidemenu badge position is out of alignment in Firefox  ![2016-10-04 11 06 58](https://cloud.githubusercontent.com/assets/1094760/19060439/4c97de8e-8a23-11e6-9a8c-12148a982621.png) ","false","bug"
"(refs #1308)Fix issues sorting","Fix for #1308 ","true","bug"
"Issue index -- start from","For simplification of migration from another bug trackers will be useful start from options Now for example in our bug tracker we have 1000 issues, in gitbucket project it starts from 1 and produces mishmash for me.  Until then I will import old bugs to gitbucket, I will keep old tracker. And simplest solution for avoiding collisions -- start new issues from for example 2000  I understand, it's hacky.  Is it possible to set start index directly in DB?  ","false","question"
"More plug-ins in the live demo!","Please always install more (if not all) plug-ins in the demo installation hosted on Heroku. ![gitbucket_demo_plug-ins](https://cloud.githubusercontent.com/assets/140953/18989721/c363dc16-870d-11e6-8c67-6b7851ce5531.png)  Thank you. ","false",
"Issue with multiple labels is displayed duplicate in issues list","## Issue  **Impacted version**: 4.4, 4.5  **Deployment mode**: standalone app with PostgreSQL 9.4  **Problem description**: Some issues with multiple labels are displayed duplicate with another label in issues list.  These issues have issue-label rows separated by rows related with other issue in ISSUE_LABEL table from select query without order-by clause.  To reproduce this, - create issue A with label X - create issue B with label X - add label Y to issue A - check the issue list, sometimes issue A displayed twice, with label X and with label Y. ","false","bug"
"Replace markedj with Atlassian's commonmark library?","https://github.com/atlassian/commonmark-java ","false",
"How do you migrate from H2 to another database?","## Question  I'm wondering how you migrate your data from H2 to another database, say PostgreSQL or MariaDB. Due to #1274, I currently do think this might be an approach: - create an export of your gitbucket instance - prepare a new instance configured to use a the new database - start the new instance once -> schema will be created - import the data created in the first step  Is this the way it is supposed to work? Am I missing something? I thin I'll give this a try within the next weeks... ","false","question"
"(refs #1303)Configure ssh server to be secure","This request is fix for #1303. The result of ssh-audit is as follows:  ![2016-09-27 2 37 29](https://cloud.githubusercontent.com/assets/1094760/18845123/602bc3a2-845b-11e6-9c6e-7869c0d55056.png) ","true",
"4.4 and 4.5: ""sbt.sh package"" creates a war file named gitbucket_2.11-4.4.0.jar (instead of .war)","## Issue  **Impacted version**: 4.4, master (4.3 is OK)  **Deployment mode**: NA  **Problem description**: 1. Start with a fresh checkout 2. Execute `./sbt.sh package` 3. Expect creation of target/scala-2.11/gitbucket_2.11-4.4.0.war, instead target/scala-2.11/gitbucket_2.11-4.4.0.jar is created ""twice""  ``` ... [warn] there were two feature warnings; re-run with -feature for details [warn] one warning found [info] Packaging /home/uli/git/forked/gitbucket/target/scala-2.11/gitbucket_2.11-4.4.0.jar ... [info] Done packaging. [info] Packaging /home/uli/git/forked/gitbucket/target/scala-2.11/gitbucket_2.11-4.4.0.jar ... [info] Done packaging. [success] Total time: 224 s, completed 26.09.2016 06:25:34 ```  This is a followup of #1300 ","false","bug"
"Update OpenSSH Server default config to fix security issues","## Issue  **Impacted version**: 4.4  **Deployment mode**: Tomcat 8.5, nginx  **Problem description**: - built-in-ssh-server config is pretty unsafe these times - Reproduce: set-up gitbucket, use https://github.com/arthepsy/ssh-audit or any other SSH auditing tool, facepalm. - Example results (with colours, to demonstrate my point):    ![screen shot 2016-09-23 at 23 19 11](https://cloud.githubusercontent.com/assets/6506906/18801640/4dc20b82-81e4-11e6-87fb-c181d05e9d64.png)  gitbucket should be bundled with an up-to-date ssh security configuration. As many of the used ciphers and key exchange algorithms are known to be broken or weak this report should be handled as critical. ","false","improvement"
"ssh clone - GB Configuration Question","This isn't so much an issue as a general config question.  I have a standalone implementation of GB wherein one of the users can only clone if they use ssh://username@....   This form will not work for them: ssh://git@....  I suspect key problems, but this did lead me to a more general question.  How/where is GB configured to use the username vs the generic git user for cloning?   ","false",
"Fix host command line argument","### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  I couldn't find any open issues on this.  Tested in 3 modes: 1. No port or host specified java -jar target/executable/gitbucket.war Started ServerConnector@2a331b46{HTTP/1.1,[http/1.1]}{**0.0.0.0:8080**} 1. Port specified    java -jar target/executable/gitbucket.war --port=8888    Started ServerConnector@2a331b46{HTTP/1.1,[http/1.1]}{**0.0.0.0:8888**} 2. Host and port specified    java -jar target/executable/gitbucket.war --host=localhost --port=8888    Started ServerConnector@2a331b46{HTTP/1.1,[http/1.1]}{**localhost:8888**} ","true","bug"
"4.4: Standalone app shows error messages on startup","## Issue  **Impacted version**: 4.4 (4.3 is ok)  **Deployment mode**: standalone app  **Problem description**:  Typically, I'm doing something like this: 1. Checkout the release tag 2. `git clean -f` 3. `./sbt.sh clean` 4. `rm -rf target` 5. `./sbt.sh package` 6. `./sbt.sh executable` 7. `java -jar target/executable/gitbucket.war`  For 4.3 (... and ""all"" versions before), this works ok: [43.txt](https://github.com/gitbucket/gitbucket/files/488862/43.txt)  For 4.4, I'm getting errors: [44.txt](https://github.com/gitbucket/gitbucket/files/488860/44.txt) ","false",
"GitBucket 4.5 release","Before merging this request: - [x] Update version in build.sbt and GitBucketCoreModule - [x] Write English blog article - [x] Write Japanese blog article - [x] Update README.md  After merging into master branch: - [x] Add tag - [x] Release war file on GitHub - [ ] Publish jar file to maven central repository - [x] Publish English blog article - [x] Publish Japanese blog article - [x] Announce on twitter and gitter ","true",
"bad URL for images when raw=true already exists","## Issue  **Impacted version**: 4.3  **Deployment mode**: not relevant  **Problem description**: when referencing in README.md an image with something like `![Alt text](/relative/path/to/img.jpg?raw=true ""Optional Title"")`, gitbucket always appends `?raw=true` leading in an URL of the form:   `http://XXXXX/user/repo/relative/path/to/img.jpg?raw=true?raw=true` which does not render correctly.  I think gitbucket should not append `?raw=true` when it is already there.  PS: I need to keep `?raw=true` in the README images because the project is both hosted on github & gitbucket. ","false","bug"
"At lot of users using gitbucket at the same time make it lock","## Issue  **Impacted version**:  4.4 and maybe before  **Deployment mode**:  standalone app  **Problem description**: I'm using gitbucket as a standalone application on Ubuntu 14.04 with java 1.8.0 update 51. I have 204 accounts and 557 repositories. When a lot of users are using gitbucket at the same time, gitbucket locks while trying to connect to its database (as far as I can understand, I'm not a java expert at all :-)). It seems to be related to: https://github.com/brettwooldridge/HikariCP/issues/714. I tried to migrate from H2 database to MySQL and it's a bit better but it is still locking with the following stakctrace:  ```  java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30000ms.     at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:196)     at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:147)     at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:83)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.createConnection(JdbcBackend.scala:47)     at scala.slick.jdbc.JdbcBackend$BaseSession.conn$lzycompute(JdbcBackend.scala:397)     at scala.slick.jdbc.JdbcBackend$BaseSession.conn(JdbcBackend.scala:397)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:420)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1174)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1106)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)     at org.eclipse.jetty.server.Server.handle(Server.java:524)     at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319)     at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253)     at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)     at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)     at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)     at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)     at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)     at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)     at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)     at java.lang.Thread.run(Thread.java:745) ```  I've been able to reproduce it by running multiple clones at the same time:   ``` for i in {1..20}; do git clone ssh://git.example.com:29418/user/repository.git repository_$i& done ```  Thanks.  Rémi ","false","bug"
"Keep commit comment in pull request while commented line is not modified ","## Issue  **Impacted version**: 4.4  **Problem description**: - Commit comment is hidden if new commit is pushed currently - It would be nice if comment is keeped while commented line is not modified ","false","improvement"
"Issues import","We are migrating from redmine to gitbucket. Import of issues is really necessary I thinck, simpe csv or json format is enougth: Summarry, description, author, assigny, type, status, date created, comments (text, date, author) ","false","help wanted,plugin"
"Wiki pages import","Please, provide import feature for wiki. Currently, we are using redmine and migrating to gitbucket. But can't automatically import existing wiki pages  ","false","help wanted,plugin"
"Feature request: In /dashboard/issues add the ability to see all issues assigned to a user","In `/dashbord/issues` I can see all issues across the projects. There is also a way to filter by ""Visibility"" and ""Organisation"".  It would also be good to have a way to filter by `assignee:me`, or in general, assigned to any chosen user. ","false","feature"
"Disable option for forking.","Please add an option in the settings (and the functionality) to be able to disable forking (the same way it's now possible to disable issues or wiki for a project).  Many projects are not making use it it anyway for intranet projects, and it makes more sense for public open source projects (but this is not the biggest use case of GitBucket anyway).  Thank you. ","false","feature,help wanted"
"Improve Cookie Security","I noticed that the Cookie set by GitBucket (at least in Version 4.3) uses neither the `Secure` nor the `HttpOnly` directive (as described [here](https://wiki.mozilla.org/Security/Guidelines/Web_Security#Cookies)). I presume these have been omitted to allow for easier deployment of GitBucket as intranet service.  Modifying the Cookie set by GitBucket server-side is definitely possible as described [here for Apache](http://stackoverflow.com/a/24246462/2920585) but I would very much appreciate it if GitBucket either used stricter security settings for its cookies out of the box or allowed for increasing the security via configuration values instead of relying on server-side manipulation.  I presume it would be possible to detect whether or not GitBucket runs on - a ""public"", valid domain, i.e. not in an intranet setting, - and with SSL/HTTPS enabled  to conditionally set the additional directives when feasible as an alternative to hardcoding the settings or making additional configuration values necessary respectively. ","false","improvement"
"Download zip button only shows up on Windows","## Issue  **Impacted version**: 4.2.1  **Deployment mode**: Standalone with Apache reverse proxy  If my browser user agent is Firefox on Linux, the Download as Zip button is missing. It only shows when I use a Firefox on windows user agent. Weird. ","false","bug"
"Apply table-hover class for the commit history in PR (improves #1230)","I think `table-hover` class is needed in pull request commit history. ","true",
"Attach files by dropping into textarea","Now, we can attach files to issues or wiki by dropping into only the bottom area of textarea. However it's useful if it's also available in textarea. ","false","feature"
"allow rich description rendering in plugin admin page","**Problem description**: Promotion of plugins is not very easy and allowing to render rich text in the plugin page would help: - users to understand the plugin feature - maintainers to promote their plugin  Instead of simple text rendering, we could allow other formats (markdown, ...)  ![image](https://cloud.githubusercontent.com/assets/1119660/18229864/dfd312de-7288-11e6-98dc-655565fc8f71.png) ","false",
"New permission system","This is my plan about new permission system:  ## Collaborator - Possible to add group as collaborator - Possible to add collaborator to the group repository - Collaborator (user or group) has `ADMIN`, `WRITE` or `READ` permission for the repository:   - `ADMIN`: All repository features including repository settings   - `WRITE`: Push to the repository / Repository features for `WRITE` collaborators   - `READ`: See the repository / Repository features for `READ` collaborators  ## Repository feature - Repository feature like wiki or issues has `DISABLE`, `WRITE`, `READ` or `ALL` limitation options:   - `DISABLE`: Disable the feature   - `WRITE`: All users who can access the repository can see, but only `WRITE` collaborators can update   - `READ`: All users who can access the repository can see, but only `READ` collaborators can update  ## Consideration - `READ` permission has no meaning for public repositories - Team in the group like GitHub is useful? - More detailed permission control is needed? ","false","feature,help wanted"
"Add a ""plug-in"" label to this issue tracker!","Add a ""plug-in"" label to this issue tracker to be able to mark the issues as (potential) ""plug-ins"", since so many of the feature requests would be better off in some plug-ins.  It's simple to filter by a label, so that users who search for GitBucket plug-in idea can quickly find them. ","false",
"Thank you for this software","Thank you for this wonderful software.  We have been using this in our organization, and have been very happy with the capabilities.  Thank you for the software. ","false",
"""raw"" button should open in a new tab/window","The ""raw"" button on a specific file should open  a new browser tab/window.  Thank you. ","false",
"Long commit messages break the layout!","If a commit message is short, than the Layout is OK: ![gitbucket_layout_ok](https://cloud.githubusercontent.com/assets/140953/18094447/c5363da6-6ed3-11e6-85d1-89fb03eb96e4.png)  If a commit message is long, than it breaks the layout: ![gitbucket_layout_bad](https://cloud.githubusercontent.com/assets/140953/18094453/c9f32886-6ed3-11e6-8db4-bcd6b2f8dbfd.png)  IMHO if a commit message is too long, than ellipsis should be used. http://www.electrictoolbox.com/ellipsis-html-css/ ","false","bug"
"Disabled user session still lives!","Hi,  If the admin disabled a user, it's session still seem to live and the user can do stuff.  IMHO in the moment a user is disabled, it's sessions should be invalidated too, so that the user is kicked out. If the user still keeps refreshing, the session is prolonged indefinitely, thus defying the purpose of disable.  Thank you. ","false","bug"
"fix get-contents API's format","Fix get-contents API to make it compatible with GitHub API specification.  In current implementation, [`splitPath`](https://github.com/gitbucket/gitbucket/blob/48b6a590bf8378134c182e3815493db36a123e43/src/main/scala/gitbucket/core/controller/ApiController.scala#L112) method is used. [This method](https://github.com/gitbucket/gitbucket/blob/48b6a590bf8378134c182e3815493db36a123e43/src/main/scala/gitbucket/core/service/RepositoryService.scala#L424) expects that URL contains branch name or tag name, but this isn't compatible with GitHub API. So, I fixed.  **Example** To get information of `src` directory, - Current   `GET /repos/:user/:repo/contents/master/src/` - After this PR (and GitHub API)   `GET /repos/:user/:repo/contents/src/` ","true","bug"
"Select AdminLTE color skin","It might be nice if AdminLTE color skin is selectable. ","false","feature"
"Please update AdminLTE to Ver.2.3.6.","AdminLTE Ver.2.2.3 has a issue which was the following,  https://github.com/almasaeed2010/AdminLTE/pull/1096  It was merged at Ver.2.3.6. So please update AdminLTE to Ver.2.3.6. ","false","improvement"
"Confusing issue list behavior","## Issue  **Impacted version**: 4.3.0  **Deployment mode**: standalone app  **Problem description**: If I visit a milestone page and then visit the issue list, then the milestone filter is sticky. That is, only issues from that milestone are visible. However, there is no visual indication that the milestone filter is active. The only way to find out is to click the milestone filter dropdown, and notice that milestone is selected.  My suggested solutions: - Don't make the milestone filter sticky. If I click on issues link in the sidebar, it should show all issues, without filters. - If milestone filter is going to be sticky it should show some indication. Either in the UI or in the URL. ","false","improvement"
"Search hangs forever","## Issue  **Deployment mode**: standalone  **Problem description**: If i try to use the search function, the browser issues the http request (search?q=keyword) but the response never arrives.  I noticed this with previous versions also, currently i'm on 4.3.0. What else info should i provide to help solving this?  Unfortunately i don't have instant access to the host machine, but i have root access on GitBucket. ","false","improvement"
"Hides sidebar by user choices","## Issue  **Impacted version**: 4.3 and others  **Deployment mode**: using gitbucket from tomcat  **Problem description**: - There is no option to hide sidebar (and menu) - CSS gitbucket-4.3 uses may allows it under certain circumstance (like zooming bigger than 175%) - However, having such an option user can choose is good idea  Please consider having such an option.  Thanks. ","false","improvement"
"Export SQL Data including Schema","Version >= 4.0 allows different SQL backends and has data exporting capabilities. However, migrating data from existing installations into e.g. MySQL does not appear readily available. To facilitate this it would be very good if the exported SQL data (optionally) included generic create statements for the various tables.  Alternatively I'd opt for a separate schema/table structure file containing the current structure that can be used to manually prepare a database. ","false","help wanted,improvement,plugin"
"Set default value of parameter in Get-Contents API","If parameter `ref` is not given in get-contents API, repository’s default branch will be used. https://developer.github.com/v3/repos/contents/#get-contents ","true","bug"
"/repositories/snapshots/io/github/gitbucket  content is missing","https://oss.sonatype.org/content/repositories/snapshots/io/github/gitbucket/ content is null ","false",
"Pull request webhook JSON dose not contain ""merged"" (boolean) property","## Issue  **Impacted version**: HEAD  **Deployment mode**: *explain here how you use gitbucket : standalone app  **Problem description**: - Pull request webhook JSON does not contain ""merged"" (boolean) property.   c.f.) https://developer.github.com/v3/activity/events/types/#pullrequestevent ","false","improvement"
"add copyright holder name in license","### Before submitting a pull-request to Gitbucket I have first: - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"[WIP] Move to Slick3 using blocking-slick","This pull request is an experiment of moving to Slick3 using blocking-slick library. https://github.com/takezoe/blocking-slick ","true","task"
"Fix AccountService#getGroupNames returns duplicated group name .","Thank you for your great work.   I found a little defect. When user group has several repositories, organization filter menu in issues list shows duplicated organization. I fixed it and hope you will merge it.  <img width=""791"" alt=""2016-08-11 15 22 24"" src=""https://cloud.githubusercontent.com/assets/99401/17580312/b094c4b2-5fd8-11e6-9038-3aa0167c081a.png""> ","true","bug"
"Graceful shutdown for embedded jetty",,"false","improvement"
"Permission of update or delete comments","While an user comment on a commit (in line of code in commit or on commit), then any user (admin or normal user) can update or delete those comment (of other user). Shortly any user can delete or update comments of other users. No permission logic of update or delete comments. ","false","duplicate,improvement"
"tag a commit from gitbucket","Is it possible to add this functionnality ?  It could be very convenient for our build process. ","false","feature"
"Upload attachment does not work.","I am upgrading GitBucket to 4.3.0.  I have tried to run it in Apache Tomcat 8 or standalone(java -jar).  But I found there is no **selecting them** link in the comment box when creating issues or reply others. And the DND is also problematic and does not work. I tried to drag an images to the zone, it open the image directly in my browser, I have tried in Firefox and Chrome, got the same result.  Where I need to set up for uploading files?  ![gitbucket](https://cloud.githubusercontent.com/assets/854520/17478773/aed0c110-5da0-11e6-864f-25bbdb9ab181.png) ","false","bug"
"Unable to download large files on wiki","## Issue  **Impacted version**: 4.3.0  **Deployment mode**: standalone app  **Problem description**:  I got `org.eclipse.jgit.errors.LargeObjectException` when trying to download a large file in wiki's git repository. This is how to reproduce: 1. Clone `https://example.com/gitbucket/git/some-user/some-repo.wiki.git`. 2. Add `LargeFile.zip` (~ 125MB) and commit. 3. Push to GitBucket. 4. Download `https://example.com/gitbucket/some-user/some-repo/wiki/_blob/LargeFile.zip`.  <details>  <summary>Stacktrace</summary>  ``` org.eclipse.jgit.errors.LargeObjectException: fd1c7ac6d5bdb75f1134520d2d27a4c3d3b2790d exceeds size limit     at org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getCachedBytes(LargePackedWholeObject.java:98)     at org.eclipse.jgit.lib.ObjectLoader.getBytes(ObjectLoader.java:100)     at gitbucket.core.service.WikiService$class.gitbucket$core$service$WikiService$class$$$anonfun$8(WikiService.scala:89)     at gitbucket.core.service.WikiService$class$$Lambda$883/1728630218.apply(Unknown Source)     at scala.Option.map(Option.scala:146)     at gitbucket.core.service.WikiService$class.gitbucket$core$service$WikiService$class$$$anonfun$6(WikiService.scala:88)     at gitbucket.core.service.WikiService$class$$Lambda$881/1321611078.apply(Unknown Source)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:24)     at gitbucket.core.service.WikiService$class.getFileContent(WikiService.scala:82)     at gitbucket.core.controller.WikiController.getFileContent(WikiController.scala:15)     at gitbucket.core.controller.WikiControllerBase$class.gitbucket$core$controller$WikiControllerBase$class$$$anonfun$45(WikiController.scala:202)     at gitbucket.core.controller.WikiControllerBase$class$$Lambda$880/816974607.apply(Unknown Source)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$class$$$anonfun$22(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$class$$Lambda$463/1801400624.apply(Unknown Source)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$class$$$anonfun$21(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$class$$Lambda$462/29038839.apply(Unknown Source)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:12)     at gitbucket.core.util.ReferrerAuthenticator$class.authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.WikiController.referrersOnly(WikiController.scala:15)     at gitbucket.core.controller.WikiControllerBase$class.gitbucket$core$controller$WikiControllerBase$class$$$anonfun$44(WikiController.scala:199)     at gitbucket.core.controller.WikiControllerBase$class$$Lambda$204/261429887.apply(Unknown Source)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:285)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:279)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:279)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:189)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:278)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:189)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:253)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:251)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:251)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:250)     at scala.collection.immutable.Stream.flatMap(Stream.scala:489)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:250)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)     at gitbucket.core.servlet.TransactionFilter.gitbucket$core$servlet$TransactionFilter$$$anonfun$1(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter.gitbucket$core$servlet$TransactionFilter$$$anonfun$1$adapted(TransactionFilter.scala:28)     at gitbucket.core.servlet.TransactionFilter$$Lambda$296/243993936.apply(Unknown Source)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1174)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1106)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)     at org.eclipse.jetty.server.Server.handle(Server.java:524)     at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319)     at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253)     at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)     at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)     at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)     at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)     at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)     at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)     at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)     at java.lang.Thread.run(Thread.java:745) ```  </details>","false","bug"
"LDAP Connection stops working after certain time","## Issue  **Impacted version**: 4.3  **Deployment mode**: Tomcat 7 web app  **Problem description**: We connect to our Active Directory server with LDAPS on port 636. We leave the GitBucket server running at all times and can log in and work with GitBucket. At some point when trying to commit to GitBucket server, authentication fails. Logging out and back in to the GitBucket web interface results in the Sign In form being shown all the time, unless I log in with a non Active Directory user, e.g. ""root""  A restart of the GitBucket server allows authentication once more.  Also, logging in as ""root"" and saving the admin settings (without changing anything) also restores the correct authentication. ","false",
"Sshd update","I had been getting errors connecting to Gitbucket ssh, from my ubuntu 14.04 box. I was seeing this error message:  ``` debug1: ssh_rsa_verify: signature correct debug2: kex_derive_keys debug2: set_newkeys: mode 1 debug1: SSH2_MSG_NEWKEYS sent debug1: expecting SSH2_MSG_NEWKEYS debug2: set_newkeys: mode 0 debug1: SSH2_MSG_NEWKEYS received debug1: SSH2_MSG_SERVICE_REQUEST sent Corrupted MAC on input. Disconnecting: Packet corrupt ```  After updating to latest apache-sshd, it works like a charm. ### Before submitting a pull-request to Gitbucket I have first: - [X] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [X] rebased my branch over master - [X] verified that project is compiling - [X] verified that tests are passing - [X] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [X] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"(fix #1246) cannot see the blame","fixed #1246 ","true","bug"
"Import SQL file","In the latest version of GitBucket, it can export database as XML and SQL file, but it can import only XML file. I would like to add importing SQL file capability in the future version. ","false","feature"
"branch protection & checks/statuses","as stated in my comments of #1248, I installed version 4.3 and configured Jenkins Github Branch Source Plugin to be used with pipeline jobs.  It works quite well, branches & PR are discovered and build automatically AND build statuses are pushed and received correctly by gitbucket.  My question is related to what is expected to be found in ""branch protection"" section.  Following image is the PR has seen in gitbucket after a successfull build of jenkins ![image](https://cloud.githubusercontent.com/assets/1119660/17357472/f8e92816-595c-11e6-9e16-328e633326ae.png)  Now here is what is available in branch protection ![image](https://cloud.githubusercontent.com/assets/1119660/17357497/25392e7a-595d-11e6-95da-0ebb964c2aa6.png)  Seeing that I do not understand how I should setup my branch protection so that it ensures that a correct build from CI (jenkins here in my case) is performed before merging. If all pushed statuses have a different name and are interpreted individually by gitbucket I think it is not useable.   Shouldn't we find a common entry ""Jenkins job"" and not one dedicated by branch/PR? ","false","question"
"test user still required for MySQL database after changing DB user","## Issue  **Impacted version**: 4.2.1  **Deployment mode**: Apache Tomcat 7 server  **Problem description**: I managed to get GitBucket working with MySQL 5.7 and migrated the H2 database. I then decided I would not use the default ""test"" user but created my own user and password to access the gitbucket schema in the MySQL DB.  This seemed to work fine so I then deleted the ""test"" user and restarted GitBucket. Everything again seemed to be fine until I clicked on ""Issues"" where I instantly received a java exception:  ---  java.sql.SQLException: View 'gitbucket.issue_outline_view' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them     at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:963)     at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3966)     at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3902)     at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2526)     at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2673)....  ---  Now I have to recreate this ""test"" user and again give it privileges to access the gitbucket schema. Once this is done, everything works again.  The same occurs if I select ""Pull Requests"".  Any ideas how to really get rid of the need for this ""test"" user? ","false",
"(refs #1251) git is reserved user name. add validation.","### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  User can create user called 'git', but not use it. ","true","improvement"
"Upgrading to 4.3.0: Strange behavior of the database migrations","## Issue  **Impacted version**: 4.3.0  **Deployment mode**: Executable war behind an apache httpd reverse proxy  **Problem description**: I'm observing a strange behavior related to database migrations. I've done these twice now and here are the facts: - I'm running gitbucket-4.2.0 - I'm coming all the way along from gitbucket-3 - I've fixed the database issues of 4.2.0 manually (yes, I know I'm on my own related to this and it leads to errors; please read on, the behavoir is strange nevertheless) - I stopped gitbucket - I updated to 4.3.0 - I restarted gitbucket - Everything looks fine, see this screenshot:  ![image](https://cloud.githubusercontent.com/assets/1677414/17276037/9f165ab2-571c-11e6-92f5-6f11c1e3c985.png) - Looking at the H2 database, the version looks strange. This might be a followup issue of the database issues with version 4.2:  ![image](https://cloud.githubusercontent.com/assets/1677414/17276043/da209258-571c-11e6-92d1-d89c422973f1.png) - On the other hand: I would rather expect 4.1.0 to show up here... - Next I stop gitbucket again - Then I start it again - Now it doesn't start up, instead these messages show up within the logs:  ``` Jul 31, 2016 10:48:22 AM gitbucket.core.servlet.InitializeListener gitbucket$core$servlet$InitializeListener$$$anonfun$1 INFO: Start schema update 2016-07-31 10:48:24.205:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@59221b97{/gitbucket,file:///srv/gitbucket/home/tmp/webapp/,UNAVAILABLE}{file:/srv/gitbucket/gitbucket-4.3.war} org.h2.jdbc.JdbcSQLException: Duplicate column name ""ENABLE_ISSUES""; SQL statement:|ALTER TABLE PUBLIC.REPOSITORY ADD ENABLE_ISSUES BOOLEAN DEFAULT TRUE NOT NULL [42121-192]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:179)     at org.h2.message.DbException.get(DbException.java:155)     at org.h2.table.Table.setColumns(Table.java:431)     at org.h2.table.TableBase.<init>(TableBase.java:45)     at org.h2.mvstore.db.MVTable.<init>(MVTable.java:103)     at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:108) ... ``` - I fixed the issue by deleting the columns I've added for 4.2.0 and restarting gitbucket - What I don't understand is this: Why does gitbucket start up at all? Shouldn't the database migration fail for the first start of gitbucket-4.3.0, too? ","false","improvement"
"DIFF view: Some diffs are too wide","## Issue  **Impacted version**: 4.3.0  **Deployment mode**: Runnable war file behind an apache httpd reverse proxy  **Problem description**:  Some boxes are too wide in the DIFF view - see screenshot. I'm not sure about the root cause of this. Maybe long lines?  ![image](https://cloud.githubusercontent.com/assets/1677414/17275779/fc6bbd14-5713-11e6-8297-5a5de56d85a1.png) ","false","improvement"
"(refs #935) Update project configuration for deploying artifacts to Maven central","This update makes possible to publishing artifacts to Maven central for plugins.  One problem remained is both of jar and war are published. A war file shouldn't be published. Currently, I have to delete a war file and its hash on Nexus after publish artifacts to Sonatype. ","true",
"Enable file upload into repository","I am proposed to add file upload functionality to repo, similar to what Github currently has  This is just a prototype, but I would like to get some feedback from you guys. Currently it only supports text based files, but I would like to include all file type ","true","feature"
"Authentication as generic user git failed, public key not found","## Issue  **Impacted version**: 4.1.0  **Deployment mode**:  I use your docker image and just upgraded to the latest version over 3.14 as recommended.  **Problem description**: I can not clone/push/pull repositories over the new generic git user. It says: `16:41:40.367 [sshd-SshServer[124ac145]-nio2-thread-3]  INFO  o.a.s.s.session.ServerSessionImpl - Server session created from /XXX.XXX.XXX.XXX:51456 16:41:40.621 [sshd-SshServer[124ac145]-nio2-thread-4]  INFO  g.core.ssh.PublicKeyAuthenticator - authentication as generic user git failed, public key is ambiguous 16:41:40.663 [sshd-SshServer[124ac145]-nio2-thread-5]  INFO  g.core.ssh.PublicKeyAuthenticator - authentication as generic user git failed, public key not found 16:41:40.705 [sshd-SshServer[124ac145]-nio2-thread-1] I NFO  g.core.ssh.PublicKeyAuthenticator - authentication as generic user git failed, public key not found 16:41:40.748 [sshd-SshServer[124ac145]-nio2-thread-2]  INFO  g.core.ssh.PublicKeyAuthenticator - authentication as generic user git failed, public key not found `  Can not see where i can set the public key for user ""git"" ","false","improvement"
"java.lang.StackOverflowError on Gitbucket Issue page.","## Issue  **Impacted version**: 4.2.1  **Deployment mode**:  _under webcontainer (tomcat), with an http frontend (apache)_  **Problem description**: I got `java.lang.StackOverflowError` when writing comment.  I got the following `java.lang.StackOverflowError` exception When I wrote the folloiwng comment on GitBucket Issue page. - Open Issue   - Subject: test   - content: test - Write comment.    - Paste the following text  ``` [""/path/to/rails/lib/active_record/associations/has_many_association.rb:80:in `cached_counter_attribute_name'"",  ""/path/to/rails/lib/active_record/associations/has_many_association.rb:103:in `inverse_updates_counter_cache?'"",  ""/path/to/rails/lib/active_record/associations/has_many_association.rb:113:in `delete_records'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:493:in `remove_records'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:486:in `block in delete_or_destroy'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:152:in `block in transaction'"",  ""/path/to/rails/lib/active_record/connection_adapters/abstract/database_statements.rb:200:in `transaction'"",  ""/path/to/rails/lib/active_record/transactions.rb:209:in `transaction'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:151:in `transaction'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:486:in `delete_or_destroy'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:247:in `destroy'"",  ""/path/to/rails/lib/active_record/associations/collection_association.rb:170:in `destroy_all'"",  ""/path/to/rails/lib/active_record/associations/has_many_association.rb:26:in `handle_dependency'"",  ""/path/to/rails/lib/active_record/associations/builder/association.rb:97:in `has_many_dependent_for_ary_royalty_details'"",  ""/path/to/rails/lib/active_support/callbacks.rb:377:in `_run__901941141290416734__destroy__callbacks'"",  ""/path/to/rails/lib/active_support/callbacks.rb:80:in `run_callbacks'"",  ""/path/to/rails/lib/active_record/callbacks.rb:289:in `destroy'"",  ""/path/to/rails/lib/active_record/transactions.rb:265:in `block in destroy'"",  ""/path/to/rails/lib/active_record/transactions.rb:326:in `block in with_transaction_returning_status'"",  ""/path/to/rails/lib/active_record/connection_adapters/abstract/database_statements.rb:200:in `transaction'"",  ""/path/to/rails/lib/active_record/transactions.rb:209:in `transaction'"",  ""/path/to/rails/lib/active_record/transactions.rb:323:in `with_transaction_returning_status'"",  ""/path/to/rails/lib/active_record/transactions.rb:265:in `destroy'"",  ""/path/to/rails/lib/active_record/connection_adapters/abstract/database_statements.rb:202:in `block in transaction'"",  ""/path/to/rails/lib/active_record/connection_adapters/abstract/database_statements.rb:210:in `within_new_transaction'"",  ""/path/to/rails/lib/active_record/connection_adapters/abstract/database_statements.rb:202:in `transaction'"",  ""/path/to/rails/lib/active_record/transactions.rb:209:in `transaction'"",  ""/path/to/rails/lib/action_controller/metal/implicit_render.rb:4:in `send_action'"",  ""/path/to/rails/lib/abstract_controller/base.rb:189:in `process_action'"",  ""/path/to/rails/lib/action_controller/metal/rendering.rb:10:in `process_action'"",  ""/path/to/rails/lib/abstract_controller/callbacks.rb:18:in `block in process_action'"",  ""/path/to/rails/lib/active_support/callbacks.rb:423:in `_run__1216070983823669037__process_action__callbacks'"",  ""/path/to/rails/lib/active_support/callbacks.rb:80:in `run_callbacks'"", ```  ``` java.lang.StackOverflowError     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717)     at java.util.regex.Pattern$BranchConn.match(Pattern.java:4568)     at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777)     at java.util.regex.Pattern$Branch.match(Pattern.java:4604)     at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658)     at java.util.regex.Pattern$Loop.match(Pattern.java:4785)     at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) ``` ","false","bug"
"fix: can't resolve the git repository path provided by the plugin","If the contextPath is not equals to `/`, gitRepositoryPath contains the contextPath + `/git`.  Therefore, gitbucket can not resolve the git repository path provided by the plugin.  For example, you can not clone the snippets repository of gist-plugin.  To fix this, also deletes contextPath from requestURI. ","true","bug"
"add some API. required by Jenkins GitHub Branch Source plugin","By this PR, GitBucket can get more API compatibility with GitHub. These are enough APIs for Jenkins GitHub Branch Source plugin.  If this PR and other my PRs are merged, we can use Jenkins CI by only write the ""Jenkinsfile"". There is no need to configure Jenkins job GUI. Job configuration is required only once per user/organization.  My changes for using Jenkins plugin are divided to three PR. 1. add some APIs (this PR) 2. allow Basic Auth in API (#1247) 3. Jenkins plugin's change (create PR soon in Jenkins plugin's repository) ","true","feature"
"Add Basic Authentication support for API access","This PR is to accept Basic Auth in API access.  Some client (includes Jenkins GitHub Organization Folder plugin, GitHub Branch Source plugin) access API with Basic Auth.   Before: We can't use such client with GitBucket.  After merged: We can use more client with GitBucket! ","true","feature"
"cannot see the blame","## Issue  **Impacted version**: 4.21  **Problem description**: - **blame** button does not work.  - it works before we updated that 3.8 to 4.21  thank you ","false",
"Display plugin version in the database at [Plugins] page","Display the current migrated version if migration is failing as below: ![plugin-version](https://cloud.githubusercontent.com/assets/1094760/16972659/3f6857b2-4e68-11e6-9f09-6c309a12347a.png) ","false","improvement"
"timeout on pull request API call","## Issue  **Impacted version**: 3.11  **Deployment mode**: standalone app  **Problem description**: While trying to use the [github pull request builder](https://github.com/gitbucket/gitbucket/wiki/Setup-Jenkins-GitHub-pull-request-builder-plugin), my jenkins started to show errors   ``` org.jenkinsci.plugins.ghprb.GhprbTrigger.run() failed for hudson.model.FreeStyleProject@5e3bef60[ARCHITECTURE/test-gitbucket-jenkins-jira] java.lang.Error: org.kohsuke.github.HttpException: Server returned HTTP response code: -1, message: 'null' for URL: http://XXXXXXXXXXXXXXXXXXXXX/api/v3/repos/awxgx/jira-git-demo-01/pulls?state=open     at org.kohsuke.github.Requester$PagingIterator.fetch(Requester.java:425)     at org.kohsuke.github.Requester$PagingIterator.hasNext(Requester.java:392)     at org.kohsuke.github.PagedIterator.fetch(PagedIterator.java:44)     at org.kohsuke.github.PagedIterator.hasNext(PagedIterator.java:32)     at org.kohsuke.github.PagedIterable.asList(PagedIterable.java:42)     at org.kohsuke.github.GHRepository.getPullRequests(GHRepository.java:627)     at org.jenkinsci.plugins.ghprb.GhprbRepository.check(GhprbRepository.java:138)     at org.jenkinsci.plugins.ghprb.GhprbTrigger.run(GhprbTrigger.java:291)     at hudson.triggers.Trigger.checkTriggers(Trigger.java:273)     at hudson.triggers.Trigger$Cron.doRun(Trigger.java:222)     at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:50)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: org.kohsuke.github.HttpException: Server returned HTTP response code: -1, message: 'null' for URL: http://XXXXXXXXXXXXXXXXXXXXX/api/v3/repos/awxgx/jira-git-demo-01/pulls?state=open     at org.kohsuke.github.Requester.parse(Requester.java:508)     at org.kohsuke.github.Requester.access$200(Requester.java:69)     at org.kohsuke.github.Requester$PagingIterator.fetch(Requester.java:416)     ... 17 more Caused by: java.net.SocketTimeoutException: Read timed out     at java.net.SocketInputStream.socketRead0(Native Method)     at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)     at java.net.SocketInputStream.read(SocketInputStream.java:170)     at java.net.SocketInputStream.read(SocketInputStream.java:141)     at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)     at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)     at java.io.BufferedInputStream.read(BufferedInputStream.java:345)     at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)     at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)     at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)     at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)     at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)     at org.kohsuke.github.Requester.parse(Requester.java:486)     ... 19 more ```  I manually tried to call the API with curl without any further success while the API is answering well for example for the `user` endpoint  ![image](https://cloud.githubusercontent.com/assets/1119660/16915113/427b2c0e-4cf6-11e6-95bc-bac2a7a5ba4b.png) ","false","help wanted,improvement"
"Unable to clone repository from gitbucket using git clone ssh://... :   Unable to negotiate key exchange for server host key algorithms","## Issue  I do not know enough about Apache MINA/SSHD or gitbucket's use of it to know whether that's the source of the problem, but I have seen reference to similar issues (e.g., [here](http://stackoverflow.com/questions/33690689/no-matching-host-key-type-found-apache-mina-sftp-server)) in other applications. That stackoverflow link might be a clue to solving this in gitbucket?  **Impacted version**:  I am reporting this issue as reflected in gitbucket version 4.2.1, but I believe it will impact all previous versions of gitbucket since it relates to openssh.  **Deployment mode**:  I run gitbucket.war standalone (basically `java -jar gitbucket.war`)  **Problem description**: The problem manifests as errors when attempting to clone a git repository hosted by gitbucket using ssh. The clone fails with an error regarding the host key exchange.  The ssh server inside gitbucket appears to only offer `ssh-dss` as a host key exchange algorithm, which has been deprecated in [OpenSSH 7.0](http://www.openssh.com/legacy.html): `OpenSSH 7.0 and greater similarly disables the ssh-dss (DSA) public key algorithm. It too is weak and we recommend against its use.`   When attempting to clone a git repository from gitbucket using ssh, I am given the following error:  ``` error fetching latest change from git repo at `ssh://MYUSER@MYHOST:29418/MYUSER/MYPROJECT.git': Unable to negotiate with MYIP port 29418: no matching host key type found. Their offer: ssh-dss fatal: Could not read from remote repository. ```  On MYHOST one can verify on the command line that the ssh server is only offering `ssh-dss`:  ``` MYUSER@MYHOST:~$ ssh -p 29418 localhost Unable to negotiate with 127.0.0.1 port 29418: no matching host key type found. Their offer: ssh-dss ```  The syslog on MYHOST similarly reflects this issue:  ``` Jul 14 00:09:40 MYHOST java[108375]: WARNING: Exception caught Jul 14 00:09:40 MYHOST java[108375]: java.lang.IllegalStateException: Unable to negotiate key exchange for server host key algorithms (client: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa / server: ssh-dss) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSession.negotiate(AbstractSession.java:1279) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSession.handleKexInit(AbstractSession.java:452) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSession.doHandleMessage(AbstractSession.java:386) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSession.handleMessage(AbstractSession.java:349) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSession.decode(AbstractSession.java:848) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSession.messageReceived(AbstractSession.java:331) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.session.AbstractSessionIoHandler.messageReceived(AbstractSessionIoHandler.java:57) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.io.nio2.Nio2Session$2.onCompleted(Nio2Session.java:220) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.io.nio2.Nio2Session$2.onCompleted(Nio2Session.java:212) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.io.nio2.Nio2CompletionHandler$1.run(Nio2CompletionHandler.java:34) Jul 14 00:09:40 MYHOST java[108375]: #011at java.security.AccessController.doPrivileged(Native Method) Jul 14 00:09:40 MYHOST java[108375]: #011at org.apache.sshd.common.io.nio2.Nio2CompletionHandler.completed(Nio2CompletionHandler.java:31) Jul 14 00:09:40 MYHOST java[108375]: #011at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126) Jul 14 00:09:40 MYHOST java[108375]: #011at sun.nio.ch.Invoker$2.run(Invoker.java:218) Jul 14 00:09:40 MYHOST java[108375]: #011at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112) Jul 14 00:09:40 MYHOST java[108375]: #011at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) Jul 14 00:09:40 MYHOST java[108375]: #011at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) Jul 14 00:09:40 MYHOST java[108375]: #011at java.lang.Thread.run(Thread.java:745) ```  I have tried running gitbucket both with openjdk-8 and with Oracle jdk-8, and the same issue arises in both. I observe this error from a third-party build tool that attempts to clone a repository from gitbucket; because of this I cannot use workarounds suggested by OpenSSH's legacy web site such as changing $HOME/.ssh/config on the client side. This would be an insecure workaround in any case. ","false",
"Branch protection returns 404 error","## Issue  **Impacted version**: 4.21  **Deployment mode**: on Apache Tomcat/8.0.33  **Problem description**: - Branch protection pull down returns 404 error, when branch name contains ""/"". - Select a branch whose name contains ""/"" from the pull down list of branch names in the branch protection page, and error happens. ","false","bug"
"Add new extension point to add completion proposals in textarea",,"false","feature"
"Add new extension point to add text decorators","For example, we can add emoji support as plugin using this extension point. ","false","feature"
"Theme optimization for mobile clients","Starting with the change to AdminLTE in 4.2 and browsing GitBucket with a mobile client has become quite a chore. Navigating to specific pages (e.g. the issues page of a project) is not easily possible anymore. The current side menu is not available on mobile devices and I see no way of opening it manually. Additionally the top menu is not fully responsive even tough Bootstrap itself allows for this. This results in some of the displayed main content being hidden by the menu.  While browsing and managing projects is presumably being done from a desktop pc/laptop most often it would nevertheless be very nice to be able to browse projects on mobile clients such as smartphones properly. ","false","improvement"
"New extension point to supply assets by plugin",,"false","feature"
"Fix some layout CSS","This PR fixes two issues in the Gitbucket's CSS. - The first one fixes the CSS for some divs (comments) floating outside the content layout.      Example:   ![image](https://cloud.githubusercontent.com/assets/137572/16693773/3452f300-450d-11e6-9eb5-036b89acdd0d.png)      After the fix:   ![image](https://cloud.githubusercontent.com/assets/137572/16693831/7391ef12-450d-11e6-86c8-03bcabab8194.png) - The second fixes the CSS of the check-conflict box.      Example:   ![image](https://cloud.githubusercontent.com/assets/137572/16693918/e435ca04-450d-11e6-9e37-762739af7790.png)      After the fix:   ![image](https://cloud.githubusercontent.com/assets/137572/16693935/f9817778-450d-11e6-8f56-a09756a6136b.png) ","true","bug"
"Fix plugin versions in installed plugins page","Solidbase migration requires ascending order of versions. I fix this issue with a workaround because many existing plugins have descending order. ","true","bug"
"Span with "".pull-right"" class displaying quite strange","### Before submitting an issue to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] searched for similar already existing issue - [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)  ## Issue  **Impacted version**: 4.2  **Deployment mode**: standalone app (java -jar gitbucket.war)  **Problem description**: First screenshot display the problem: ![screenshot_1](https://cloud.githubusercontent.com/assets/1185266/16580987/f70a84b8-42c8-11e6-8e06-53561554bb8e.png) As you can see, the label with branches count slid down. I enable some CSS ""fixes"" (screenshot 2): ![screenshot_2](https://cloud.githubusercontent.com/assets/1185266/16581041/4eac1484-42c9-11e6-82ef-ea441c652b3b.png) P.S. Then, I open site with that template and sow, some styles for .pull-righs are missed (in red rectangle). ![screenshot_3](https://cloud.githubusercontent.com/assets/1185266/16581085/7806b10e-42c9-11e6-9658-42a9f6d63d0b.png) So. is it normal or just mistake? ","false","bug"
"Inconsistency: Sometimes, the login id shows up and sometimes the user name","## Issue  **Impacted version**: 4.2.0  **Deployment mode**: Stand alone app running behind a apache httpd  **Problem description**:  Sometimes, the user name shows up and at other times, the login name shows up.  Click on the upper left -> a list of activities shows up, the login id is mentioned here:  ![image](https://cloud.githubusercontent.com/assets/1677414/16567293/2da94038-421d-11e6-94fd-1496d6b92e2d.png)  For most of the other lists, the user name is shown:  ![image](https://cloud.githubusercontent.com/assets/1677414/16567312/706100dc-421d-11e6-820b-37376f73bf71.png)  I do prefer the user name. ","false","question"
"Sidebar not shown in account page","**Impacted version**: 4.2.0/4.2.1 **Deployment mode**: standalone app and deployed tomcat8 **Problem description**: sidebar not shown in account page ##   gitbucket/{account} page screenshot here: ![ss-gitbucket](https://cloud.githubusercontent.com/assets/12636866/16561933/c34be9d8-4236-11e6-83f2-391e2e6d6d46.png) ##   and sidebar-menu (Groups) ul tag not closed. https://github.com/gitbucket/gitbucket/blob/master/src/main/twirl/gitbucket/core/account/main.scala.html#L26-L31  ![ss-gitbucket-src](https://cloud.githubusercontent.com/assets/12636866/16562243/7839bee2-4237-11e6-8bff-b319bbe42497.png) ","false","duplicate"
"fix: can't show the user profile when joining any groups","### Before  ![before](https://cloud.githubusercontent.com/assets/1295639/16559964/6e078730-422b-11e6-8c99-d21c4081dfdb.png) ### After  ![after](https://cloud.githubusercontent.com/assets/1295639/16559970/76cf010e-422b-11e6-8c77-e16b90de910a.png) ### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"http://localhost:8080/gitbucket -> HTTP ERROR: 503 just after fresh install","## Issue  **Impacted version**: 4.2.1  **Deployment mode**: standalone app  **Problem description**: - installation, then opening http://localhost:8080/gitbucket shows error ""HTTP ERROR: 503  Problem accessing /gitbucket. Reason:  ``` Service Unavailable ```  Powered by Jetty:// 9.3.z-SNAPSHOT"" - to reproduce install debian8, openjdk-8-jre, download gitbucket.war v4.2.1, run java -jar gitbucket.war, then open browser http://localhost:8080/gitbucket - run log:   $ java -jar gitbucket.war    2016-07-04 12:57:18.660:INFO::main: Logging initialized @117ms   2016-07-04 12:57:18.769:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT   2016-07-04 12:57:19.545:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet   SLF4J: Class path contains multiple SLF4J bindings.   SLF4J: Found binding in [jar:file:/home/user/.gitbucket/tmp/webapp/WEB-INF/lib/slf4j-jdk14-1.7.12.jar!/org/slf4j/impl/StaticLoggerBinder.class]   SLF4J: Found binding in [jar:file:/home/user/.gitbucket/tmp/webapp/WEB-INF/lib/logback-classic-1.1.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]   SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.   SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory]   июл 04, 2016 12:57:19 PM com.zaxxer.hikari.HikariDataSource <init>   INFO: HikariPool-1 - Started.   2016-07-04 12:57:19.926:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@14f232c4{/,file:///home/user/.gitbucket/tmp/webapp/,UNAVAILABLE}{file:/home/user/%d0%97%d0%b0%d0%b3%d1%80%d1%83%d0%b7%d0%ba%d0%b8/gb/gitbucket.war}   org.h2.jdbc.JdbcSQLException: Таблица ""VERSIONS"" не найдена|Table ""VERSIONS"" not found; SQL statement:|SELECT VERSION FROM VERSIONS WHERE MODULE_ID = ? [42102-192]   at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)   at org.h2.message.DbException.get(DbException.java:179)   at org.h2.message.DbException.get(DbException.java:155)   at org.h2.command.Parser.readTableOrView(Parser.java:5388)   at org.h2.command.Parser.readTableFilter(Parser.java:1257)   at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1896)   at org.h2.command.Parser.parseSelectSimple(Parser.java:2044)   at org.h2.command.Parser.parseSelectSub(Parser.java:1890)   at org.h2.command.Parser.parseSelectUnion(Parser.java:1711)   at org.h2.command.Parser.parseSelect(Parser.java:1699)   at org.h2.command.Parser.parsePrepared(Parser.java:445)   at org.h2.command.Parser.parse(Parser.java:317)   at org.h2.command.Parser.parse(Parser.java:289)   at org.h2.command.Parser.prepareCommand(Parser.java:254)   at org.h2.engine.Session.prepareLocal(Session.java:560)   at org.h2.engine.Session.prepareCommand(Session.java:501)   at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)   at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)   at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)   at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:309)   at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)   at io.github.gitbucket.solidbase.migration.MigrationUtils.selectStringFromDatabase(MigrationUtils.java:52)   at io.github.gitbucket.solidbase.manager.JDBCVersionManager.getCurrentVersion(JDBCVersionManager.java:38)   at gitbucket.core.servlet.InitializeListener.gitbucket$core$servlet$InitializeListener$$$anonfun$1(InitializeListener.scala:77)   at gitbucket.core.servlet.InitializeListener.gitbucket$core$servlet$InitializeListener$$$anonfun$1$adapted(InitializeListener.scala:36)   at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)   at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)   at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)   at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)   at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)   at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)   at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)   at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)   at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:36)   at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:837)   at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:533)   at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:810)   at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:345)   at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1404)   at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1366)   at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)   at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:262)   at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:520)   at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)   at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)   at org.eclipse.jetty.server.Server.start(Server.java:411)   at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)   at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)   at org.eclipse.jetty.server.Server.doStart(Server.java:378)   at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)   at JettyLauncher.main(JettyLauncher.java:63)   2016-07-04 12:57:19.936:INFO:oejs.AbstractConnector:main: Started ServerConnector@72ade7e3{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}   2016-07-04 12:57:19.936:INFO:oejs.Server:main: Started @1397ms ","false",
"History view: You can only click at the very right of an entry (for the repo view, it is different/better)","When browsing the content of a repo, you can drill down into a folder or look at the content of a file by clicking anywhere on the files's line:  ![image](https://cloud.githubusercontent.com/assets/1677414/16539384/cf51e63e-4041-11e6-9a6e-d4bef65b69ba.png)  I like this.  For the history view, only the botton on the very right of the line brings you to the diff:  ![image](https://cloud.githubusercontent.com/assets/1677414/16539396/1f32b20a-4042-11e6-9398-ce80d03038e0.png)  Most of the space of the line is kind of wasted. You have to move your mouse all the long way to the right to go to the diff. ","false","improvement"
"4.2 Wiki content overlapped by menu bar","![image](https://cloud.githubusercontent.com/assets/1677414/16539345/6dfc3bd8-4040-11e6-895d-32c493cf77a7.png)  These should read ""Home"" and ""Welcome"". The styling should probably be changed so that there is space of a pixel or two between the menu bar and the content pane. ","false",
"4.2 Contrast between the menu bar to the left and the file content pane to the right probably too high","I know: This is a matter of personal taste. I general, I do like the new ui. Working with it for a couple of minutes, I think the contrast isn't optimal at the moment. It is hard for me to read the content of a file for example, since there are large black areas combined with large white areas:  ![image](https://cloud.githubusercontent.com/assets/1677414/16539314/7c0ad49c-403f-11e6-9788-ed9d72d45c9b.png)  It is even worse when scrolling down. There, the menu is really totally black:  ![image](https://cloud.githubusercontent.com/assets/1677414/16539323/c518a2e0-403f-11e6-9cec-c2c2c284c6e5.png)  As mentioned before: Just my personal taste, please don't feel angry about it. ","false",
"4.2: Database migration seems to fail for non-empty database - Column ""X21.ALLOW_WIKI_EDITING"" not found","I've upgraded from 4.1 to 4.2 and now I'm getting [this error](https://github.com/gitbucket/gitbucket/files/344439/complete.txt):  ``` org.h2.jdbc.JdbcSQLException: Column ""X21.ALLOW_WIKI_EDITING"" not found; SQL statement: CREATE FORCE VIEW PUBLIC._1 AS SELECT     X21.UPDATED_DATE AS X22,     X21.ALLOW_WIKI_EDITING AS X23,     X21.EXTERNAL_ISSUES_URL AS X24,     X21.PARENT_REPOSITORY_NAME AS X25,     X21.EXTERNAL_WIKI_URL AS X26,     X21.DEFAULT_BRANCH AS X27,     X21.DESCRIPTION AS X28,     X21.ORIGIN_REPOSITORY_NAME AS X29,     X21.ORIGIN_USER_NAME AS X30,     X21.PARENT_USER_NAME AS X31,     X21.PRIVATE AS X32,     X21.REPOSITORY_NAME AS X33,     X21.USER_NAME AS X34,     X21.ENABLE_WIKI AS X35,     X21.ENABLE_ISSUES AS X36,     X21.REGISTERED_DATE AS X37,     X21.LAST_ACTIVITY_DATE AS X38 FROM PUBLIC.REPOSITORY X21 [42122-192]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:179)     at org.h2.message.DbException.get(DbException.java:155)     at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)     at org.h2.expression.Alias.optimize(Alias.java:51)     at org.h2.command.dml.Select.prepare(Select.java:852) ... ```  I've double-checked  using empty databases, i.e.:  ``` rm -rf ~/.gitbucket git checkout 4.1 ./sbt.sh package ./sbt.sh executable java -jar target/executable/gitbucket.war ./sbt.sh clean; rm -rf target; git clean -f git checkout 4.2 ./sbt.sh package ./sbt.sh executable  java -jar target/executable/gitbucket.war ```  For these, it works without an issue. So the migration seems to fail only when the database actually contains data. ","false","bug"
"4.2: The entries within the left menu are hard to read","![image](https://cloud.githubusercontent.com/assets/1677414/16538778/849e05e0-402e-11e6-9eea-f315cafebbae.png)  I checked out 4.2, created an executable war and fired it up. To me, the menu to the left is pretty hard to read. ","false",
"4.2: Crash after login","## Issue  **Impacted version**: 4.2.0  **Deployment mode**: _standalone app_  **Problem description**: I have just updated to the latest version. After the login I get the following error:  ``` org.h2.jdbc.JdbcSQLException: Column ""X21.ALLOW_WIKI_EDITING"" not found; SQL statement: CREATE FORCE VIEW PUBLIC._3 AS SELECT     X21.UPDATED_DATE AS X22,     X21.ALLOW_WIKI_EDITING AS X23,     X21.EXTERNAL_ISSUES_URL AS X24,     X21.PARENT_REPOSITORY_NAME AS X25,     X21.EXTERNAL_WIKI_URL AS X26,     X21.DEFAULT_BRANCH AS X27,     X21.DESCRIPTION AS X28,     X21.ORIGIN_REPOSITORY_NAME AS X29,     X21.ORIGIN_USER_NAME AS X30,     X21.PARENT_USER_NAME AS X31,     X21.PRIVATE AS X32,     X21.REPOSITORY_NAME AS X33,     X21.USER_NAME AS X34,     X21.ENABLE_WIKI AS X35,     X21.ENABLE_ISSUES AS X36,     X21.REGISTERED_DATE AS X37,     X21.LAST_ACTIVITY_DATE AS X38 FROM PUBLIC.REPOSITORY X21 [42122-192]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:179)     at org.h2.message.DbException.get(DbException.java:155)     at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)     at org.h2.expression.Alias.optimize(Alias.java:51)     at org.h2.command.dml.Select.prepare(Select.java:852)     at org.h2.command.Parser.prepare(Parser.java:239)     at org.h2.engine.Session.prepare(Session.java:525)     at org.h2.engine.Session.prepare(Session.java:512)     at org.h2.table.TableView.compileViewQuery(TableView.java:105)     at org.h2.table.TableView.initColumnsAndTables(TableView.java:156)     at org.h2.table.TableView.init(TableView.java:98)     at org.h2.table.TableView.<init>(TableView.java:65)     at org.h2.table.TableView.createTempView(TableView.java:534)     at org.h2.command.Parser.readTableFilter(Parser.java:1192)     at org.h2.command.Parser.readJoin(Parser.java:1549)     at org.h2.command.Parser.parseJoinTableFilter(Parser.java:1941)     at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1897)     at org.h2.command.Parser.parseSelectSimple(Parser.java:2044)     at org.h2.command.Parser.parseSelectSub(Parser.java:1890)     at org.h2.command.Parser.parseSelectUnion(Parser.java:1711)     at org.h2.command.Parser.readTableFilter(Parser.java:1181)     at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1896)     at org.h2.command.Parser.parseSelectSimple(Parser.java:2044)     at org.h2.command.Parser.parseSelectSub(Parser.java:1890)     at org.h2.command.Parser.parseSelectUnion(Parser.java:1711)     at org.h2.command.Parser.parseSelect(Parser.java:1699)     at org.h2.command.Parser.parsePrepared(Parser.java:445)     at org.h2.command.Parser.parse(Parser.java:317)     at org.h2.command.Parser.parse(Parser.java:289)     at org.h2.command.Parser.prepareCommand(Parser.java:254)     at org.h2.engine.Session.prepareLocal(Session.java:560)     at org.h2.engine.Session.prepareCommand(Session.java:501)     at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)     at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)     at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:679)     at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:323)     at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)     at scala.slick.jdbc.JdbcBackend$SessionDef$class.prepareStatement(JdbcBackend.scala:152)     at scala.slick.jdbc.JdbcBackend$BaseSession.prepareStatement(JdbcBackend.scala:389)     at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:32)     at scala.slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)     at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:64)     at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.build(Invoker.scala:47)     at scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.list(Invoker.scala:39)     at scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:16)     at gitbucket.core.service.ActivityService$class.getRecentActivitiesByOwners(ActivityService.scala:47)     at gitbucket.core.controller.IndexController.getRecentActivitiesByOwners(IndexController.scala:13)     at gitbucket.core.controller.IndexControllerBase$class.gitbucket$core$controller$IndexControllerBase$class$$$anonfun$3(IndexController.scala:52)     at org.scalatra.ScalatraBase$class.org$scalatra ``` ","false",
"handle empty password for JSON webhook tests, fixes #1168","### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are ~~passing~~, some are failing due to missing postgre installation - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Last correction didn't included the fix for the JSON mime type ","true",
"Upgrade 3.8 -> 3.14 -> 4.1: Dreaded Plugin Issue","## Issue  **Impacted version**: 3.8 Trying to get to 4.1  **Deployment mode**: Standalone  **Problem description**:  Trying to get from 3.8 to 4.1 by deploying new. war files in a standalone environment.   First try says, ""You have to go through 3.14 first"" - I guess to do some kind of DB table updates?  OK, but trying that gives me the dreaded:     ERROR gitbucket.core.plugin.PluginRegistry - Error during plugin initialization  And a very noisy Java traceback.  What am I missing here? ","false",
"XSS pentest result a 500 Internal server error","## Issue  **Impacted version**: 4.0.0  **Deployment mode**: *explain here how you use gitbucket : standalone app  **Problem description**: The issue found when ran a pentest using Arachni  Arachni was running XSS pen testing as against the gitbucket that resulted in an HTTP/1.1 500 Internal Server Error being generated. This could be used as a DDOS attack.  Affected page is http://localhost:8080/assets/jetty-dir.css.   This issue can be reproduce using any web client tool. It printed out the whole stack with 500 internal server error. This response is really expensive, it can be used as DDOS attack.  GET /assets/jetty-dir.css HTTP/1.1 Host: localhost:8080 Accept-Encoding: gzip, deflate User-Agent: Arachni/v1.4 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,_/_;q=0.8</textarea><some_dangerous_input_6d021dd51c85f09cd8d6e17b03c54d43/><!<textarea> Accept-Language: en-US,en;q=0.8,he;q=0.6 Cookie: JSESSIONID=1mdm4bv95om6v19t03xc7c3vhv  ![image](https://cloud.githubusercontent.com/assets/4400701/16324753/36584346-396c-11e6-8fc2-d9cad3d92617.png) ","false","waiting 4 user feedback"
"Bump patch version of Scalatra and some libs","This pull request bumps patch version of the following libraries. - Scalatra - jgit - logback - commons-compress - h2 - mysql-connector-java - HikariCP - tika-core - akka-actor ### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"Add link to gitbucket-network-plugin",,"true",
"Data import cause org.scalatra.servlet.SizeConstraintExceededException","I planned to switch database from H2 to MySQL 5.7. When I try to import data, caught org.scalatra.servlet.SizeConstraintExceededException. Export data file is 3,502,645 bytes length from H2 database on GitBucket 4.0 Data export xml format.   Stacktrace is [stacktrace.txt](https://github.com/gitbucket/gitbucket/files/310087/stacktrace.txt).   I use tomcat7 with apache2.4.7, mod_proxy_ajp.  As my concern, this problem caused by Servlet 3.0 multipart-config setting (cf. http://stackoverflow.com/questions/28564683/how-to-limit-uploaded-filesize-in-tomcat-servlet )  is missing or wrong on my environment.    Where to put multipart-config element ? ","false",
"Add/fix tooltips!","Please add tooltips in the GitBucket UI. Just too many actions/links don't have tooltips at all.  Those that have, are also rendered with inconsistent styles.  Thank you. ","false","improvement"
"Bug: Can't set Group Manager in 4.1","Hi,  In 4.1 (deployed in Tomcat 8 + Java 8 + H2) can't set the Group Manager. - I can add new users or remove them from the group - Toggling the ""Manager"" button and clicking ""Update Group"" will persist the changes except this ""manager"" information: all groups will be displayed only with members, no managers. - Analyzing the DB directly, for some of the groups and users, there will be a Manager flag set for some of the groups (not really related to what and administrator tried to click in the admin UI).  IMHO this bug is critical.  Thanks in advance. ","false","bug"
"Test SMTP Settings","Please add a ""Test SMTP Settings"" button that would send a Test email to the actual user, in order to check if everything is correctly configured.  Thank you. ","false","feature"
"H2 Console should be opened in a new Tab/Window","The H2 Console should be opened in a new Tab/Window (so `<a target=""_blank"" ...` ) because the H2 Console is a separate ""application"" than GitBucket itself (it does not and can't have the links and branding of GitBucket). ","false","improvement"
"Gravatar icons should be deactivated by default.","Since GitBucket ist for small teams and more towards intranet installations, IMHO the Gravatar icon should be deactivated by default so that unneeded requests are performed.  Thank you. ","false","improvement"
"assignee list cropped","View issue: The assignee list gets cropped according to the page length: ![image](https://cloud.githubusercontent.com/assets/2470016/15815942/64d49a8e-2bd0-11e6-954a-98e81d22c14e.png) ","false","bug"
"Add Garbage Collection option to Repository Settings","Would it be possible to add an aggressive garbage collection option to the repository settings?  I work with some large repositories and they start to slow down after a while if not gc'ed. ","false","feature"
"Default value of pull request title","If the pull request has 1 commit then commit message is displayed as the default value of the pull request title. Otherwise, the default value of the pull request title is generated from the branch name.  ![pull-request-title](https://cloud.githubusercontent.com/assets/1094760/15681782/aa41ad8a-2795-11e6-9a05-d98f48f18157.png) ### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Add a footer","Gitbucket seems to be missing a footer from all pages (with links to help/contact/terms/about) ","false","improvement"
"Add global Help menu item or link.","Please add a global menu item to Gitbucket or a link from all pages to some offline help pages.  Right now there's doesn't sees to be any. Some useful info can be found in the `doc` directory and in the WIKI, but these should be deployed in the WAR.  Thank you. ","false","improvement"
"Update document about schema migration","We must update a developer guide about schema migration because the migration system has been moved to solidbase since GitBucket 4.0. https://github.com/gitbucket/gitbucket/blob/master/doc/auto_update.md ","false","task"
"Put crucial first time login info in the readme...","Great tool, thanks for creating it!  In order to spare the first time user a trip to the FAQ, you could add this tiny piece of crucial info right beneath the installation instruction:  > What's default root username and password? > root / root ","false",
"Show the number of commits on the branch.","## Issue  **Impacted version**: 4.0  **Deployment mode**: standalone  **Problem description**: - Show number of commits for the branch when landing on a repo's page for desktop & mobile. - Easy access to the commit history on mobile  See pic for mobile example: ![gitbucket-4 0](https://cloud.githubusercontent.com/assets/3624058/15632947/3f23c236-25a1-11e6-935b-b4b4a27f04c6.PNG) ","false","improvement"
"Got ""HTTP Status 404 - /gitbucket"" when upgrade to 4.0","I got error `HTTP Status 404 - /gitbucket` when upgrade to 4.0  ![gitbucket error](https://cloud.githubusercontent.com/assets/4495160/15626724/d7725a80-24f6-11e6-8855-b598b5aedeb6.PNG) ","false","question"
"Attachment link with different domains","## Attachment link  **Impacted version**: 4.0.0  **Deployment mode**: _standalone app_  I have deployed GitBucket in a server and I can access by two ways: - http://servername.domain.com:8080 - http://servername.intranet.domain:8080  When accessing from itnranet and attaching a new file, it generates a link like:  _http://servername.intranet.domain:8080/TestGroup/TestProject/_attached/1464264441738jaGNyDaafc_ The problem is that now, when I enter from the other domain, the link of the file is still the same, instead of _http://servername.domain.com:8080/TestGroup/TestProject/_attached/1464264441738jaGNyDaafc_, so the file (image in this case) is not showing. It requires to log in _servername.intranet.domain_ too.  Hope it helps, and thanks! ","false",
"Add support for proxy setting","I would like to use GitBucket properly behind a proxy server.  ``` export ""JAVA_TOOL_OPTIONS=-Dhttp.proxyHost=XXX.XXX.XXX -Dhttp.proxyPort=nnnn -Dhttps.proxyHost=XXX.XXX.XXX.XXX -Dhttps.proxyPort=nnn -Dhttp.nonProxyHosts=XXX.XXX.*"" ```  When using the HTTPClient builder use the useSystemProperties() method to enable the standard JVM -D proxy parameters. ","true","improvement"
"allow collaborators to administrate projects","## Issue  **Impacted version**: 3.X, 4.X  **Deployment mode**: not relevant  **Problem description**: I would like to be able to define project collaborators as being administrators for their project so that: - they can add and remove other collaborators - they can define commit rules & protect branches - they can, as administrator, bypass the above protection rules on purpose - the real platform administrator do not have to do such tasks for each project  Something simple like the following should be enough ![image](https://cloud.githubusercontent.com/assets/1119660/15532441/255fb330-2260-11e6-807b-a822d0c1d737.png) ","false",
"Enable request log in gitbucket","## How to enable jetty request log in gitbucket  **Impacted version**: 4.0.0  **Deployment mode**: _standalone (java -jar gitbucket.war)_  **Problem description**: As per issue #1109 , I created `~/Library/Java/Extensions/logback-test.xml`, in my Java classpath with the following content  ``` <?xml version=""1.0"" encoding=""UTF-8""?> <configuration debug=""false"">   <appender name=""STDOUT"" class=""ch.qos.logback.core.ConsoleAppender"">     <encoder>       <pattern>%h %l %u %user %date ""%r"" %s %b</pattern>     </encoder>   </appender>    <appender name=""FILE"" class=""ch.qos.logback.core.FileAppender"">     <file>/var/log/jetty/gitbucket.log</file>     <encoder>       <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>     </encoder>   </appender>   <root level=""INFO"">     <appender-ref ref=""FILE"" />   </root>    <logger name=""com.gitbucket"" level=""${gitbucket.logging.level:-INFO}""/> </configuration> ```  There is a log file at `/var/log/jetty/gitbucket.log`, but no request recorded. Only this  ``` 14:32:22.044 [main] INFO  o.e.jetty.server.ServerConnector - Started ServerConnector@67e13bd0{HTTP/1.1,[http/1.1]}{0.0.0.0:8080} 14:32:22.045 [main] INFO  org.eclipse.jetty.server.Server - Started @5124ms ```  I have also tried creating `src/main/webapp/jetty-logging.xml` with the the following contents  ``` <Configure id=""Server"" class=""org.eclipse.jetty.server.Server"">   <Set name=""RequestLog"">     <New id=""RequestLog"" class=""org.eclipse.jetty.server.AsyncNCSARequestLog"">       <Set name=""filename"">/var/log/jetty/yyyy_mm_dd.request.log</Set>       <Set name=""append"">true</Set>       <Set name=""extended"">false</Set>       <Set name=""LogTimeZone"">GMT</Set>     </New>   </Set> </Configure> ```  No log file produced.   Can anyone advise how can I enable request log for Jetty/gitbucket? ","false","question"
"remove -XX:MaxPermSize from java option","``` Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0 ``` ","true",
"fix jrebel integration","now Jrebel dose not work... ","true",
"fix #1192 Cannot disable option ""Require status checks to pass before…","fix #1192. ui improvement. 1. When status check not found, ""Require status checks .."" checkbox is disabled    ![when status check not found](https://cloud.githubusercontent.com/assets/18655/15463014/7eeb0da6-2101-11e6-816d-8edc5578e6a7.png) 2. When status check not selected and ""Require status checks .."" checked, submit button is disabled  ![when status check not selected](https://cloud.githubusercontent.com/assets/18655/15463018/80b2b238-2101-11e6-8bef-e62153a29cf4.png) 3. When status check selected and ""Require status checks .."" checked, submit button is enabled     ![selected](https://cloud.githubusercontent.com/assets/18655/15463020/82570d78-2101-11e6-9eff-a810e0948520.png) ","true","improvement"
"Fix source display on mobile devices","The raw/mobile/history buttons used to incorrectly overflow on mobile devices, obscuring the entire (!) source view. ","true","improvement"
"Next pages not found on wiki .","## Issue  **Impacted version**: 4.0  **Problem description**: - _explain how to reproduce_   1. Search this repository -> View Search Result   2. change tab ""Wiki""   3. click other pages link   4. Page Not found  - type parameter is code ""search?q=&type=**code**&page=2""   ![default](https://cloud.githubusercontent.com/assets/6275967/15418551/12c2692a-1e9b-11e6-8406-1a551ba69626.PNG)   ![2](https://cloud.githubusercontent.com/assets/6275967/15418553/16973f44-1e9b-11e6-8adc-f8f3dd8afa42.PNG) ","false","bug"
"Commit and Pull Request date not using CommitDate field","## Pull-Request and Commit Date is wrong  **Impacted version**: 4.0.0  **Deployment mode**: _standalone_ and _jetty runner on Windows_  **Problem description**: - When I check the list of pull-request and commits, it uses the date from the original `AuthorDate`, instead of using the updated `CommitDate`. For example, this PR/commit was initially sent yesterday, and updated today. But gitbucket shows the pull-request is last updated yesterday  ![image](https://cloud.githubusercontent.com/assets/760008/15355559/036a176e-1d26-11e6-810d-dea02e0cc808.png)  This is from `git log --format=fuller`:  ``` commit f5f5f9755eb8252049c702a41c9845d0ecff002b Author:     Estevez Ben Lajamin <xxx@gmail.com> AuthorDate: Tue May 17 18:24:12 2016 +0800 Commit:     Estevez Ben Lajamin <xxx@gmail.com> CommitDate: Wed May 18 11:18:41 2016 +0800      Refactoring: Remove duplicate library ```  Instead of using the **18 May** date, GitBucket is using the _17 May_ date.   Please can we have GitBucket to always use the `CommitDate` instead of `AuthorDate`? ","false","bug"
"Fix a missing ctype from test hook","Fix a missing ctype from Test Hook  Test Hook returns an error. Because ctype is missing from the request.  ``` java.util.NoSuchElementException: key not found: ctype     at scala.collection.MapLike$class.default(MapLike.scala:228)     at org.scalatra.ScalatraParams.default(ScalatraParams.scala:5)     at scala.collection.MapLike$class.apply(MapLike.scala:141)     at org.scalatra.ScalatraParams.apply(ScalatraParams.scala:5)     at org.scalatra.ScalatraBase$class.params(ScalatraBase.scala:818)     at gitbucket.core.controller.ControllerBase.params(ControllerBase.scala:27)     at gitbucket.core.controller.RepositorySettingsControllerBase$class.gitbucket$core$controller$RepositorySettingsControllerBase$class$$$anonfun$39(RepositorySettingsController.scala:228)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:24)     at gitbucket.core.controller.RepositorySettingsControllerBase$class.gitbucket$core$controller$RepositorySettingsControllerBase$class$$$anonfun$37(RepositorySettingsController.scala:218)     at gitbucket.core.util.OwnerAuthenticator$class.gitbucket$core$util$OwnerAuthenticator$class$$$anonfun$7(Authenticator.scala:41)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.OwnerAuthenticator$class.gitbucket$core$util$OwnerAuthenticator$class$$$anonfun$6(Authenticator.scala:39)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:12)     at gitbucket.core.util.OwnerAuthenticator$class.authenticate(Authenticator.scala:38)     at gitbucket.core.util.OwnerAuthenticator$class.ownerOnly(Authenticator.scala:33)     at gitbucket.core.controller.RepositorySettingsController.ownerOnly(RepositorySettingsController.scala:21)     at gitbucket.core.controller.RepositorySettingsControllerBase$class.gitbucket$core$controller$RepositorySettingsControllerBase$class$$$anonfun$36(RepositorySettingsController.scala:215)     at gitbucket.core.controller.ControllerBase.gitbucket$core$controller$ControllerBase$$$anonfun$5(ControllerBase.scala:107) <snip> ``` ","true","bug"
"specify port for a standalone app","**Impacted version**: 4.0  **Deployment mode**: as a standalone app with `java -jar gitbucket.war`, it emits the following error message:  ``` java 11:55:22.286 [main] INFO  o.quartz.impl.DirectSchedulerFactory - Quartz scheduler 'QuartzScheduler~job 11:55:22.286 [main] INFO  o.quartz.impl.DirectSchedulerFactory - Quartz scheduler version: 2.2.1 11:55:22.287 [main] INFO  org.quartz.core.QuartzScheduler - Scheduler QuartzScheduler~job_$_job started. [INFO] [05/16/2016 11:55:22.291] [main] [[QuartzScheduler~job]] Setting up scheduled job 'Daily', with 'com.typesafe.akka.extension.quartz.QuartzCronSchedule@79a1728c' 11:55:22.301 [main] INFO  o.scalatra.servlet.ScalatraListener - The cycle class name from the config: ScalatraBootstrap 11:55:22.304 [main] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap 2016-05-16 11:55:22.769:INFO:oejsh.ContextHandler:main: Started o.e.j.w.WebAppContext@a0db585{/,file:///home/guest/.gitbucket/tmp/webapp/,AVAILABLE}{file:/home/guest/gitbucket/gitbucket.war} Exception in thread ""main"" java.net.BindException: Address already in use     at sun.nio.ch.Net.bind0(Native Method)     at sun.nio.ch.Net.bind(Net.java:433)     at sun.nio.ch.Net.bind(Net.java:425)     at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)     at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)     at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:326)     at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)     at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:244)     at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)     at org.eclipse.jetty.server.Server.doStart(Server.java:384)     at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)     at JettyLauncher.main(JettyLauncher.java:64) ```  Specifying `-Djetty.port=xxx` doesn't work. Alas, I don't know whether configuring gitbucket.conf works. As of `netstat -tlnp`, I see port 8080 has been used  by another Tomcat app. How can I specify the port? ","false",
"Cannot disable option ""Require status checks to pass before merging""","## Problem with protected branch  **Impacted version**: 4.0.0  **Deployment mode**: _jetty-runner on Windows_  **Problem description**: - Enable branch protection for `develop` - push to the branch will fail  ``` $ git push origin develop  Counting objects: 5, done. Delta compression using up to 8 threads. Compressing objects: 100% (4/4), done. Writing objects: 100% (5/5), 532 bytes | 0 bytes/s, done. Total 5 (delta 4), reused 1 (delta 1) remote: Resolving deltas: 100% (4/4) To ssh://hanxue@192.168.1.19:29418/hanxue/repo.git  ! [remote rejected] develop -> develop (Cannot force-push to a protected branch) error: failed to push some refs to 'ssh://hanxue@192.168.1.19:29418/hanxue/repo.git' ``` - At [http://192.168.1.19:8080/hanxue/repo/settings/branches/develop](http://192.168.1.19:8080/hanxue/repo/settings/branches/develop), disable the option `http://192.168.1.19:8080/hanxue/vms/settings/branches/develop`  ![image](https://cloud.githubusercontent.com/assets/760008/15284905/d9f9e1de-1b86-11e6-8966-cc76da8925f9.png) - Reload the branch settings again, the option `Require status checks to pass before merging` is sitll selected  ![image](https://cloud.githubusercontent.com/assets/760008/15285379/4e707378-1b89-11e6-8b8c-c8a18c94f1d0.png) ","false","improvement"
"Due Date Calendar broken","Impacted version: 4.0.0  The Milestones Due Date Calendar is broken. By clicking on the date input field of Javascript Calendar does not open fully. It is not possible to select a date.  Tested with: Chrome and Edge ","false","bug"
"Fix style for dropdown-menu that does not display the lower part.","### Before  ![screenshot-192 168 75 199 2016-05-09 17-40-08](https://cloud.githubusercontent.com/assets/4698834/15143911/17c5957a-16e7-11e6-8b26-5a811f784800.png) ### After  ![screenshot-192 168 75 199 2016-05-10 18-39-36](https://cloud.githubusercontent.com/assets/4698834/15143920/1e1b42a8-16e7-11e6-94a6-bca577d74563.png) ### Before submitting a pull-request to Gitbucket I have first: - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"Add support for MySQL 5.6","I think for alot of us, lack of MySQL 5.6 support is going to prevent us from switching to an external database. MySQL 5.6 is still the most popular version run by most hosting companies, and most MySQL compatible alternatives, such as MariaDB, are only 100% compatible up to the features in MySQL 5.6 at this time.  Would it be a huge undertaking to make GitBucket MySQL 5.6 compatible? ","false",
"Single quotes in issue description displayed as &#39;","## Issue  **Impacted version**: 4.0.0  **Deployment mode**: Tomcat, with an httpd frontend  **Problem description**: When creating / editing issues, I always see single quotes reported as &#39;  ![image](https://cloud.githubusercontent.com/assets/1064664/15076767/880c2b9e-13ab-11e6-8440-e11789f443e1.png) ","false","duplicate"
"can't create view ISSUE_OUTLINE_VIEW when pointing to mysql<5.7.7","## Issue  **Impacted version**: 4.0  **Deployment mode**: docker container  **Problem description**:  #### short version  trying to access a gitbucket 4.0 instance pointing to a galera mysql cluster returns `503` #### long version  I tried to migrate my gitbucket 4.0 installation to a mysql galera database. - exported everything in settings/export to `${FILE}` - created a database:  ``` CREATE DATABASE IF NOT EXISTS gitbucket CHARACTER SET = 'utf8'; GRANT ALL ON gitbucket.* TO 'gitbucket'@'%' IDENTIFIED BY 'secret' ``` - stopped gitbucket - modified `${GITBUCKET_HOME}/database.conf`  ``` db {   url = ""jdbc:mysql://rr.dari.co:3306/gitbucket""   user = ""gitbucket""   password = ""secret"" } ``` - restart gitbucket  In the logs I got a warning about a subquery contained in a from clause:  ``` 2016-05-06 09:29:14.632:INFO::main: Logging initialized @1041ms 2016-05-06 09:29:22.230:INFO:oejs.Server:main: jetty-9.3.z-SNAPSHOT 2016-05-06 09:30:22.322:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/gitbucket/tmp/webapp/WEB-INF/lib/logback-classic-1.1.1.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/gitbucket/tmp/webapp/WEB-INF/lib/slf4j-jdk14-1.7.12.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] 09:30:25.424 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Started. 09:30:26.456 [main] INFO  g.core.servlet.InitializeListener - Start schema update 2016-05-06 09:30:39.518:WARN:oejw.WebAppContext:main: Failed startup of context o.e.j.w.WebAppContext@4a951911{/,file:///gitbucket/tmp/webapp/,STARTING}{file:/opt/gitbucket.war} java.sql.SQLException: View's SELECT contains a subquery in the FROM clause     at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)     at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3878)     at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3814)     at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2478)     at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625)     at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551)     at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)     at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2073)     at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2009)     at com.mysql.jdbc.PreparedStatement.executeLargeUpdate(PreparedStatement.java:5094)     at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1994)     at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)     at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)     at io.github.gitbucket.solidbase.migration.MigrationUtils.updateDatabase(MigrationUtils.java:20)     at io.github.gitbucket.solidbase.migration.SqlMigration.migrate(SqlMigration.java:70)     at io.github.gitbucket.solidbase.migration.SqlMigration.migrate(SqlMigration.java:42)     at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:45)     at io.github.gitbucket.solidbase.Solidbase.migrate(Solidbase.java:29)     at gitbucket.core.servlet.InitializeListener.gitbucket$core$servlet$InitializeListener$$$anonfun$1(InitializeListener.scala:78)     at gitbucket.core.servlet.InitializeListener.gitbucket$core$servlet$InitializeListener$$$anonfun$1$adapted(InitializeListener.scala:36)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:36)     at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)     at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)     at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)     at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)     at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1379)     at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1341)     at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)     at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)     at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:517)     at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)     at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)     at org.eclipse.jetty.server.Server.start(Server.java:405)     at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)     at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)     at org.eclipse.jetty.server.Server.doStart(Server.java:372)     at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)     at JettyLauncher.main(JettyLauncher.java:64) 2016-05-06 09:30:39.614:INFO:oejs.ServerConnector:main: Started ServerConnector@590f4833{HTTP/1.1,[http/1.1]}{0.0.0.0:8080} 2016-05-06 09:30:39.615:INFO:oejs.Server:main: Started @86067ms ```  but accessing the interface give me a `503`:  ``` # curl 172.17.0.10:8080 <html> <head> <meta http-equiv=""Content-Type"" content=""text/html;charset=ISO-8859-1""/> <title>Error 503 </title> </head> <body> <h2>HTTP ERROR: 503</h2> <p>Problem accessing /. Reason: <pre>    Service Unavailable</pre></p> <hr /><a href=""http://eclipse.org/jetty"">Powered by Jetty:// 9.3.z-SNAPSHOT</a><hr/> </body> </html> ``` ","false",
"Tomcat 8 IllegalStateException when using a webhook","gitbucket version: 4.0 tomcat version: 8.0.33 -- pretty much vanilla config just changed ports   Issue: Push webhook to Jenkins 2.0 not functioning.  Potential cause: In catalina log: 05-May-2016 10:23:36.478 INFO [pool-6-thread-1] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.  java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.     at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1325)     at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1313)     at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1178)     at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1139)     at java.security.Provider$Service.getImplClass(Provider.java:1636)     at java.security.Provider$Service.newInstance(Provider.java:1592)     at java.security.KeyFactory.nextSpi(KeyFactory.java:297)     at java.security.KeyFactory.<init>(KeyFactory.java:137)     at java.security.KeyFactory.getInstance(KeyFactory.java:172)     at sun.security.x509.X509Key.buildX509Key(X509Key.java:220)     at sun.security.x509.X509Key.parse(X509Key.java:170)     at sun.security.x509.CertificateX509Key.<init>(CertificateX509Key.java:75)     at sun.security.x509.X509CertInfo.parse(X509CertInfo.java:667)     at sun.security.x509.X509CertInfo.<init>(X509CertInfo.java:167)     at sun.security.x509.X509CertImpl.parse(X509CertImpl.java:1804)     at sun.security.x509.X509CertImpl.<init>(X509CertImpl.java:195)     at sun.security.provider.X509Factory.engineGenerateCertificate(X509Factory.java:100)     at java.security.cert.CertificateFactory.generateCertificate(CertificateFactory.java:339)     at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:755)     at sun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:56)     at sun.security.provider.KeyStoreDelegator.engineLoad(KeyStoreDelegator.java:215)     at sun.security.provider.JavaKeyStore$DualFormatJKS.engineLoad(JavaKeyStore.java:70)     at java.security.KeyStore.load(KeyStore.java:1445)     at sun.security.ssl.TrustManagerFactoryImpl.getCacertsKeyStore(TrustManagerFactoryImpl.java:226)     at sun.security.ssl.TrustManagerFactoryImpl.engineInit(TrustManagerFactoryImpl.java:50)     at javax.net.ssl.TrustManagerFactory.init(TrustManagerFactory.java:250)     at sun.security.ssl.SSLContextImpl.engineInit(SSLContextImpl.java:81)     at javax.net.ssl.SSLContext.init(SSLContext.java:282)     at org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory(SSLSocketFactory.java:172)     at org.apache.http.impl.conn.SchemeRegistryFactory.createDefault(SchemeRegistryFactory.java:49)     at org.apache.http.impl.client.AbstractHttpClient.createClientConnectionManager(AbstractHttpClient.java:306)     at org.apache.http.impl.client.AbstractHttpClient.getConnectionManager(AbstractHttpClient.java:466)     at org.apache.http.impl.client.AbstractHttpClient.createHttpContext(AbstractHttpClient.java:286)     at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:851)     at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:1138)     at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:1076)     at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:1050)     at net.sourceforge.subsonic.service.SettingsService.validateLicense(SettingsService.java:1459)     at net.sourceforge.subsonic.service.SettingsService.access$000(SettingsService.java:75)     at net.sourceforge.subsonic.service.SettingsService$1.run(SettingsService.java:1482)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ","false","question"
"typo: DAT(A)BASE_URL","correct typo in system administration -> system settings -> property ","true","bug"
"Cannot start GitBucket in Tomcat7","## Issue  **Impacted version**: 4.0  **Deployment mode**: Tomcat7 on Synology NAS (armv7l), Java 8 update 77  **Problem description**:   GitBucket deploys normally but then prompt a message saying that GitBucket could not be started. Here is the error log from Tomcat7:    ``` May 04, 2016 7:04:59 PM org.apache.catalina.core.StandardContext listenerStop SEVERE: Exception sending context destroyed event to listener instance of class gitbucket.core.servlet.InitializeListener java.lang.NoClassDefFoundError: Could not initialize class gitbucket.core.servlet.Database$     at gitbucket.core.servlet.InitializeListener.contextDestroyed(InitializeListener.scala:108)     at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:5063)     at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5723)     at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)     at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:160)     at org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1322)     at org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:694)     at org.apache.catalina.manager.HTMLManagerServlet.doPost(HTMLManagerServlet.java:217)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:650)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:213)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:614)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:957)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:620)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745) ``` ","false","question"
"Last modified info in branches view","In the branches view (when you click on ""Branches"" in the sidebar), last modified version is the same in every branch: the latest one. I think this is broken because you want to see the latest version per branch.  This happened to me in previous versions and is still present in the 4.0. ","false","bug"
"temporary directory on separate filesystem","## Issue  **Impacted version**:  3.14  **Deployment mode**: docker container in rancher(cattle) environment, `/gitbucket/` on glusterfs, ssl termination via rancher load balancer (haproxy-sni)  **Problem description**: Whenever I start my server the directory `/gitbucket/tmp` gets deleted and recreated. This takes a long time because `/gitbucket/` is on gluster filesystem (latencies are not optimal)  I tried to mount a local volume on `/gitbucket/tmp/`, but I get this exception  ``` java.lang.IllegalStateException: Failed to delete temp dir /gitbucket/tmp     at org.eclipse.jetty.webapp.WebInfConfiguration.configureTempDirectory(WebInfConfiguration.java:376)     at org.eclipse.jetty.webapp.WebInfConfiguration.resolveTempDirectory(WebInfConfiguration.java:264)     at org.eclipse.jetty.webapp.WebInfConfiguration.preConfigure(WebInfConfiguration.java:69)     at org.eclipse.jetty.webapp.WebAppContext.preConfigure(WebAppContext.java:480)     at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:516)     at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)     at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)     at org.eclipse.jetty.server.Server.start(Server.java:405)     at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)     at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)     at org.eclipse.jetty.server.Server.doStart(Server.java:372)     at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)     at JettyLauncher.main(JettyLauncher.java:64) ```  I think the problem is in `src/main/java/JettyLauncher.java` where the temporary directory gets deleted and recreated, not emptyed:  ``` File tmpDir = new File(getGitBucketHome(), ""tmp""); if(tmpDir.exists()){   deleteDirectory(tmpDir); } tmpDir.mkdirs(); ```  Is it possible to make the location of the temporary directory configurable or, as an alternative, have the temporary directory emptied instead of recreated? ","false","improvement"
"Dashboard impagination problem","After update from 3.13 to 3.14, the main section of the dashboard, News Feed / Pull Requests / Issues, are presented under the left list as in the image below  <img width=""1680"" alt=""screen shot 2016-05-02 at 22 46 24"" src=""https://cloud.githubusercontent.com/assets/1280258/14967524/1e9c6020-10b8-11e6-8b14-f901b56573a5.png""> ","false",
"How to backup the repositories?","Hi,my dear friends,Thank you for your develop such a product.I will use it on my development environment .But i have some questions. 1.How to backup the repositories? ps:copy HOME/.gitbucket directory to the other disk.and deploy the new gitbucket.war(3.6) on tomcat-webapps.When tomcat started,I sign in http://192.168.1.10:8080/gitbucket but i don't look my backup data. 2.https://github.com/gitbucket/gitbucket/releases,gitbucket.war can't download,did you have another resource link. please,Point out my mistakes,thanks! ","false","question"
"Large commit description overflow","**Impacted version**: 3.13  **Problem description**: Large commit descriptions overflow when browsing the files page. It must be because of the new user interface theme. ","false","duplicate,improvement"
"Group hierarchy or bug?","**Impacted version**: 3.13  **Deployment mode**: standalone app on Windows 7  **Problem description**: The group editing screen allows to add another groups as members, even the same group. It doesn't autocomplete, but it allows to write and save.  I wonder whether it's a bug or it's a way of creating hierarchical groups. I think it's a bug because the members of a subgroup can't see the repositories owned by the main group. Anyway, it could be a nice feature.  Hope this helps. ","false","bug"
"Private repository for team?","I'm currently testing Gitbucket 3.13 and I'm having difficulties in understanding how teams actually work. I don't see an option to add team as Collaborators to private repositories, I'm only able to add single members. How can I use teams for that purpose?  Eventually, is there an option to limit access to given Gitbucket instance (and its publicly hosted repositories) only to authenticated users? ","false","question"
"Small Firefox style issues","**Impacted version**: 3.13  **Deployment mode**: standalone app with apache frontend  **Problem description**: - New bootstrap theme looks bad in Firefox, I made the following changes in:  **webapp/assets/common/css/gitbucket.css**  1.- In issues view, col-md-9 + col-md-3 > 100% width, with this CSS looks better  ``` css .main-content > .row {     margin-left: 0;     margin-right: 0; } ```  2.- When view a commit in unified mode, line numers are very wide  ``` css table.inlinediff td.body {     width: 95% !important; }  ``` ","false","improvement"
"Occasionally fail to edit comment","## Dropzone error when editing comment  **Impacted version**: 3.13  **Deployment mode**: Jetty runner on Windows 7  **Problem description**: - Add a comment for existing code/commit - Click on the `edit comment`, change some text and click on either `Update comment` or `Cancel`  The button will have no response. There will be errors shown in the browser's console:  ``` e49433b…:808 Uncaught Error: Invalid dropzone element. Dropzone @ dropzone.js:554 (anonymous function) @ dropzone.js:1681 each @ jquery-1.11.1.js:383 each @ jquery-1.11.1.js:136 jQuery.fn.dropzone @ dropzone.js:1680 (anonymous function) @ e49433b…:793 fire @ jquery-1.11.1.js:3119 fireWith @ jquery-1.11.1.js:3231 ready @ jquery-1.11.1.js:3443 completed @ jquery-1.11.1.js:3474 $('#edit-content-46').next('div')[0]]) ```  This is the AJAX url http://192.168.1.19:8080/hanxue/vms/commit_comments/_data/46?dataType=html&_=1461306217091  This is the response from the AJAX call  ```  <span class=""error-edit-content-46 error""></span>  <div class=""muted attachable"">    <textarea style=""height: 100px;"" id=""edit-content-46"" class=""form-control"">As discussed, delete off the unnecessary code. Avoid commenting out code, otherwise we will end up with a lot of outdated and commented code.   In case we need to restore the deleted line, we can see from git history.   It is ok to add an explanation, for example  `` ` # &lt;!-- ** Save button is remove for demo purpose ** --&gt; `` ``</textarea>    <div class=""clickable"">Attach images or documents by dragging &amp; dropping, or selecting them.</div> </div>  <script> $(function(){   try {     $([$('#edit-content-46').closest('div')[0], $('#edit-content-46').next('div')[0]]).dropzone({       url: 'http://192.168.1.19:8080/upload/file/hanxue/vms',       maxFilesize: 10,       acceptedFiles: 'application/pdf,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.openxmlformats-officedocument.wordprocessingml.document,image/gif,image/jpeg,image/png,text/plain',       dictInvalidFileType: 'Unfortunately, we don\'t support that file type. Try again with a PNG, GIF, JPG, DOCX, PPTX, XLSX, TXT, or PDF.',       previewTemplate: ""<div class=\""dz-preview\"">\n  <div class=\""dz-progress\""><span class=\""dz-upload\"" data-dz-uploadprogress>Uploading your files...</span></div>\n  <div class=\""dz-error-message\""><span data-dz-errormessage></span></div>\n</div>"",       success: function(file, id) {         var attachFile = (file.type.match(/image\/.*/) ? '\n![' + file.name.split('.')[0] : '\n[' + file.name) +           '](http://192.168.1.19:8080/hanxue/vms/_attached/' + id + ')';         $('#edit-content-46').val($('#edit-content-46').val() + attachFile);         $(file.previewElement).prevAll('div.dz-preview').addBack().remove();       }     });   } catch(e) {     if (e.message !== ""Dropzone already attached."") {       throw e;     }   } }); </script>   <div>   <input type=""button"" class=""cancel-comment-46 btn btn-small btn-danger"" value=""Cancel""/>   <input type=""button"" class=""update-comment-46 btn btn-small btn-default pull-right"" value=""Update comment""/> </div> <script> $(function(){   var curriedCallback = function($box) {     return function(data){       $('.update-comment-46, .cancel-comment-46', $box).removeAttr('disabled');       $('.commit-commentContent-46').empty().html(data.content);       prettyPrint();     }   }    $(document).on('click', '.update-comment-46', function(){     $box = $(this).closest('.commit-comment-box');     $('.update-comment-46, .cancel-comment-46', $box).attr('disabled', 'disabled');     $.ajax({       url: 'http://192.168.1.19:8080/hanxue/vms/commit_comments/edit/46',       type: 'POST',       data: {         content : $('#edit-content-46', $box).val()       }     }).done(       curriedCallback($box)     ).fail(function(req) {       $('.update-comment-46, .cancel-comment-46', $box).removeAttr('disabled');       $('.error-edit-content-46', $box).text($.parseJSON(req.responseText).content);     });   });    $(document).on('click', '.cancel-comment-46', function(){     $box = $(this).closest('.box');     $('.update-comment-46, .cancel-comment-46', $box).attr('disabled', 'disabled');     $.get('http://192.168.1.19:8080/hanxue/vms/commit_comments/_data/46', curriedCallback($box));     return false;   }); }); </script> ```  Specifically this line is causing the error  ``` $([$('#edit-content-46').closest('div')[0], $('#edit-content-46').next('div')[0]]).dropzone({ ``` ","false",
"FAIL - Application at context path /gitbucket could not be started","Hi, was wandering to try this app as it seems to like good way to host my private repos however no matter what I do, tomcat fail to start the app.. Im on ubuntu, have tomcat 7 plus java8 installed. I use Tomcat Web Application Manager to deploy the app as that seems to me the easiest way to deploy this.  I would like to also ask if there is any chance to develop or perhaps deploy this version for normal apache server?  ","false","question"
"Browse pull requests","If I'm logged on administrative account i should be able to see all Pull requests made by my team. When I click ""Pull requests"" link on the top of GitBucket page I see only my own pull requests and I'm not able to change or delete the filter field. It's redirecting me back to default filter e.g. ""is:pr is:open author:root"" ","false","help wanted,improvement"
"Unable to clear Issue filters since 3.13","## Unable to clear Issue filters since 3.13  **Impacted version**: 3.13  **Deployment mode**: _standalone_  **Problem description**: - Since the UI refreshment in 3.13, if an issue filter is set, it cannot be cleared. - (freetext search is also missing) ","false","bug,help wanted"
"Github Flavoured Markdown formatting issues on 3.13","## Markdown documents not rendered correctly  **Impacted version**: 3.13  **Deployment mode**: Running on jetty, on Windows 7 ## Problem description:  When the [AirBnB Javascript Guide markdown document](https://github.com/airbnb/javascript/blob/master/README.md) is rendered on GitBucket, I see the following errors: #### 1. `<a></a>` links not rendered correctly.  _Markdown code_:   ``` markdown <a name=""types--primitives""></a><a name=""1.1""></a>   - [1.1](#types--primitives) **Primitives**: ```  _Expected result_:  <a name=""types--primitives""></a><a name=""1.1""></a> - [1.1](#types--primitives) **Primitives**:  _Actual result_:  ![image](https://cloud.githubusercontent.com/assets/760008/14451267/576e1a98-00b8-11e6-8126-830114e5acd2.png) #### 2. Code block after blockquote does not get rendered corrected  _Markdown code_:   `````` markdown     > Why? They allow you to define all the properties of an object in one place.      ```javascript      function getKey(k) {       return `a key named ${k}`;     }     ``` ``````  _Expected result_:   > Why? They allow you to define all the properties of an object in one place.  ``` javascript  function getKey(k) {   return `a key named ${k}`; } ```  _Actual result_:  ![image](https://cloud.githubusercontent.com/assets/760008/14451570/baae626e-00ba-11e6-9145-fb8483081d70.png) ","false","improvement"
"GitBucket 4.0 (MySQL and PostgreSQL support)","- [x] Switching Slick driver - [x] Solidbase integration - [x] Move to HikariCP from c3p0 - [x] Integrative database configuration - [x] Export and import data ","true","task"
"correct empty security token usage, fixes #1168","### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct  Was missing a good handling for empty strings for the security token. Successfully tested with an uptodate installation and http://requestb.in online service. ","true",
"failure with webhook without security token","## Issue  **Impacted version**: 3.13  **Deployment mode**: not relevant  **Problem description**: Setting a webhook without security token, make the webhook not testable directly in the UI. The webhook works for normal events (like push) but cannot be tested via the test button.  In app we received the following error ![image](https://cloud.githubusercontent.com/assets/1119660/14389381/b3693ed0-fdb2-11e5-8dd1-f0cd4362b360.png)  and in traces we see  ``` 17:48:16.696 [ForkJoinPool-2-worker-3] ERROR g.core.service.WebHookService - Failed: web hook request to http://docker:8090 java.lang.IllegalArgumentException: Empty key         at javax.crypto.spec.SecretKeySpec.<init>(SecretKeySpec.java:96) ~[na:1.8.0_71]         at fr.brouillard.oss.security.xhub.XHub.generateXHubToken(XHub.java:83) ~[xhub4j-core-1.0.0.jar:1.0.0]         at fr.brouillard.oss.security.xhub.XHub.generateHeaderXHubToken(XHub.java:76) ~[xhub4j-core-1.0.0.jar:1.0.0]         at gitbucket.core.service.WebHookService$class.gitbucket$core$service$WebHookService$class$$$anonfun$26(WebHookService.scala:115) ~[gitbucket_                                             2.11-3.13.0.jar:3.13.0]         at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[scala-library-2.11.8.jar:na]         at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24) ~[scala-library-2.11.8.jar:na]         at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121) ~[scala-library-2.11.8.jar:na]         at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) ~[scala-library-2.11.8.jar:na]         at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) ~[scala-library-2.11.8.jar:na]         at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [scala-library-2.11.8.jar:na]         at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [scala-library-2.11.8.jar:na] ``` ","false","bug"
"Wrong informations in branch list","This is what the web page present  <img width=""690"" alt=""screen shot 2016-04-08 at 15 20 18"" src=""https://cloud.githubusercontent.com/assets/1280258/14384933/1694971c-fd9e-11e5-833c-c3f76da2f022.png"">  and this is what we really have  <img width=""378"" alt=""screen shot 2016-04-08 at 15 23 01"" src=""https://cloud.githubusercontent.com/assets/1280258/14384940/1de5bc44-fd9e-11e5-9b41-ee8eefe2fd82.png"">  Seems that the master branch in the web page refer to the 39_... branch, but it's not true  Many thanks ","false","bug"
"""Show more"" link of wiki's Pages panel doesn't work","## Issue  **Impacted version**: 3.13  **Deployment mode**: Tomcat on CentOS7  **Problem description**: As the following picture, when I clicked ""Show more .."" link, the hidden pages' title wasn't displayed.  ![image](https://cloud.githubusercontent.com/assets/426433/14373065/5d9ecca8-fd81-11e5-9529-5f6d201270b4.png) ","false","bug"
"Unable to close a database, get Illegal State Exception  Version 1.4.191","I havea DB file , that I open in embedded mode, do a select and close the connection. The results all look good, but when I close the connection I get an error: Caused by: java.lang.IllegalStateException: Reading from cache:nio:maindb.mv.db failed; file length 46546944 read length 1024 at 46638417 [1.4.191/1]     at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:773)     at org.h2.mvstore.DataUtils.readFully(DataUtils.java:443)     at org.h2.mvstore.FileStore.readFully(FileStore.java:98)     at org.h2.mvstore.Page.read(Page.java:190)     at org.h2.mvstore.MVStore.readPage(MVStore.java:1939)     at org.h2.mvstore.MVMap.readPage(MVMap.java:736)     at org.h2.mvstore.Page.getChildPage(Page.java:217)     at org.h2.mvstore.MVMap.binarySearch(MVMap.java:468)     at org.h2.mvstore.MVMap.binarySearch(MVMap.java:469)     at org.h2.mvstore.MVMap.get(MVMap.java:450)     at org.h2.mvstore.MVMap.remove(MVMap.java:538)     at org.h2.store.LobStorageMap.removeLob(LobStorageMap.java:355)     at org.h2.store.LobStorageMap.removeAllForTable(LobStorageMap.java:328)     at org.h2.store.LobStorageMap.removeAllForTable(LobStorageMap.java:332)     at org.h2.engine.Database.removeOrphanedLobs(Database.java:1329)     at org.h2.engine.Database.close(Database.java:1250)     at org.h2.engine.Database.removeSession(Database.java:1170)     at org.h2.engine.Session.close(Session.java:815)     at org.h2.jdbc.JdbcConnection.close(JdbcConnection.java:383)     ... 30 more Caused by: java.io.EOFException     at org.h2.mvstore.DataUtils.readFully(DataUtils.java:431)     ... 47 more ### Before submitting an issue to Gitbucket I have first: ##  ## Issue  **Impacted version**: 1.4.191""  **Deployment mode**: *embedded in my own application, using embedded URL ","false",
"Unable to close a database, get Illegal State Exception","### Before submitting an issue to Gitbucket I have first: - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [] searched for similar already existing issue - [] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)   _(if you have performed all the above, remove the paragraph and continue describing the issue with template below)_ ## Issue  **Impacted version**: xxxx  **Deployment mode**: _explain here how you use gitbucket : standalone app, under webcontainer (which one), with an http frontend (nginx, httpd, ...)_  **Problem description**: - _be as explicit has you can_ - _describe the problem and its symptoms_ - _explain how to reproduce_ - _attach whatever information that can help understanding the context (screen capture, log files)_ - _do your best to use a correct english (re-read yourself)_ ","false",
"Why the /git prefix for http clone?","What's the reason for the prefix in the http git url, [server]/git[/Org/repo].git? It's not according to github convention.  Can it be configured away? ","false","question"
"Misleading error message for ssh fetch if repository not found","## Misleading error message when repository not found  **Impacted version**: 3.12  **Deployment mode**: Standalone (jetty) on Windows  **Problem description**: If I `git clone` using `http` for a repository that does not exist, I get a clear error message  ``` $ git clone http://hanxue@localhost:8080/bengyee/vms.git Cloning into 'vms'... fatal: repository 'http://hanxue@localhost:8080/bengyee/vms.git/' not found ```  But with `ssh`, it complains I do not have the correct access right  ``` $ git clone ssh://hanxue@localhost:29418/bengyee/vms.git Cloning into 'vms'... fatal: Could not read from remote repository.  Please make sure you have the correct access rights and the repository exists. ``` ","false","improvement"
"Add new extension points to add menus","- [x] global header menu - [x] repository menu - [x] repository setting tab - [x] user profile tab - [x] system setting menu - [x] account setting menu - [x] dashboard tab ","false","feature"
"3.13 wide version broke mobile version","Latest version (3.13) seems to broke mobile version.  Regards. ","false","bug"
"Add .gitignore for common languages","One feature request:  I think it would be very helpful to have the option to select the languages when you create one repository. This way GitBucket can add appropriate .gitignore files to the repository automatically. It could be an option just like ""Add a Readme file"".  Regards. ","false","feature,plugin"
"Fix layouts for Issue pages.","In this PR, I'm fixing a layout problem in issues pages.  It looks that we have to use ""row-fluid"" class instead of ""row"" class, because we do not use fixed-size layout from 3.13. FYI: (English) http://stackoverflow.com/questions/25682804/row-fluid-vs-row-in-twitter-bootstrap (Japanese) http://greenapple-room.com/conc/user/TwitterBootstrap/bootstrap_02.html  Could you take a look? ## Before  ![before](https://cloud.githubusercontent.com/assets/391964/14198602/112fc0f8-f817-11e5-833c-3a23592c7e6a.png) Labels/Milestone, ... are in bottom of comments. ## After  ![after](https://cloud.githubusercontent.com/assets/391964/14198607/1f5a4efa-f817-11e5-8b00-d1b2dc8c9ddd.png) Labels/Milestone, ... are in right of comments. ### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ ","true","bug"
"Support displaying user's real name instead of user ID when using Active Directory","When I using Active Directory, I want to display user's real name instead of user's ID because it's a meaningless employee id number in our organization. ","false","LDAP/SSO,feature"
"Move the repository menu to the sidebar","![gitbucket_sidebar](https://cloud.githubusercontent.com/assets/1094760/14064900/e63dd02c-f44e-11e5-9120-163108a108f4.png) ","true","improvement"
"404 after update from 3.10 to newer","Got 404 error after unpacking of war file on Windows IIS & HeliconZoo (jetty) Anyone knows why or how to fix? ","false","question"
"Update error when attempting to 'Protect Branch'","When attempting to protect a branch I receive a modal warning from my browser stating ""update error"" (Please see image below).  I am using gitbucket version  3.12, running in Apache Tomcat/7.0.68 with JVM Version 1.8.0_73-b02 on Windows Server 2012 R2.  ![image](https://cloud.githubusercontent.com/assets/7217257/13815545/5e8f87f6-eb61-11e5-8856-7c449e6c34ef.png) ","false","bug"
"Move to raw Bootstrap3 from GitHub like theme for Bootstrap3",,"true","task"
"Can't change a color of a label.","**Impacted version**: 3.12  **Problem description**: Can't change a color of label.  ![label](https://cloud.githubusercontent.com/assets/11273093/13739889/1ee0c2f6-ea11-11e5-8b5b-f5f0c9697fe0.gif)  Thanks. ","false","bug"
"Update some instructions","This pull request contains changes for: - Explanation in the repository creation form - Command line instructions for the empty repository - Command line instructions for merging the pull request ","true","task"
"Replace embedded variables in commit message Update Branch button generates","When click `Update Branch` button in a pull request page, commit message where variables are embedded is generated like `Merge branch '${alias}' into ${pullreq.requestBranch}`.  This PR replaces the embedded variables with their values by string interpolation. ","true","bug"
"rephrase README.md in regard of github complaint","Some rephrasing after github complaint ","true",
"Apostroph in issue text isn't handled properly","We updated our installation from gitbucket 3.10 to 3.12 (docker image from https://github.com/f99aq8ove/docker-gitbucket) and now when creating an issue or adding a comment to an existing one, the apostroph (ASCII 39 ' ) isn't displayed right anymore (in the preview and the saved issue). See the following screenshots: ![20160311-102102_selection_001](https://cloud.githubusercontent.com/assets/203928/13698300/84501d26-e773-11e5-9ea7-7c53fe4d4af4.png) ![20160311-102112_selection_001](https://cloud.githubusercontent.com/assets/203928/13698301/8680fc96-e773-11e5-8c84-eb005b714d9a.png) ","false","bug,pending"
"More API features for issues","More API features for issues like in the GitHub API - [x] List of all issues with filters: `GET /repos/:owner/:repo/issues` - [x] Details for one issue: `GET /repos/:owner/:repo/issues/:number` - [x] Create an new issue: `POST /repos/:owner/:repo/issues`  THX ","false","feature"
"Add member to group error","When add a member to a group, if click on the ""Member"" or ""Manager"" radio button, I can select both or none the roles, if i select no one this will raise an error:  ``` java.lang.IllegalArgumentException: For input string: ""undefined""     at scala.collection.immutable.StringLike$class.parseBoolean(StringLike.scala:290)     at scala.collection.immutable.StringLike$class.toBoolean(StringLike.scala:260)     at scala.collection.immutable.StringOps.toBoolean(StringOps.scala:30)     at gitbucket.core.controller.AccountControllerBase$$anonfun$35$$anonfun$apply$35.apply(AccountController.scala:334)     at gitbucket.core.controller.AccountControllerBase$$anonfun$35$$anonfun$apply$35.apply(AccountController.scala:333) ..... ``` ","false","bug"
"update Scala 2.11.8, use new Java8 Backend","- https://github.com/scala/make-release-notes/blob/9cfbdc8c92f94/experimental-backend.md#emitting-java-8-style-lambdas - http://d.hatena.ne.jp/xuwei/20150626/1435282696 ","true",
"Add pull_request key in list issues api if an issue is a pull request","Now, GitHub pull request builder plugin for Jenkins ignores trigger phrase like `test this please` written in GitBucket pull request comment. This is because issues webhook payload for GitBucket doesn't contain `pull_request` key when a pull request comment is written.  See also: https://github.com/jenkinsci/ghprb-plugin/pull/258  This PR sets `pull_request` key in issues webhook payload to trigger build by pull request comment only if an issue is pull request like [GitHub](https://developer.github.com/v3/issues/#list-issues). ### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","improvement"
"Fix special character encoding for blob links","This adds URL encoding to the 'blob' links in the repository viewer. This was done for the 'tree' links in 15e8527e01d2cea92c5f1121c1c23143a267a16c.  Solves a similar problem to #984 and #1043 but when viewing the file itself rather than the directory. ","true","bug"
"Correct the relative links in the wiki pages (fixes #1021)","Hi,  This request also fixes #1021  Currently, if we want to use a relative link in the wiki, we must start with the `..` because, automatically insert `_blob` to the relative links in the wiki pages. This is a non-intuitive way.  `_blob` seems to me that is not used anywhere. If there are any features that I overlooked, please point them out. ### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","invalid"
"add possibility to choose content type for repository webhooks","This PR adds content-type selection to the repository webhooks. Like in github, users can now choose `application/json` or `application/x-www-form-urlencoded` for the content-type of the webhook.  In order to be backward compatible and to not disturb gitbucket users form content-type is the default for already existing webhooks and for newly created ones.  ![image](https://cloud.githubusercontent.com/assets/1119660/13553251/07a22e5c-e383-11e5-9f35-5235a0ff1004.png) ","true","feature"
"Separate API controller to improve routing performance","This pull request also fix #1131. ","true","improvement"
"generate sha-256 checksum","fixes #1138 ","true","task"
"Provide SHA-256 checksum for gitbucket.war please","We use `chef` for gitbucket server provisioning and deploy.  `remove_file` ( that is download method of chef ) can check only sha-256 . https://docs.chef.io/resource_remote_file.html ","false","task"
"Fix typo in issue comment list","### Before submitting a pull-request to Gitbucket I have first: - [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md) - [x] rebased my branch over master - [x] verified that project is compiling - [x] verified that tests are passing - [x] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [x] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true","bug"
"customizing the main page","It would be very nice to add the possibility to change the main page content. Because we are using gitbucket with a lot of different repositories and want to customize the main page with some html code to get easy access to important repositories. The time line with the last actions are a little bit impractically.  Tanks. ","false","feature,help wanted,plugin"
"long branch names should be truncated","**Impacted version**: 3.12  **Deployment mode**: standalone app `java -jar gitbucket.war`  **Problem description**:  The new UI introduced with v3.12 is not handling long branch names well.   ![image](https://cloud.githubusercontent.com/assets/204623/13490486/4dae6182-e170-11e5-82e2-549ce25060a6.png)  On the other hand, GitHub is truncating long branch names so that it fits nicely along with other elements of the UI.  ![image](https://cloud.githubusercontent.com/assets/204623/13490478/3e3ca600-e170-11e5-8866-70dc9a72b699.png) ","false","help wanted,improvement"
"[Question] Cannot find the .gitbucket in Windows 10","Gitbucket runs perfectly on Windows 10 and Apache Tomcat. After upgrading to 3.12, I wanted to change the GITBUCKET_HOME directory. In the system settings, it says  ""**GITBUCKET_HOME** C:\Windows\system32\config\systemprofile.gitbucket"".  However, I cannot find the `.gitbucket` folder in systemprofile.  Is it a bug or something like it? ","false","question"
"S 319 gitbucket changes for gitbucket style changes","### Before submitting a pull-request to Gitbucket I have first: - [] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/CONTRIBUTING.md) - [] rebased my branch over master - [] verified that project is compiling - [] verified that tests are passing - [] squashed my commits as appropriate _(keep several commits if it is relevant to understand the PR)_ - [] [marked as closed](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct ","true",
"correct path to CONTRIBUTING file, fixes #1128","while moving to `.github` directory to centralize files, path was not changed.  I didn't found any standard URL that could redirect to CONTRIBUTING file wherever it is placed, so I changed manually the URL ","true",
"branch protection not workd on reverse proxy with prefix","**Impacted version**: 3.11 or 3.12 **Deployment mode**: standalone with apache or tomcat7 with apache (ajp or http)  standalone  ``` --prefix=/gitbucket ```  apache  ``` <Location /gitbucket>   ProxyPass http://localhost:8080/gitbucket   ProxyPassReverse http://localhost:8080/gitbucket </Location> ```  **Problem description**: ajax 'update error' path prefix replacement? ajp13 or tomcat7 PATCH not supported?  https://github.com/gitbucket/gitbucket/blob/master/src/main/twirl/gitbucket/core/settings/branchprotection.scala.html#L110  ``` $.ajax({     method:'PATCH',     url:'/api/v3/repos/@repository.owner/@repository.name/branches/@encodeRefName(branch)', ``` ","false","improvement"
"Gitbucket backup","How to complete the gitbucket server backup all the warehouse documents and code ","false",
"cannot disable the user","## Issue  **Impacted version**: 3.12  **Deployment mode**: Windows Server 2012 R2 + Apache 2.4.16 + JDK 8u60 + Tomcat 8.0.32  **Problem description**:  To disable the user, i get a exception, such as the following  ``` org.h2.jdbc.JdbcSQLException: Referential integrity constraint violation: ""IDX_ISSUE_ID_FK1: PUBLIC.ISSUE_ID FOREIGN KEY(USER_NAME, REPOSITORY_NAME) REFERENCES PUBLIC.REPOSITORY(USER_NAME, REPOSITORY_NAME) ('UserName', 'ProjectName')""; SQL statement: delete from ""REPOSITORY"" where ""REPOSITORY"".""USER_NAME"" = ? [23503-190]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:179)     at org.h2.message.DbException.get(DbException.java:155)     at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:426)     at org.h2.constraint.ConstraintReferential.checkRowRefTable(ConstraintReferential.java:443)     at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:318)     at org.h2.table.Table.fireConstraints(Table.java:932)     at org.h2.table.Table.fireAfterRow(Table.java:950)     at org.h2.command.dml.Delete.update(Delete.java:100)     at org.h2.command.CommandContainer.update(CommandContainer.java:78)     at org.h2.command.Command.executeUpdate(Command.java:253)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:157)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:143)     at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:384)     at scala.slick.driver.JdbcInvokerComponent$DeleteInvoker$$anonfun$delete$1.apply(JdbcInvokerComponent.scala:67)     at scala.slick.driver.JdbcInvokerComponent$DeleteInvoker$$anonfun$delete$1.apply(JdbcInvokerComponent.scala:65)     at scala.slick.jdbc.JdbcBackend$SessionDef$class.withPreparedStatement(JdbcBackend.scala:191)     at scala.slick.jdbc.JdbcBackend$BaseSession.withPreparedStatement(JdbcBackend.scala:389)     at scala.slick.driver.JdbcInvokerComponent$DeleteInvoker.delete(JdbcInvokerComponent.scala:65)     at gitbucket.core.service.AccountService$class.removeUserRelatedData(AccountService.scala:178)     at gitbucket.core.controller.UserManagementController.removeUserRelatedData(UserManagementController.scala:14)     at gitbucket.core.controller.UserManagementControllerBase$$anonfun$12$$anonfun$apply$4.apply(UserManagementController.scala:110)     at gitbucket.core.controller.UserManagementControllerBase$$anonfun$12$$anonfun$apply$4.apply(UserManagementController.scala:99)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.UserManagementControllerBase$$anonfun$12.apply(UserManagementController.scala:99)     at gitbucket.core.controller.UserManagementControllerBase$$anonfun$12.apply(UserManagementController.scala:97)     at gitbucket.core.util.AdminAuthenticator$$anonfun$adminOnly$1$$anonfun$apply$7.apply(Authenticator.scala:76)     at gitbucket.core.util.AdminAuthenticator$class.gitbucket$core$util$AdminAuthenticator$$authenticate(Authenticator.scala:81)     at gitbucket.core.util.AdminAuthenticator$$anonfun$adminOnly$1.apply(Authenticator.scala:76)     at io.github.gitbucket.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:26)     at io.github.gitbucket.scalatra.forms.package$.withValidation(package.scala:21)     at io.github.gitbucket.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:25)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:285)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:279)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:279)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:189)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:278)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:189)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:253)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:251)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:251)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:250)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:250)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:74)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:178)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:177)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:187)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:205)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:187)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:126)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:78)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:57)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:125)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:53)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:170)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:145)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:69)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:145)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:37)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:36)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:68)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)     at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)     at org.apache.coyote.ajp.AbstractAjpProcessor.process(AbstractAjpProcessor.java:868)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745) ``` ","false","bug"
"contribution guidelines are 404 NOT FOUND","[contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/CONTRIBUTING.md)  are missing though we need read before issue posting ","false","bug"
"add X-Hub-Signature security to wekhooks","as defined in #1117 here is a PR to add X-Hub-Signature handling like defined in [Gitbucket doc](https://developer.github.com/webhooks/#delivery-headers) ","true","feature"
"add info to run tests","enhance `how to run` document with some command to run tests ","true",
"The local gitbucket server files stored?","The local gitbucket server files stored? I find the storage inside the path set by a very small document does not look right ","false",
"--gitbucket.home=[DATA_DIR]","How to modify the --gitbucket.home path ","false","question"
"Long name in repository list visualisation problem","Hello,  setting a long name in user and/or in repository name will cause the ""Your repositories"" and ""Recent updated repositories"" to display the text outside the box  <img width=""989"" alt=""screen shot 2016-02-25 at 10 42 21"" src=""https://cloud.githubusercontent.com/assets/1280258/13315729/dd66adb2-dbac-11e5-9699-bf3dd23d69cf.png""> ","false","improvement"
"add a chance to override default log level from command line","First step to better document how to log with gitbucket.  This PR allows for controlling externally the default log level of gitbucket for example by using `java -DlogLevel=DEBUG -jar gitbucket.war`  Also it relates to #1109 it does not fully answer it. We'll need to document in a better way (with it's own wiki entry probably) how log can be configured for gitbucket. ","true","improvement"
"127.0.0.1:8080 shows no webpage but a directory tree","## Issue  **Impacted version**: 3.11 (earlier versions not tested)  **Deployment mode**: `java -jar gitbucket.war`  **Problem description**: On my Mac everything is fine. But when I switch to Ubuntu, `127.0.0.1:8080` shows no webpage but a directory tree. `java -version` gives  ``` java version ""1.8.0_65"" Java(TM) SE Runtime Environment (build 1.8.0_65-b17) Java HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode) ``` ","false","question"
"Adjust img width in content box to max-width:100%","When viewing large images in commits, that protrudes from its container. I adjusted it.  **Before** ![before](https://cloud.githubusercontent.com/assets/234142/13250168/b8759e24-da6b-11e5-94eb-02497d86dea8.png)  **After** ![after](https://cloud.githubusercontent.com/assets/234142/13250174/c0fff148-da6b-11e5-8653-ec6f84015791.png) ","true","improvement"
"(fixes #1118)Remove duplicated <script>","EOM ","true","bug"
"Unmatched start script tag in wiki page template","**Impacted version**: 3.11(505bc71)  **Deployment mode**: standalone app  **Problem description**: See line [109 of `src/main/twirl/gitbucket/core/wiki/page.scala.html`](https://github.com/gitbucket/gitbucket/blob/505bc71f9ac8c75b63968d39a8e70a11a8ba74e3/src/main/twirl/gitbucket/core/wiki/page.scala.html#L109) ","false","bug"
"add X-Hub-Signature security to webhooks","As described in [github documentation](https://developer.github.com/webhooks/#delivery-headers), ones can secure webhooks so that the consumer can trust the webhook.  The required enhancement consist in registring a security token when registering a webhook and to generate an HTTP header when posting the event to the webhook.  [xhub4j](https://github.com/McFoggy/xhub4j) allows to generate easily such headers. ","false","feature"
"addition of issues & PR templates","as discussed in gitter room, this is a first version of contribution templates for issues & PR. following github  [advices](https://github.com/blog/2111-issue-and-pull-request-templates) I have put everything under a `.github` directory to keep the root clean. ","true",
"(fixes #1114)Add Colorpicker options that to force hex format","Before:  ![picked-color-was-not-hex-format](https://cloud.githubusercontent.com/assets/234142/13174533/900454f2-d747-11e5-8b36-ae65f817a917.gif)  After: ![picked-color-was-not-hex-format_after](https://cloud.githubusercontent.com/assets/234142/13174536/99445990-d747-11e5-9a23-05984ddff744.gif) ","true","bug"
"Unexpect format at label color","on GitBucket 3.11 & (56bb20d)  When controlled alpha channel in color picker, picked color was not hex format.  ![picked-color-was-not-hex-format](https://cloud.githubusercontent.com/assets/234142/13174410/d978946e-d746-11e5-830f-1531f0ace9d7.gif) ","false","bug"
"Improve Wiki CSS for printing",,"false","improvement"
"Add margin after octicon","Just nitpicking. It's not so smart way because I only added LF char between `<i>` and `<span>` element.  ![screenshot](https://cloud.githubusercontent.com/assets/4208984/13113228/82d46910-d5d1-11e5-8628-a434dc637b4e.png) ","true","improvement"
"generating new sessions take ages","hi, gitbucket needs up to 30-40 seconds to show the initial login screens with about 4 cores in vm running at 100%. if you are able to login (ldap access), all other pages are fast as expected. seems like generating new sessions has issues? any tweaks to test? ","false","question"
"search bar?","There is any kind of search bar? it's only a question ","false","question"
"does logback.xml need to be provided","Having `logback.xml` provided in `src/main/resources` prevent it to be overidden when launched as a standard java application using `java -jar gitbucket.war`. - adding a `logback.xml` before gitbucket in the classpath does not work, probably because of the ClassLoading mechanism in Jetty that should first find it in the war before asking to the CCL or AppCL.      `java -cp .;gitbucket.war JettyLauncher` - using System property `-Dlogback.configurationFile` does not work (found on some weird SO questions/answers)  The only thing that works (as expressed in [Logback configuration](http://logback.qos.ch/manual/configuration.html#auto_configuration)) is to use a file `logback-test.xml`  As [BasicConfigurator](http://logback.qos.ch/xref/ch/qos/logback/classic/BasicConfigurator.html) is the final fallback mechanism in logback, I am really not sure that gitbucket has to provide a `logback.xml` file doing the exact same and then preventing it to be overidden. ","false","improvement"
"New GitHub UI and Mobile support",,"true","improvement"
"Option to ignore YAML front matter when previewing markdown","This isn't a Github feature, but it would be good to have a tickbox or similar when previewing markdown files which would ignore anything placed between the first and second ""---"".  Use case for this is Jekyll, previewing blog posts (see: http://jekyllrb.com/docs/frontmatter/ ) ","false","improvement,pending"
"Ability to provide initial LDAP configuration","Being able to set LDAP configuration parameters in a file would greatly ease deployment. It might be good if we could specify KV pairs, even if they were only active to override defaults. This would be much easier to manage through eg, ansible or chef (which is what I'm trying to do) ","false","question"
"make Plugin an abstract class to improve binary compatibility","is this everything you wanted to do about #1090, or is there more? ","true","improvement"
"generic ssh user","addresses #971 - let me know what you think. ","true","feature,help wanted"
"Unix user authentication?","Being able to auth against unix accounts would be great, as would being able to configure this in a way that can be (reasonably) easily automated. ","false","feature,pending"
"rename file to the name of the type within",,"true","bug"
"git-lfs support","It would be very nice to be able to use git-annex to manage large binaries, and still be able to push those binaries up to gitbucket. ","false","feature,help wanted"
"Fix bug that label duplicate check is wrong","Updating label name could cause `Name has already been taken.` error even if the name is unique because the check query tests wrong repository.  For example, when both A and B project have label named `bug`, change B project's label `bug` -> `bug2` -> `bug` could cause duplicate error. ","true","bug"
"Move to ScalaTest from Specs2",,"true","task"
"Fix some hidden pull requests","IssuesService.IssueLimit value is equalized with PullRequestService.PullRequestLimit value by this commit.  If without this, some pull requests are hidden. For example, inspite of 30 pull requests are exists, pull request page shows 25. ","true","bug"
"Java 8 is a new requirement",,"true","task"
"Fix invisible closed label","Closed label has label-important attribute which was not defined in gitbucket.css, so that define the attribute. ","true","bug"
"Link avatar image to the user's profile page","I added link tag to avatar images so that users can jump to the profile page easily.  In this PR, avatar images which size is 48x48 or 40x40 are modified. Small avatar images (16x16) are not always clickable even on GitHub, so I thought them out of scope for now. ","true","improvement"
"could not start version 3.11","error msg:  ``` Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/eclipse/jetty/server/Handler : Unsupported major.minor version 52.0         at java.lang.ClassLoader.defineClass1(Native Method)         at java.lang.ClassLoader.defineClass(ClassLoader.java:791)         at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)         at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)         at java.net.URLClassLoader.access$100(URLClassLoader.java:71)         at java.net.URLClassLoader$1.run(URLClassLoader.java:361)         at java.net.URLClassLoader$1.run(URLClassLoader.java:355)         at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(URLClassLoader.java:354)         at java.lang.ClassLoader.loadClass(ClassLoader.java:423)         at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)         at java.lang.ClassLoader.loadClass(ClassLoader.java:356)         at java.lang.Class.getDeclaredMethods0(Native Method)         at java.lang.Class.privateGetDeclaredMethods(Class.java:2442)         at java.lang.Class.getMethod0(Class.java:2685)         at java.lang.Class.getMethod(Class.java:1620)         at sun.launcher.LauncherHelper.getMainMethod(LauncherHelper.java:488)         at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:480) ```  java: 1.7.0_03 system: centos 6.5 ","false",
"Feature/user creation api",,"true",
"Poor performance with large repositories","Hello,  I am using gitbucket 3.10.1 behind an nginx proxy as per the wiki installation instructions. This works well for small repositories, but I have several repositories with tens of thousands of commits. When attempting to initially load these large repos into gitbucket, the initial push fails/freezes (both over HTTPS and SSH) during the unpacking phase:  ``` remote: Resolving deltas:  81% (2657701/3267292) ```  It will get stuck here and never finish (waiting hours). Other times, it will put gitbucket in a bad state, resulting in a ""502 Bad Gateway"" error when attempting to visit any gitbucket page.  Moreover, if you try to use gitbucket's search functionality on one of these large repositories, it will always fail with ""502 Bad Gateway"".  I've tried increasing `-Xmx` to `2048M` in `/etc/default/tomcat7` and `client_max_body_size` to `5000m` in the nginx config but this doesn't seem to help. Is there anything that can be done to improve performance of large repositories? Thanks! ","false",
"Fix bug that border of review comment box is not shown","![screenshot](https://cloud.githubusercontent.com/assets/4208984/12719988/acade0b0-c93b-11e5-9207-beae72b9690f.png) ","true","bug"
"Plugin should be abstract class for plugin binary compatibility",,"false","improvement"
"something wrong about version?","I just updated to 3.11, but it show me with 0.0 version on top of the page, anything wrong? ![20160201115916](https://cloud.githubusercontent.com/assets/5617150/12708539/6f583e00-c8db-11e5-9622-3a94a417871c.jpg) ","false","question"
"gitbucket 3.11 requires java 1.8 where 3.10 did not; seems to break plugins","After upgrading to gitbucket 3.11 a few minutes ago I found it would not start as it usually did after an upgrade. I traced this to gitbucket 3.11 requiring java 1.8 now. I had been running it (fine) with java 1.7 before. This is mainly an FYI but it would be useful to put it in the release notes.  More upsetting though is that plugins no longer seem to work. I pulled the latest gist plugin code, built it for 3.11 and installed the new version, so I am fairly sure it is not the gist plugin upgrade process that is the problem here. Here is one example of the stack trace I see during gitbucket initialization when it is loading plugins. It is repeated once for each plugin I have installed, but this is just one:   ``` Jan 31 21:58:00 flango java[604]: Jan 31, 2016 9:58:00 PM gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1 apply Jan 31 21:58:00 flango java[604]: SEVERE: Error during plugin initialization Jan 31 21:58:00 flango java[604]: java.lang.AbstractMethodError: Plugin.gitbucket$core$plugin$Plugin$_setter_$receiveHooks_$eq(Lscala/c Jan 31 21:58:00 flango java[604]: at gitbucket.core.plugin.Plugin$class.$init$(Plugin.scala:73) Jan 31 21:58:00 flango java[604]: at Plugin.<init>(Plugin.scala:11) Jan 31 21:58:00 flango java[604]: at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) Jan 31 21:58:00 flango java[604]: at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) Jan 31 21:58:00 flango java[604]: at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:4 Jan 31 21:58:00 flango java[604]: at java.lang.reflect.Constructor.newInstance(Constructor.java:408) Jan 31 21:58:00 flango java[604]: at java.lang.Class.newInstance(Class.java:438) Jan 31 21:58:00 flango java[604]: at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:149) Jan 31 21:58:00 flango java[604]: at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:146) Jan 31 21:58:00 flango java[604]: at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33) Jan 31 21:58:00 flango java[604]: at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186) Jan 31 21:58:00 flango java[604]: at gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistory.scala:146) Jan 31 21:58:00 flango java[604]: at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.s Jan 31 21:58:00 flango java[604]: at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.s Jan 31 21:58:00 flango java[604]: at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.appl Jan 31 21:58:00 flango java[604]: at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426) Jan 31 21:58:00 flango java[604]: at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseCompone Jan 31 21:58:00 flango java[604]: at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseCompone Jan 31 21:58:00 flango java[604]: at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34) Jan 31 21:58:00 flango java[604]: at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46) Jan 31 21:58:00 flango java[604]: at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54 Jan 31 21:58:00 flango java[604]: at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46) Jan 31 21:58:00 flango java[604]: at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:30) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java: Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1379) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1341) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:517) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.server.Server.start(Server.java:405) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.server.Server.doStart(Server.java:372) Jan 31 21:58:00 flango java[604]: at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) Jan 31 21:58:00 flango java[604]: at JettyLauncher.main(JettyLauncher.java:64) ```  Any ideas? ","false","task"
"Unsupported major.minor version 52.0","Unable to launch 3.11.0 on Debian 8. Any ideas? OS: Debian GNU/Linux 8.3 (Kernel 3.16.0-4-amd64) JRE: java version ""1.7.0_79"" OpenJDK Runtime Environment (IcedTea 2.5.6) (7u79-2.5.6-1~deb8u1) OpenJDK 64-Bit Server VM (build 24.79-b02, mixed mode)  Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/eclipse/jetty/server/Handler : Unsupported major.minor version 52.0         at java.lang.ClassLoader.defineClass1(Native Method)         at java.lang.ClassLoader.defineClass(ClassLoader.java:800)         at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)         at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)         at java.net.URLClassLoader.access$100(URLClassLoader.java:71)         at java.net.URLClassLoader$1.run(URLClassLoader.java:361)         at java.net.URLClassLoader$1.run(URLClassLoader.java:355)         at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(URLClassLoader.java:354)         at java.lang.ClassLoader.loadClass(ClassLoader.java:425)         at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)         at java.lang.ClassLoader.loadClass(ClassLoader.java:358)         at java.lang.Class.getDeclaredMethods0(Native Method)         at java.lang.Class.privateGetDeclaredMethods(Class.java:2615)         at java.lang.Class.getMethod0(Class.java:2856)         at java.lang.Class.getMethod(Class.java:1668)         at sun.launcher.LauncherHelper.getMainMethod(LauncherHelper.java:494)         at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:486) ","false","duplicate,question"
"Fix repository owner link URL","![screenshot2](https://cloud.githubusercontent.com/assets/4208984/12699173/a8e752f0-c7f5-11e5-80c8-559eb58fe3c8.png) ","true","bug"
"properly escape html metacharacters in repository description","try entering this description when you create a new project:  ``` javascript <script>alert(""hallo"")</script> ``` ","true","bug"
"separate ssh url configuration from http baseurl","this should solve #734  the first few commits are mostly (hopefully) easily reviewable cleanups: a lot of code could be made independent of the baseUrl by moving the generation of http/ssh-urls out of RepositoryInfo  after that, it was easy to make the hostname used for ssh urls configurable, additionally the views no longer need to know about the ssh port themselves.  note you still need to have a baseUrl configured in the settings for ssh because commit hooks need it to generate http urls.  i'd be glad if this got merged asap as it form the base for an implementation of #971 i have almost ready. ","true","improvement"
"update sbt to newest version",,"true","improvement"
"Unsupported version 52.0?","I get the following when trying to launch the latest (3.11) version:  ``` gitbucket@c2:~$ /usr/bin/java -jar /home/gitbucket/gitbucket.war --port=8082 Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/eclipse/jetty/server/Handler : Unsupported major.minor version 52.0     at java.lang.ClassLoader.defineClass1(Native Method)     at java.lang.ClassLoader.defineClass(ClassLoader.java:800)     at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)     at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)     at java.net.URLClassLoader.access$100(URLClassLoader.java:71)     at java.net.URLClassLoader$1.run(URLClassLoader.java:361)     at java.net.URLClassLoader$1.run(URLClassLoader.java:355)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(URLClassLoader.java:354)     at java.lang.ClassLoader.loadClass(ClassLoader.java:425)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)     at java.lang.ClassLoader.loadClass(ClassLoader.java:358)     at java.lang.Class.getDeclaredMethods0(Native Method)     at java.lang.Class.privateGetDeclaredMethods(Class.java:2625)     at java.lang.Class.getMethod0(Class.java:2866)     at java.lang.Class.getMethod(Class.java:1676)     at sun.launcher.LauncherHelper.getMainMethod(LauncherHelper.java:494)     at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:486) ```  Java version:  ``` gitbucket@c2:~$ java -version java version ""1.7.0_91"" OpenJDK Runtime Environment (IcedTea 2.6.3) (7u91-2.6.3-0ubuntu0.14.04.1) OpenJDK 64-Bit Server VM (build 24.91-b01, mixed mode ```  Any ideas? ","false","question"
"Button to expand commit messages","One nice feature of gitweb is that it allows you to see the commit messages for all commits on a page (e.g when viewing the list of commits in a repository). This allows you to easily CTRL+F and find the commit with a particular message. Gitbucket masks all commit messages with ellipsis, and they're only visible if you click on the ellipsis to expand them. Would it be possible to add a button to gitbucket that when clicked would expand all commit messages on a page, that way you can view them and search them if desired? ","false",
"Indicate when commit count is an estimate","Building on #280, would it be possible to instead of simply printing ""10001 commits"" for large repositories, to instead print ""10001+ commits"", so that it is clear that the number is an estimate and not the actual number of commits? I am not familiar with scala or the templating engine used, but wouldn't something like this be possible?  src/main/twirl/gitbucket/core/menu.scala.html  ``` @@ -116,7 +116,11 @@              <td style=""width: 33%; text-align: center;"">                <a href=""@url(repository)/commits/@encodeRefName(id.getOrElse(""""))"" class=""header-link"">                  <i class=""octicon octicon-history""></i> +                @if(repository.commitCount == 10001){                  <strong>@repository.commitCount</strong> commits +                } else { +                <strong>10000&#43;</strong> commits +                }                </a>              </td>              <td style=""width: 33%; text-align: center;""> ```  Thanks! ","false","bug"
"filter an issue by issue number?","Thanks so much for your efforts for this great software. We can't live without GitBucket.  Issue filter does not work for issue numbers.  This fails.  is:issue is:open 10060  Best, ","false","feature,pending"
"Default assignee?","I would be happy if gitbucket has a feature that assigns the person who makes an issue to an assignee by default.  Best, ","false","feature,pending"
"adapt how_to_run.md to changes in build.sbt",,"true",
"refs #1055 Make a header link anchor icon clickable","Enlarge clickable area of `<a>` element like GitHub to fix #1055 problem.  ![screenshot](https://cloud.githubusercontent.com/assets/4208984/12584378/96025d1a-c48a-11e5-867d-64dbea9c54ae.png)  NOTE: - In previous implementation, the size of link icon is 16x16. However, suggested implementation is 14x14 because GitBucket globally specifies the size for `.octicon` class. Should I change the link icon size to 16x16 only in this context? ","true","improvement"
"fix typo in a file name","for consistency, renamed RepoitoryName.scala to RepositoryName.scala ","true","bug"
"these fields are accessed from multiple threads","just some small issue i noticed: these fields are accesses from at least two different threads: the one created in start(Environment) and whoever calls the setters. without the volatile declaration, the new thread might never see the values passed to the setters. ","true","improvement"
"java.lang.IllegalStateException when create a repository already exists","java.lang.IllegalStateException: Repository already exists: C:\Users\standard.gitbucket\repositories\team-1\repo-to-jose.git     at org.eclipse.jgit.internal.storage.file.FileRepository.create(FileRepository.java:267)     at org.eclipse.jgit.lib.Repository.create(Repository.java:170)     at gitbucket.core.util.JGitUtil$$anonfun$initRepository$1.apply(JGitUtil.scala:632)     at gitbucket.core.util.JGitUtil$$anonfun$initRepository$1.apply(JGitUtil.scala:631)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:17)     at gitbucket.core.util.JGitUtil$.initRepository(JGitUtil.scala:631)     at gitbucket.core.controller.AccountControllerBase$class.gitbucket$core$controller$AccountControllerBase$$createRepository(AccountController.scala:519)     at gitbucket.core.controller.AccountControllerBase$$anonfun$37$$anonfun$apply$42.apply(AccountController.scala:370)     at gitbucket.core.controller.AccountControllerBase$$anonfun$37$$anonfun$apply$42.apply(AccountController.scala:368)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:30)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:27)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.LockUtil$.lock(LockUtil.scala:27)     at gitbucket.core.controller.AccountControllerBase$$anonfun$37.apply(AccountController.scala:368)     at gitbucket.core.controller.AccountControllerBase$$anonfun$37.apply(AccountController.scala:367)     at gitbucket.core.util.UsersAuthenticator$$anonfun$usersOnly$1$$anonfun$apply$6.apply(Authenticator.scala:59)     at gitbucket.core.util.UsersAuthenticator$class.gitbucket$core$util$UsersAuthenticator$$authenticate(Authenticator.scala:64)     at gitbucket.core.util.UsersAuthenticator$$anonfun$usersOnly$1.apply(Authenticator.scala:59)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:26)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:25)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) ","false","question"
"closed",,"false",
"MalformedURLException when active SSH server and add  localhost/gitbucket like URL base","java.net.MalformedURLException: no protocol: localhost/gitbucket     at java.net.URL.<init>(URL.java:586)     at java.net.URL.<init>(URL.java:483)     at java.net.URL.<init>(URL.java:432)     at gitbucket.core.controller.Context.<init>(ControllerBase.scala:183)     at gitbucket.core.controller.ControllerBase.context(ControllerBase.scala:78)     at gitbucket.core.controller.AnonymousAccessControllerBase$$anonfun$1.apply$mcZ$sp(AnonymousAccessController.scala:6)     at org.scalatra.BooleanBlockRouteMatcher.apply(routeMatcher.scala:214)     at org.scalatra.Route$$anonfun$apply$1$$anonfun$apply$2.apply(route.scala:31)     at org.scalatra.Route$$anonfun$apply$1$$anonfun$apply$2.apply(route.scala:30)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.Route$$anonfun$apply$1.apply(route.scala:30)     at org.scalatra.Route$$anonfun$apply$1.apply(route.scala:29)     at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)     at scala.collection.immutable.List.foldLeft(List.scala:84)     at org.scalatra.Route.apply(route.scala:28)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:489)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) ","false",
"Customized global labels (names, colors, ..) ","Looking for an easy way to customize these hard coded labels.  ``` private def insertDefaultLabels(userName: String, repositoryName: String): Unit = {     createLabel(userName, repositoryName, ""bug"", ""fc2929"")     createLabel(userName, repositoryName, ""duplicate"", ""cccccc"")     createLabel(userName, repositoryName, ""enhancement"", ""84b6eb"")     createLabel(userName, repositoryName, ""invalid"", ""e6e6e6"")     createLabel(userName, repositoryName, ""question"", ""cc317c"")     createLabel(userName, repositoryName, ""wontfix"", ""ffffff"") } ```  Any suggestions on that? AFAIK there is no configuration option (eg. by using a config file) for GitBucket. ","false","question"
"Limit maximum width of image","Fixed a problem that image width could be larger than the parent box.  ![screenshot](https://cloud.githubusercontent.com/assets/4208984/12536853/8c7ba40a-c2f4-11e5-96fb-e569502aad2f.png)  NOTES 1. Although most of markdown contents are wrapped with CSS class `markdown-body`, only wiki Sidebar contents is not. I was not sure I should add `markdown-body` class to `div.wiki-sidebar` or not, so I just defined CSS style for `div.wiki-sidebar img`.         ``` html    <div class=""wiki-sidebar"">        <a href=""/group/hoge/wiki/_Sidebar/_edit"" style=""text-decoration: none;""><span class=""octicon octicon-pencil pull-right""></span></a>        <p><img src=""https://assets-cdn.github.com/images/modules/logos_page/GitHub-Logo.png"" alt=""GitHub""></p>    </div>    ``` 2. GitHub generates both `<a>` and `<img>` element for an image in Issue comment, but only `<img>` element in Wiki page. On the other hand, GitBucket always generates `<img>` element only. To follow GitHub's behavior, maybe I have to add an option to `GitBucketMarkdRenderer` to switch the output of `image()` method. I thought it is not so important for now, because a web browser can open the image in original size. ","true","improvement"
"Set Content-Type to json for /api/v3/* (fix #1056)","Proposal to fix #1056. Not sure if this is the best/correct way to fix this, I'm not familiar with Scalatra's processing of HTTP requests/responses. ","true","improvement"
"I have the same question:Unsynchronized metadata read [1.4.180/3]","https://github.com/gitbucket/gitbucket/issues/756  Please help me ","false","duplicate"
"Fix typo in docs",,"true",
"issue #963: build executable war with sbt, fetch jetty jars at build time","this should fix #963 and make the following files obsolete: - /embed-jetty/* - /release/build.xml  just use `sbt executable` to get an executable war. ","true","help wanted,improvement"
"Extend API to allow CRUD labels","Implements some API endpoints. - [List all labels for this repository](https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository) - [Get a single label](https://developer.github.com/v3/issues/labels/#get-a-single-label) - [Create a label](https://developer.github.com/v3/issues/labels/#create-a-label) - [Update a label](https://developer.github.com/v3/issues/labels/#update-a-label) - [Delete a label](https://developer.github.com/v3/issues/labels/#delete-a-label)  These endpoints are almost compatibility of the GitHub's API. For reason, I changed current behavior. Currently GitBucket accepts duplicate label names. But some endpoints required a label name, So I added unique name validation then based on GitHub's behavior.  If the pull request is merged, I will update the Wiki entry accordingly. ","true","feature"
"(fixes #1062) Remove a wrong link","Before:  ![current-version](https://cloud.githubusercontent.com/assets/234142/12483186/de21652a-c096-11e5-9eaa-7582cdffa9fa.gif)  After: ![patched-version](https://cloud.githubusercontent.com/assets/234142/12483193/e5826eb8-c096-11e5-8ae5-f0c563000c75.png) ","true","bug"
"Wrong link exists in issues/labels","on GitBucket 3.10.1 & (95746de)  When there aren't any labels, a wrong link exists in issues/labels. The link is ""Create a new label."". It seems like html fragment for ajax request.  ![current-version](https://cloud.githubusercontent.com/assets/234142/12482699/6c0b6ece-c094-11e5-8a30-bdfd1aa09e46.gif)  In GitHub, description only.  ![in-github](https://cloud.githubusercontent.com/assets/234142/12482715/863a954a-c094-11e5-8f98-4dcd209533c8.png) ","false",
"Fix styles","- Remove unnecessary floating and re-layout sidemenu not to affect wiki textarea/preview etc - Fix some FireFox v.40 layout collapse   Firefox before ![2016-01-21 3 16 22](https://cloud.githubusercontent.com/assets/2328540/12458614/11da4674-bfee-11e5-8bfa-4ed9e089ad35.png)  FireFox after ![2016-01-21 3 16 33](https://cloud.githubusercontent.com/assets/2328540/12458623/18db97e8-bfee-11e5-95d2-643fa6e96268.png) ","true","bug"
"NullPointerException when sending notification","Once in a while, sending notifications throws a `java.lang.NullPointerException`. As far as I can tell, there are no identifiable patterns. The error seems to occur at random.  ``` Jan 15 05:07:44 gitbucket su[4410]: Jan 15, 2016 5:07:44 AM gitbucket.core.util.Mailer$$anonfun$toNotify$2 applyOrElse Jan 15 05:07:44 gitbucket su[4410]: SEVERE: Notifications Failed. Jan 15 05:07:44 gitbucket su[4410]: java.lang.NullPointerException Jan 15 05:07:45 gitbucket su[4410]: Jan 15, 2016 5:07:45 AM org.apache.sshd.server.session.ServerSession <init> Jan 15 05:07:45 gitbucket su[4410]: INFO: Server session created from /5.148.180.6:51043 ``` ","false","bug"
"Fix sidemenu styles not to affect other elements","Remove unnecessary floating and re-layout sidemenu not to affect wiki textarea/preview.  textarea ![2016-01-20 23 43 01](https://cloud.githubusercontent.com/assets/2328540/12452479/efa5cab8-bfd1-11e5-8622-c93e127f5103.png)  preview ![2016-01-20 23 43 46](https://cloud.githubusercontent.com/assets/2328540/12452483/f3c125ca-bfd1-11e5-91ca-8138c94aab99.png) ","true","bug"
"Exception thrown in markdown parsing causes main project page not to load","I recently imported a new project into our gitbucket. When I tried to view the project via the browser, all I got was a blank page. I restarted the gitbucket server on the command line to see if there was any errors being thrown, and found the stacktrace below.  It seems that if the gitbucket markdown parser fails when loading the `readme.md` to show on the main page, it stops the page loading.  Here's the stacktrace:  ``` java.lang.IndexOutOfBoundsException: Index: 4, Size: 4     at java.util.ArrayList.rangeCheck(ArrayList.java:635)     at java.util.ArrayList.get(ArrayList.java:411)     at io.github.gitbucket.markedj.Parser.tok(Parser.java:77)     at io.github.gitbucket.markedj.Parser.parse(Parser.java:35)     at io.github.gitbucket.markedj.Marked.marked(Marked.java:18)     at gitbucket.core.view.Markdown$.toHtml(Markdown.scala:50)     at gitbucket.core.plugin.MarkdownRenderer$.render(Renderer.scala:30)     at gitbucket.core.view.helpers$.renderMarkup(helpers.scala:118)     at gitbucket.core.repo.html.files$$anonfun$apply$7.apply(files.template.scala:138)     at gitbucket.core.repo.html.files$$anonfun$apply$7.apply(files.template.scala:135)     at scala.Option.map(Option.scala:146)     at gitbucket.core.repo.html.files$.apply(files.template.scala:135)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$90$$anonfun$apply$91.apply(RepositoryViewerController.scala:639)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$90$$anonfun$apply$91.apply(RepositoryViewerController.scala:625)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$90.apply(RepositoryViewerController.scala:625)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$90.apply(RepositoryViewerController.scala:624)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1.apply(RepositoryViewerController.scala:624)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1.apply(RepositoryViewerController.scala:622)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.RepositoryViewerControllerBase$class.gitbucket$core$controller$RepositoryViewerControllerBase$$fileList(RepositoryViewerController.scala:622)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$4.apply(RepositoryViewerController.scala:122)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$4.apply(RepositoryViewerController.scala:122)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:34)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$7.apply(RepositoryViewerController.scala:121)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.F... ``` ","false","bug"
"Gitbucket webhook error with diff.algorithm=patience","Hello,  When I test Jenkins Webhook, I don't get any response  ![Gitbucket webhook fail](https://cloud.githubusercontent.com/assets/760008/12443423/bacdb6e6-bf92-11e5-8b25-12230854767e.png)  From the HTTP response, I see this  `java.lang.IllegalArgumentException: Invalid value: diff.algorithm=patience`  Full Java stack trace at https://gist.github.com/hanxue/c9917be96c5d010b8cc5  After removing the `git.config` for `diff.algorithm=patience`, webhook works again.  ### Request 1. Can you allow any valid `diff.algorithm` settings? 2. Display an error message and the stack trace when WebHook test fails, rather than fail silently  Especially on (2), I spent 2 days twiddling with Jenkins and Maven, because I set up webhook with gitbucket in the past and it worked like a charm :smile:  ","false","help wanted,improvement"
"Webhook / API not using JSON HTTP header","When requesting a url  `http://localhost:8080/api/v3/users/hanxue`  The resulting JSON is returned as a HTML document  ``` Response Headers view source Content-Length:216 Content-Type:text/html;charset=UTF-8 Server:Jetty(8.y.z-SNAPSHOT) ```  For example, with the current HTML response, I cannot easily debug with a [JSON viewer extension](https://github.com/tulios/json-viewer), and some applications do not handle the JSON content correctly.   The Content-Type should be set to  `Content-Type: application/json` ","false","improvement"
"hover link anchor in markdown/wiki does not work","When I mouse over headline, browser shows link anchor at the left of headline. However, if I move mouse to left, to click anchor, the icon disappears(so I cannot click it).  ![anchor](https://cloud.githubusercontent.com/assets/1018469/12440826/43907d5c-bf83-11e5-8803-2505119918c2.png) ","false","help wanted,improvement"
"Option to allow guests to add issues",,"false","duplicate"
"LDAP avatar support via jpegPhoto attribute","Many LDAP schemas support the `jpegPhoto` attribute, which can contain an avatar. Would it be possible to add an entry to the LDAP configuration page in gitbucket so that you can choose to use this LDAP attribute (or even a different one) for loading avatars for LDAP users? ","false","LDAP/SSO,feature"
"Change action-comment styles that follow github.","![cap1](https://cloud.githubusercontent.com/assets/18655/12389749/2dd4b7be-be1e-11e5-9a6c-0cd92695a818.png) ![cap2](https://cloud.githubusercontent.com/assets/18655/12389752/2f8a745e-be1e-11e5-9b86-7ef469b4c344.png) ","true","improvement"
"Should not render the README folder","I use version 3.10.1  When the README folder exists, it will be displayed in the content area. Also, if there is a README folder and README.md file, README folder takes precedence.  ![readme_folder](https://cloud.githubusercontent.com/assets/1295639/12377828/f6412e50-bd6d-11e5-9319-6b5394c5ebc1.png) ","false","bug"
"Limit recent updated repositories list. #1011","Limits the number of recently updated repositories to 20 (using the same click to expand mechanism as for user repositories). Additionally the wording of the expand link is improved from 'Show more 3 pages..' to 'Show 3 more repositories...'. ","true","improvement"
"Trello integration","Has anyone looked into integrating Gitbucket with Trello?  Here are examples for how it is done with Github - http://blog.trello.com/github-and-trello-integrate-your-commits/ http://www.slant.co/topics/1810/compare/~trello_vs_trackduck_vs_github-issues https://www.mirosvrtan.me/blog/2012/10/github-and-trello-integration/ ","false","plugin,question"
"Request: Events API","It'd be great if this was in gitbucket. https://developer.github.com/v3/activity/events/  I've been trying to make something similar to this for gitbucket => ""Github News Feed for Dashing"" https://gist.github.com/kimh/8894101   But requires the use of the events api, I haven't found anything to act as a work around. Well except the RSS feed. But we keep our gitbucket viewable via login only, which makes the rss feed not overly usable in a monitoring/dashboard situation. ","false","feature"
"Feature request: change submodule URL on the fly on web UI","Hello,  SSH is used by a lot of git users and it's very helpful to use an ssh key to update all submodules at once. But when we look at a repository on the web UI the link is obviously not understood by the browser so it could be cool to change the ssh://<user>@<hostssh>:29418/<repo> by http://<hosthttp>/<repo> (URL scheme and host taken from headers and if hosthttp == hostssh).  Thanks,  Rémi ","false",
"Feature request: add a group in collaborators","Hello,  It would be great if we could add a group and some users or multiple groups as collaborators in order to manage accurate rights on repositories.  Thanks,  Rémi ","false",
"Create issue per email","Request: I can send an issue per email and gitbucket pull (every hour for example) per pop3/imap an email account and create an issue with the content from the email. ","false","feature,help wanted,plugin"
"ACL for Repository","First of all: I compare in this request gitbucket with redmine and not with github.  Currently Gitbucket support only public and private as ""ACL"". My favorite is, that I can set ACLs for the repository.   Example: anonymous: no access to code repository but can show issues and wiki,  guest (with an account but not a registered for this project): no access to code repository but can create and show issues and wiki,  developer (registered for this project): full access to the project. ","false","duplicate"
"Incorrect behavior when there is an hash sign (#) in the folder/filename","When there is an hash sign (#) in the filename or foldername inside a git repo, I can't browse inside it through GitBucket. When I replace the hash sign by %23 (UrlEncoded) it works. So I think GitBucket needs to URL encode the links to that contain filenames/foldernames. ","false","duplicate"
"[Feature Request] server side hooks or branch protection","I wish the server side hooks such as ""pre-receive"", ""update"" and ""post-receive"". or branch protection (like github, gitlab).  best regards. ","false",
"on windows, jetty lock static content files.","when run server and restart it, sbt say  ``` [error] (*:webappPrepare) java.io.FileNotFoundException: C:\Users\nazoking\git\gitbucket\target\webapp\assets\common\css\gitbucket.css (要求された操作はユーザー マップ セクションで開いたファイルでは実行できません。) [error] Total time: 3 s, completed Jan 12, 2016 5:34:32 PM ```  「ユーザー マップ セクションで開いたファイルには要求された操作を実行できません」is 'The requested operation cannot be performed on a file with a user-mapped section open' on english.  Maybe, it relate http://www.eclipse.org/jetty/documentation/current/troubleshooting-locked-files-on-windows.html  This problem is since xsbt-web-plugin version 1.0. ( fixed on https://github.com/earldouglas/xsbt-web-plugin/issues/156 version 0.9, but it code is removed after plugin rewred on version 1.0... ). gitbucket changed container-plugin from scalatra-sbt 0.3.5 ( that used xsbt-web-plugin 0.7.0 ) to xsbt-web-plugin 2.1.0  my solution is add this to `src/main/webapp/WEB-INF/web.xml`  ``` <context-param>     <param-name>org.eclipse.jetty.servlet.Default.useFileMappedBuffer</param-name>     <param-value>false</param-value> </context-param> ```  but it effect not only windows, and not only under developing ... ","false",
"Move installation guide for Mac to Wiki",,"false","task"
"Run H2 database as server mode",,"true","improvement,wontfix"
"Replace migration system with Solidbase",,"true","task"
"How to configure the log directory","hello,  For example ,  "" java -jar  gitbucket.war --port=8001 --gitbucket.home=gitbucketWork  "" ,  but, How to configure the log directory? ","false","question"
"Update web.xml","The application name was missing from the application listing in the Web Application Manager for Tomcat. ","true","improvement"
"fix long file name text-overflow","fix long file name  text-overflow  before ![2016-01-07 16 29 35](https://cloud.githubusercontent.com/assets/2062713/12165243/9cf700ce-b55f-11e5-8133-995f4884c3ab.png)  after ![2016-01-07 16 54 30](https://cloud.githubusercontent.com/assets/2062713/12165253/a6299e72-b55f-11e5-9e81-657df69888da.png) ","true","improvement"
"h2 database trouble","  the data.mv.db   is increasing, write some useless information into   Within two hours from the 100M has increased to 7-8G  how to fix this? thx ","false","question"
"fix pagination layout",,"true","bug"
"show side menu badge",,"true","bug"
"""#"" character means ""issue"" in Fenced Code Block","In Fenced Code Block, ""#"" must not mean ""issue"".  When I write the sentence below in Fenced Code Block, it should look like as I write.  ``` #123##12 ```  But this is converted to one below.  ``` issue:123#issue:12 ``` ","false","bug,help wanted"
"Fix/image diff","- remove debug info - fix style ","true",
"Add jrebel","i copy a document from http://www.scalatra.org/2.4/getting-started/jrebel.html ","true","task"
"issues about plugin installing","I just followed a plugin's guide and downloaded the .jar files into GITBUCKET_HOME/plugins, but it said ""No plugin detected on your gitbucket installation."", I am using Windows Server 2012 x64 version. ","false",
"Add path and branch name to the page title","This PR adds file path and branch name to the page title. For example, _""dotfiles/.vim/ftdetect at master -  moccos/dotfiles""_.  Rules are the same as GitHub: - _repo-name/file-name at branch-name - repo-owner/repo-name_ for files - _repo-name/path/to/dir at branch-name - repo-owner/repo-name_ for directories - _repo-owner/repo-name_ for project root   - Append branch name only if it is not ""master"" ","true","feature,help wanted"
"MergeServiceSpec more likely to succeed","some time fail because directory is locked. ","true",
"Branch protectection","refs #962 - create `Branches` setting page on repository settings page as `repo/settings/branches`   - move `Default branch` section from `Options` to `Branches`   - create `Protected branches` section     - branch selector.       - create `Branch protection` as repo/settings/branches/:branchName     - option `Protect this branch`     - option `Require status checks to pass before merging`     - option `Include administrators`       - administrators is owner of user repository or manager of group repository ( really ? )     - option `Status checks` (multi select, from found in the last week for this repository)     - `Edit` button on each protected branches. - Protected mark(octicon-shield) on repository `Branches` view page   - disable `delete` button of protected branch. - check on git servlet pre-receive.   - error if branche is procected branch and     - push is force push     - push is delete branch     - push if new commit-id has not `commit-status` ok on `Status-checkes`. - deisable file edit on web if branch is protected and need-status-check.   - only can create new branch...(not yet) - on pull-request page   - show commit-status if context is require status checks to pass.   - disable merge if new commit-id has not `commit-status` ok on `Status-checkes`.   - if some status includes required is not success, merge button is disabled.   - if any required status is success, and some status not includes required, merge button is active, but button color is white.   - if any required status is success, merge button is active, and button color is green.   - update branch button     - merge `base branch` into `head branch`     - update can only user that has `write-access` for `head branch` - Add API https://developer.github.com/v3/repos/#enabling-and-disabling-branch-protection   - (currently available for developers to preview ...) ","true","feature,help wanted"
"fix test ( add specs2-junit )","fix  ``` [info]  cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath  org.specs2.reporter.JUnitXmlPrinter$ java.net.URLClassLoader$1.run(URLClassLoader.java:366) java.net.URLClassLoader$1.run(URLClassLoader.java:355) java.security.AccessController.doPrivileged(Native Method) java.net.URLClassLoader.findClass(URLClassLoader.java:354) java.lang.ClassLoader.loadClass(ClassLoader.java:424) sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) java.lang.ClassLoader.loadClass(ClassLoader.java:357) org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:148) org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:148) org.specs2.control.ActionT$$anonfun$safe$1.apply(ActionT.scala:88) org.specs2.control.ActionT$$anonfun$reader$1$$anonfun$apply$6.apply(ActionT.scala:79) org.specs2.control.Status$.safe(Status.scala:100) org.specs2.control.StatusT$$anonfun$safe$1.apply(StatusT.scala:62) org.specs2.control.StatusT$$anonfun$safe$1.apply(StatusT.scala:62) scalaz.syntax.ToApplicativeOps$$anon$1.self$lzycompute(ApplicativeSyntax.scala:29) scalaz.syntax.ToApplicativeOps$$anon$1.self(ApplicativeSyntax.scala:29) scalaz.syntax.ToApplicativeOps$ApplicativeIdV$$anonfun$point$1.apply(ApplicativeSyntax.scala:33) ``` ","true",
"View repository from smartphone is not responsive","When i go to the repository from my smartphone, is not showing responsive, the messages are too large and i have to zoom out, the right sidebar menu is over the code. It seems that CSS is not well defined for smartphones. ![screenshot_20151230-120042](https://cloud.githubusercontent.com/assets/5315258/12049879/87be6c38-aeed-11e5-9071-2245d1425a27.png) ![screenshot_20151230-120103](https://cloud.githubusercontent.com/assets/5315258/12049878/87bd5384-aeed-11e5-9f30-a46a3b14e9aa.png) ","false","improvement"
"how to wiki  support task list","I am work with gitbucket 3.9 how to insert task list in wiki? I'm write task list like flow style but not work.  ``` - [x] @mentions, #refs, [links](), **formatting**, and <del>tags</del> are supported - [x] list syntax is required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item ``` ","false","feature"
"Markdown Link doesn't work in Wiki","If you write `(hoge)[hoge]` inside of wiki, it generates a link to `wiki/_blob/hoge` which seems never exists due to naming rule of wiki pages. However, if you write `[[hoge|hoge]]`, it generates a link to `wiki/hoge`. ","false",
"update sshd dependency, rsa keyprovider as default","update sshd dependency to version 1.0.0 migrate to new sshd api change the default key provider algorithm to RSA ","true","improvement"
"StackOverflowError on /dashboard/pulls","i use version 3.8.  ``` java.lang.StackOverflowError     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:338)     at scala.slick.driver.H2Driver$QueryBuilder.scala$slick$driver$JdbcStatementBuilderComponent$OracleStyleRowNum$$super$expr(H2Driver.scala:70)     at scala.slick.driver.JdbcStatementBuilderComponent$OracleStyleRowNum$class.expr(JdbcStatementBuilderComponent.scala:509)     at scala.slick.driver.H2Driver$QueryBuilder.expr(H2Driver.scala:76)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder$$anonfun$expr$9.apply(JdbcStatementBuilderComponent.scala:342)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder$$anonfun$expr$9.apply(JdbcStatementBuilderComponent.scala:342)     at scala.slick.util.SQLBuilder$$anonfun$sep$1.apply(SQLBuilder.scala:39)     at scala.slick.util.SQLBuilder$$anonfun$sep$1.apply(SQLBuilder.scala:37)     at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)     at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)     at scala.slick.util.SQLBuilder.sep(SQLBuilder.scala:37)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:342)     at scala.slick.driver.H2Driver$QueryBuilder.scala$slick$driver$JdbcStatementBuilderComponent$OracleStyleRowNum$$super$expr(H2Driver.scala:70)     at scala.slick.driver.JdbcStatementBuilderComponent$OracleStyleRowNum$class.expr(JdbcStatementBuilderComponent.scala:509)     at scala.slick.driver.H2Driver$QueryBuilder.expr(H2Driver.scala:76)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder$$anonfun$expr$9.apply(JdbcStatementBuilderComponent.scala:342)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder$$anonfun$expr$9.apply(JdbcStatementBuilderComponent.scala:342)   :     at scala.slick.driver.H2Driver$QueryBuilder.scala$slick$driver$JdbcStatementBuilderComponent$OracleStyleRowNum$$super$expr(H2Driver.scala:70)     at scala.slick.driver.JdbcStatementBuilderComponent$OracleStyleRowNum$class.expr(JdbcStatementBuilderComponent.scala:509)     at scala.slick.driver.H2Driver$QueryBuilder.expr(H2Driver.scala:76)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder$$anonfun$expr$9.apply(JdbcStatementBuilderComponent.scala:342)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder$$anonfun$expr$9.apply(JdbcStatementBuilderComponent.scala:342)     at scala.slick.util.SQLBuilder$$anonfun$sep$1.apply(SQLBuilder.scala:39)     at scala.slick.util.SQLBuilder$$anonfun$sep$1.apply(SQLBuilder.scala:37)     at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)     at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)     at scala.slick.util.SQLBuilder.sep(SQLBuilder.scala:37)     at scala.slick.driver.JdbcStatementBuilderComponent$QueryBuilder.expr(JdbcStatementBuilderComponent.scala:342) ``` ","false","bug"
"Move to xsbt-web-plugin from scalatra-sbt",,"false","task"
"Upgrade c3p0 and tweak default config to avoid Tomcat issues","Adds a standard typesafe-config reference.conf file that sets c3p0 config to prevents Tomcat memory leaks on hot-redeploy/shutdown.  See    http://www.mchange.com/projects/c3p0/#configuring_to_avoid_memory_leaks_on_redeploy    http://www.mchange.com/projects/c3p0/#tomcat-specific  This new config can be overridden in an application.conf or c3p0.properties file.  ( See http://www.mchange.com/projects/c3p0/#configuration_precedence )  Updates c3p0 version to c3p0-0.9.5.2, which fixes that leads to unnecessary String allocation when logging via slf4j. ","true","improvement"
"bug: sharp-number in link label and url","( repository test/test, issue 1 is exists, but issue 34 is not exists)  When I post markdown  ``` [testJob #1](http://jenkins/testJob/#1) [testJob #1](http://jenkins/testJob/) [testJob](http://jenkins/testJob/#1)  [testJob #34](http://jenkins/testJob/#34) [testJob #34](http://jenkins/testJob/) [testJob](http://jenkins/testJob/#34) ```  preview html is expected  ``` <a href=""http://jenkins/testJob/#1"">testJob #1</a> <a href=""http://jenkins/testJob/"">testJob #1</a> <a href=""http://jenkins/testJob/#1"">testJob</a>  <a href=""http://jenkins/testJob/#34"">testJob #34</a> <a href=""http://jenkins/testJob/"">testJob #34</a> <a href=""http://jenkins/testJob/#34"">testJob</a> ```  but actual is  ``` <a href=""http://jenkins/testJob/issue:1"">testJob </a><a href=""http://gitbucket/test/test/issues/1"">#1</a> <a href=""http://jenkins/testJob/"">testJob </a><a href=""http://gitbucket/test/test/issues/1"">#1</a> <a href=""http://jenkins/testJob/issue:1"">testJob</a>  <a href=""http://jenkins/testJob/issue:34"">testJob issue:34</a> <a href=""http://jenkins/testJob/"">testJob issue:34</a> <a href=""http://jenkins/testJob/issue:34"">testJob</a> ``` ","false",
"i upgrade new gitbucket,but  *.md file cannot render to html","how to setting ? ","false","wontfix"
"Where can find a complete installation documentation ?","I read the page https://github.com/gitbucket/gitbucket but the deployment in ServiceMix (Jetty web pax) causes a NullPointerException and manual start java -jar gitbucket.war --port = 8080 = gitbucket --gitbucket.home displays a page containing only / tmp  C:\gitbucket> sbt  unresolved dependency: org.fusesource.jansi#jansi;1.11: not found Error during sbt execution: Error retrieving required libraries   (see D:\Users\4004012.sbt\boot\update.log for complete log) Error: Could not retrieve jansi 1.11  howto configure the build to use th dévolopper maven settings ? the maven repositories aren't accessed directly but through the internal nexus server. all devolopers have, in their .m2 folder, a settings.xml that defines this nexus server  I'm just looking to test the solution. but I can not execute it.  A+JYT ","false","question"
"Added automatic rescaling to avatar images (Fixes #835)","It adds a dependency on https://github.com/coobird/thumbnailator which seems the smaller dependency for this type of image processing. ","true","feature"
"404 on deleted repository","Deleting a forked repository will not remove the entries in the activity list. If i click on the link in the activity list this will redirect me in an 404 page.  Steps: Create Group1/Repo1 Fork Group1/Repo1 in simone/Repo1 Delete simone/Repo1  Activity logs continue to show me: simone forked Group1/Repo1 to simone/Repo1 30 minutes ago  open the simone/Repo1 link, load a 404 page ","false","wontfix"
"Limit ""Recent updated repositories"" list","I've moved 84 repositories to gitbucket, ""Your repositories"" show only 20 entry but ""Recent updated repositories"" show 84 rows. It's possible to limit this list to 20 like the other one?  Many thanks! ","false","improvement"
"support legacy route of List Statuses for a specific Ref api","because jenkins pull-request pulugin use it.  ","true","improvement"
"(fixes #1008) pusher of webhook push event is not same as github's it",,"true","improvement"
"pusher of webhook push event is not same as github's it","https://developer.github.com/v3/activity/events/types/#pushevent  github is   ```   ""pusher"": {     ""name"": ""baxterthehacker"",     ""email"": ""baxterthehacker@users.noreply.github.com""   }, ```  gitbucket is  ``` ""pusher"":{   ""login"":""nazoking"",   ""email"":""nazoking@devnull"",   ""type"":""User"",   ""site_admin"":false,   ""created_at"":""2014-07-03T10:48:02Z"",   ""url"":""http://localhost:8080/api/v3/users/nazoking"",   ""html_url"":""http://localhost:8080/nazoking"" } ```  gitbuckt's pusher is ApiUser class. but github's pusher is not ApiUser class. and maybe sender is ApiUser type  ref: because of this, jenkins pull request plugin make error like below  ``` Subscriber org.jenkinsci.plugins.github.webhook.subscriber.DefaultPushGHEventSubscriber failed to process PUSH hook, skipping... net.sf.json.JSONException: JSONObject[""name""] not found.     at net.sf.json.JSONObject.getString(JSONObject.java:2040)     at org.jenkinsci.plugins.github.webhook.subscriber.DefaultPushGHEventSubscriber.onEvent(DefaultPushGHEventSubscriber.java:70)     at org.jenkinsci.plugins.github.extension.GHEventsSubscriber$4.applyNullSafe(GHEventsSubscriber.java:134)     at org.jenkinsci.plugins.github.extension.GHEventsSubscriber$4.applyNullSafe(GHEventsSubscriber.java:130)     at org.jenkinsci.plugins.github.util.misc.NullSafeFunction.apply(NullSafeFunction.java:18)     at com.google.common.collect.Iterators$8.next(Iterators.java:812) : ``` ","false",
"Username's validate rule is not correct.","Create user require username <=100 char,but actually if username>40 you can't create repository because it require owener <=40. ","false","bug"
"How to hosting maven repos on gitbucket?","How to hosting maven repos on gitbucket? ","false","question"
"Typo in RepositorySettingsController","Line:33 repositoryName->Description should be repositoryName->Repository Name ","false","bug"
"Editing a web hook that contains the protocol fails","In 3.9 editing a webhook that contains https:// fails with 404. ","false","bug,help wanted"
"Request: Ability to have issues and wiki public/private","While it's not featured on GitHub, the ability to set the issues or wiki parts as public or private independently of the repository would be extremely useful.  Eg. A private repo with a public issue tracker and public wiki would be useful for a project where source is not available to the public, but releases are, where public users can report bugs.  Perhaps by way of a config in the repository settings where each can be declared public private, and a default feature for public landings. Eg, if repository is private, display the wiki by default instead. ","false",
"View md file with error:java.lang.IndexOutOfBoundsException: Index: 3, Size: 3","Version:3.8  ``` java.lang.IndexOutOfBoundsException: Index: 3, Size: 3     at java.util.ArrayList.rangeCheck(ArrayList.java:604)     at java.util.ArrayList.get(ArrayList.java:382)     at io.github.gitbucket.markedj.Parser.tok(Parser.java:81)     at io.github.gitbucket.markedj.Parser.parse(Parser.java:31)     at io.github.gitbucket.markedj.Marked.marked(Marked.java:18)     at gitbucket.core.view.Markdown$.toHtml(Markdown.scala:47)     at gitbucket.core.plugin.MarkdownRenderer$.render(Renderer.scala:23)     at gitbucket.core.view.helpers$.renderMarkup(helpers.scala:107)     at gitbucket.core.repo.html.blob$$anonfun$apply$4.apply(blob.template.scala:87)     at gitbucket.core.repo.html.blob$$anonfun$apply$4.apply(blob.template.scala:84)     at play.twirl.api.TemplateMagic$.defining(TemplateMagic.scala:13)     at gitbucket.core.repo.html.blob$.apply(blob.template.scala:84)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(RepositoryViewerController.scala:304)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(RepositoryViewerController.scala:293)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45.apply(RepositoryViewerController.scala:293)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45.apply(RepositoryViewerController.scala:291)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44.apply(RepositoryViewerController.scala:291)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44.apply(RepositoryViewerController.scala:288)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:126)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22.apply(RepositoryViewerController.scala:288)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:722) ``` ","false","bug,help wanted"
"Keystore configuration","On Windows with Jetty (9.2.10) configuration of keystore location using the UI doesn't work. I have had to use `""-Djavax.net.ssl.trustStore=C:\Path\to\keystore""` in the .ini file to get it to work.  The error when keystore location is configured via UI (because of missing trust for CA): `INFO: LDAPException: I/O Exception on host xxx.xxx.xxx, port 636 (91) Connect Error javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target dec. 08, 2015 1:19:32 PM gitbucket.core.service.AccountService$class ldapAuthentication INFO: LDAP Authentication Failed: System LDAP authentication failed.`  When the keystore location is configured using `-Djavax.net.ssl.trustStore` LDAP authentication works fine. ","false",
"URL inside WebHook request","When GitBucket runs behind a reverse proxy, the proxied backend URL is used in a payload of WebHook requests as follows:  ``` ""pusher"": { ""html_url"":""http://www.example.com:8080/gitbucket/username"" ... } ```  It would be nice if Base URL specified in System Settings is used here. ","false",
"Move to Bootstrap3 with GitHub theme",,"true","improvement"
"Failure on repository transfer","I have just faced something that looks like #544 but with a more problematic end.  In my case I faced the same kind of error while transferring a repository from a user account to a group account. The error was quite the same but unfortunately I didn't copied it.  Result of that was, that the initial repository was still shown in the user account but with no content anymore. Nothing appeared under the group. I then tried to delete the repository and received the attached error.  [gitbucket-delete-repo-error.txt](https://github.com/gitbucket/gitbucket/files/45484/gitbucket-delete-repo-error.txt)  This repository was a recent one thus no important data has been lost (issues, PR, ...) but if occures also on transfer and not just on deletion, severity of the #544 issue and of this one has probably to be raised. ","false","bug,duplicate"
"Pull requests visibility","On ""Pull requests"" link on the top of website as an admin I can see only pull requests i made myself. Filter is set to: ""is:pr is:open author:john.doe"" and I can't change it. I think as an admin role I should see all pull requests from any user. ","false","duplicate"
"Wrong link in email","The link ""View it on GitBucket"" point to the internal address instead of my exposed external address. Example: I have setup GitBucket on port 8080, prefix /git and a SSL reverse proxy with Apache from subdir /git to http://localhost:8080/git. When an issue is open, the link point to http://localhost:8080/git/<user>/<repo>/issues/<number> instead of https://<external address>/git/<user>/<repo>/issues/<number>.  Is there a workaround?  Thanks Jim  Edit: It affects clone URL too and even if I start gitbucket with option --https=true, I have a HTTP clone URL instead of HTTPS. I'm using GitBucket 3.8 ","false",
"extensibility is probably the right word?",,"true",
"A sidebar and footer for the wiki","Simple wiki pages used as a sidebar and footer (markdown file `_Sidebar.md` and `_Footer.md`) for the wiki.  Github references: `Sidebar`: https://help.github.com/articles/creating-a-sidebar/ `Footer`: https://help.github.com/articles/creating-a-footer/  ![wiki-sidebar-footer](https://cloud.githubusercontent.com/assets/47677/11631799/f85d1206-9cea-11e5-966a-f3b7b7fc9cd2.png) - the sidebar is rendered below the pages index. - if you click on page index ""_counter_"" you can collapse or expand the page list. - the footer is rendered below the wiki page content. - a direct link to edit the sidebar/footer. ","true","feature,help wanted"
"Doesn't create a news feed, when I force push.","Hello. I'm using gitbucket 3.8.  Gitbucket doesn't create a news feed, when I force push.  I tried same operation (force push) on GitHub for confirm GitHub behavior. GitHub create a new public activity,even if I force push.  Thank you. ","false","bug"
"fix lost web hook events on repository renamed.","sorry. I'd forgotten it.  Q. why you use delete-insert? not use update? ","true","bug"
"NotFound error when access git-subtree-split link URL","using GitBucket 3.7    When using a subtree, git-subtree-split link URL of the commit history is subRepository, not mainRepository. Therefore a NotFound error when I access a link.    ---  サブツリーを使用した際、コミット履歴のgit-subtree-splitのリンクURLが、メインリポジトリではなく、 サブリポジトリのURLになってしまいます。 そのため、アクセスするとNotFoundエラーになってしまいます。   ","false",
"""raw"" button directs to wrong URL","Hi takezoe,  I've been using gitbucket for a couple of weeks now and tried to setup a maven on top of it: http://kwebble.com/blog/2014/02/19/use-github-to-host-your-own-maven-repo  There are no special features needed in gitbucket in order to support it. If the ""raw"" button would correspond to the one in github. A click on it leads to a ""...raw/master/..."" URL e.g: https://github.com/gitbucket/gitbucket/raw/master/doc/activity.md  But in gitbucket it directs the user to ""blob/master"" + ""?raw=true"" URL and downloads the content: https://github.com/gitbucket/gitbucket/blob/master/doc/activity.md?raw=true  Are there any chances to get a similar implementation to the one in github? ","false","improvement"
"User not deleted","If I log with user account and try to delete it from Account Profile, user is only disabled. You can see it if you click on Include removed users from Manage Users screen. When user is deleted, all user's repos are preserved.  Seen on GitBucket 3.8  Thanks Jim ","false","wontfix"
"Unable to completely delete group","As admin, if I click on group name from Group Management, I see a Edit Group button and have access to deleting group. If I delete the group, all the users are removed from the group, but the group is still visible from Group Management and I can't completely delete the group, only disable it.  I'm using GitBucket 3.8  Thanks Jim ","false","wontfix"
"User deleted not automatically deleted from group","If I delete a user that belongs to some groups, I can see the user when editing group after deletion. If I click on user name, I see a page with only ""Not found"" displayed under ""GitBucket Header Bar"". ![image](https://cloud.githubusercontent.com/assets/7810954/11099909/2244ed38-887c-11e5-8233-ebff8847fc91.png) I can edit group and remove user manually.  Thanks Jim ","false","bug,help wanted"
"Typo error in System Settings","With version 3.8, I see a typo in System Settings -> Communication:  ![image](https://cloud.githubusercontent.com/assets/7810954/11099341/c2bbbee4-8878-11e5-9bbd-9fa151a930da.png)  Thanks Jim ","false",
"Create user with restricted access","Is it possible to create user with restricted access?  Example: UserA is a developper and have access to everything (Code, Issues, Pull Requests, Wiki) and UserB is a tester and have access to Issues and Wiki only.  Can be useful in a business environment where you have a department that only test product and need to communicate with developer.  Thanks Jim ","false",
"Error when open folder with special characters.","1. If the folder name has ended with #, the error will appear when open.    java.lang.NullPointerException    at gitbucket.core.util.JGitUtil$CommitInfo.<init>(JGitUtil.scala:81)    at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$85$$anonfun$apply$86.apply(RepositoryViewerController.scala:606)    at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$85$$anonfun$apply$86.apply(RepositoryViewerController.scala:586)    at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)    at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$85.apply(RepositoryViewerController.scala:586)    at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$85.apply(RepositoryViewerController.scala:585)    at scala.Option.map(Option.scala:146) 2. If the folder name has ended with %, the error will appear when open.    Bad Request  Your browser sent a request that this server could not understand.  Please check and fix it.  Best Regards. ","false","bug,help wanted"
"Send webhook on create pull request review comment",,"true","help wanted,improvement"
"Provide fixed url for pull request tabs",,"false","help wanted,improvement"
"Exec side: change background colour of ""Letters"" tile","I'd had feedback on the need to shift this top left (thanks for having done so). For me, it would also help if it had a slightly coloured background so that it would stand out once I returned to the Digital Safe page - otherwise I wouldn't be entirely sure where it was (since it looks like a page of tiles, which is what I saw before). Would it be possible to give this some pinkish/reddish/you decide because you're the designer tone so that it stands out? ","false",
"Exec side: additional text beside ""Change password"" on ""My details"" page","As per the Subscriber side, just in case people think that ""change password"" relates to the Masterkey, could we include a sentence after or under ""Change Password"" so that it reads:  This is NOT the Masterkey: it is the password you use when you initially log in to the site. The Masterkey (which you use to access the Digital Safe) cannot be changed once it is set. ","false",
"Subscriber side: change text on ""contact us"" page","This is the page which wouldn't change when I amended the text. Could you replace the introductory text with the following:  Please use the form below to get in touch with us if you have any queries or comments. You can also e-mail us at support@safeinoneplace. Either way, we will get back to you within 24 hours. Alternatively, if you would prefer to speak with someone directly, fill in the form and leave a number and one of the team will call you within one working day. ","false",
"Subscriber side: additional text required beside ""Change password""","Just in case people think that ""change password"" relates to the masterkey, could we include a sentence after or under ""Change Password"" so that it reads:   (This is NOT your Masterkey: it is the password you use to log in to the site. Your Masterkey cannot be changed once it is set"") ","false",
"Subscriber side: ""Account overview"" title needs to be replaced with ""My details""","On the top navigation we have ""My details"" and the page which opens has the title ""Account overview"". Can we change the title of the page to ""My Details"". ","false",
"GFM line breaks support in Markdown","It will be supported in markedj 1.0.5. ","false","help wanted,improvement"
"Create pull request from top of repository viewer",,"false","feature"
"Can't comment same line after comment in diff view",,"false","bug"
"Count COMMIT_COMMENT as issue comment",,"true","improvement"
"How to update to newer versions?","How update a running gitbucket installation without data loss? Is all relevant data saved in GITBUCKET_HOME directory?  Just replace the gitbucket.war file? Anything else to consider? ","false","question"
"generic ssh user","ssh urls are generated by the user name but I think, if we use a generic user for ssh (ex: git@gitbucket.machine.com), it would be better.  ","false","improvement"
"File mode changes considered renames","I did change the file mode for a couple of files. Gitbucket however thinks they were renamed:  `File renamed without changes`  They weren't. ","false","improvement"
"Still cannot fork big repository","I have a repository about 1GB size. I've got timeout error every time I'm trying to fork it. It copies about half of disk content in my repository folder. ","false","help wanted,improvement"
"Correct typo on system administration page.",,"true","bug"
"""Recently updated"" issue sorting does not account for comments","Using the ""Recently updated"" sorting for issues seems to ignore comments. Comments are not considered an update to issues, when they should be.  Same may apply to label updates.","false","improvement"
"Connection pool suitable for production?","Please use a connection pool that is suitable for production too, e.g. https://github.com/brettwooldridge/HikariCP .  The actual c3p0 is definitely not suitable for production.  Thank you.  ","false",
"Optimize the build artifacts.","Please optimize the build artifacts depending on how they will be used/deployed, in order to be more efficient and gain some performance too: - Compress JavaScript and CSS resources - Don't include the servlet api and jetty classes in the default WAR file what people will use to deploy to some other container like Tomcat, or GlassFish. - for running it directly a JAR file is enough (with embedded Jetty) - build a different WAR file with the DB in encrypted mode (for the users that need it). ","false","improvement"
"Update to the latest h2database","Please update to the latest h2database version (1.4.190 for now).  The actual used 1.4.180 is more than 1,5 years old. ","false","help wanted,improvement"
"Jetty JARs should not be checked in but fetched at build.","The GitBucket repo seems to contain JAR files in the `/embed-jetty` directory.  These should be **fetched** at build time, not checked in, like the rest of the required JARs. ","false","task"
"Protected branches","Feature request.  https://github.com/blog/2051-protected-branches-and-required-status-checks https://help.github.com/articles/configuring-protected-branches/ https://help.github.com/articles/enabling-required-status-checks/ - create `Branches` as repo/settings/branches   - move default-branch setting to here   - create `Protected branches` section     - branch selector.       - create `Branch protection` as repo/settings/branches/:branchName     - option `Protect this branch`     - option `Require status checks to pass before merging`     - option `Include administrators`       - administrators is owner of user repository or manager of group repository ( really ? ..)     - option `Status checks` (multi select, from found in the last week for this repository)     - `Edit` button on each protected branches. - Protected mark(octicon-shield) on Branches page - check on pre-receive   - error if branche is procected branch and     - force push     - delete   - push if new commit-id has not `commit-status` ok on `Status-checkes`. - deisable file edit on web.   - only can create new branch...(gitbucket has not this feature) - on pull-request page   - show commit-status if context is require status checks to pass.   - deisable merge if new commit-id has not `commit-status` ok on `Status-checkes`. - Add API https://developer.github.com/v3/repos/#enabling-and-disabling-branch-protection ","false","feature"
"Update PullRequestsController.scala","when the forked repository is the original repository(forkedRepository.repository.originRepositoryName&originUserName is None),then 404 will occur,so add the if to solve it. ","true","bug"
"Creating repositories over API","Implements two API endpoints imitating https://developer.github.com/v3/repos/#create:  `POST /user/repos` and `POST /groups/:group/repos`.  While Github's API uses `/orgs/:org/repos` for creating group repositories, the URL has been changed to `/groups/:group/repos` in order to adhere to Gitbucket's naming rules.  The following parameters are accepted: - `name`. Required. The name of the repository - `description`. A short description of the repository - `private`. Whether the repository should be private. Default: `false` - `auto_init`. Whether an initial commit with a README should be made. Default: `false`  If the pull request is merged, I will update the [Wiki entry](https://github.com/gitbucket/gitbucket/wiki/API-WebHook) accordingly. ","true","feature"
"Only root user has access to anything","Hello,  I've setup gitbucket on my mini server and it looks all really nice, indeed you even have a quite good user management.  But there's one major problem: only the root user has access. Other users don't have access to their groups, web interface, or can not clone anything from their own repositories. That's a little disappointing, I can use this in my case I guess from root user too, but I find this just so wrong, and indeed, it does limit the flexibility if I wanna incorporate more contributors than really just myself. ","false","duplicate"
"Warn before nuking user's repo","Gitbucket should really, really warn that _disabling_ an user doesn't disable the user, but also deletes all their repositories :( ","false","improvement"
"Notes of pull request not loaded.","After I add some inline comments in pull request, the comments seems fine in edit page. But when I reopen the pull request page after editing, I can not find the inline comments. -  Add inline comments.  ![image](https://cloud.githubusercontent.com/assets/973339/10655804/b59b5fd6-78aa-11e5-92d1-b75eec2a46de.png) -  After editing. the inline comments is gone even I've check the ""show notes"" check box.  ![image](https://cloud.githubusercontent.com/assets/973339/10655832/ea430a04-78aa-11e5-9382-d99a3bb4dd65.png) -  I can find the comments in Conversation Tab.  ![image](https://cloud.githubusercontent.com/assets/973339/10655860/2fd98e4e-78ab-11e5-928f-fed7cdb590c2.png) -  I've check the code, it is not a javascript issue, the inline comments html code hasn't been loaded. ","false",
"Issue-edit menu: Preview (missing) + Edit-window-size (too small)","I'm editing my issues a lot (which might be not the case for all the other users of gitbucket) and when i do that, i'm frequently having problems formatting my code (with my non-perfect markdown skills). The preview-window, present in the menu when creating a new issue helps a lot but is missing when in edit-mode. Is it possible and desired to add this?  Also: when editing issues, the edit-window is super tiny and it isn't fun to work with. This is also different in the menu when first creating a new issue. Could the window-size be increased?  It kind of boils down to the question, if the original issue-creation menu isn't a preferred menu when editing issues too (compared to the state now). I would like to see both menus aligned.  **EDIT:** I just recognized the possibility of increasing the size of the edit-window, but i would like it to be automatically increased/maximized (there is some upper limit). ","false",
"markdown issue","After updated to gitbucket 3.7 which updated markdown processor, lots of document page are broken, the error message shows as below.  ``` java.lang.IndexOutOfBoundsException: Index: 6, Size: 6     at java.util.ArrayList.rangeCheck(ArrayList.java:635)     at java.util.ArrayList.get(ArrayList.java:411)     at io.github.gitbucket.markedj.Parser.tok(Parser.java:81)     at io.github.gitbucket.markedj.Parser.parse(Parser.java:31)     at io.github.gitbucket.markedj.Marked.marked(Marked.java:18) ``` ","false","duplicate"
"Commit id in issue","Commit id in issue is not shortened 7 letters ","false","bug"
"Cross-repository referencing doesn't work","Github has some nice functions for this:  https://github.com/blog/967-github-secrets#cross-repository-issue-references https://github.com/blog/1439-closing-issues-across-repositories  Would be very cool if that worked in Gitbucket aswell :) ","false","feature"
"Can't add collaborators to repos owned by a group","It unconditionally allows members of the group access, but I cannot set additional collabroators :( ","false",
"Can't change a repository name, if it changed from uppercase to lower case or vice versa.","Hello.  FileExistsException will occur,if repository name changed from uppercase to lower case or vice versa. - Example  | Before repository name | After repository name | | --- | --- | | TestRepository | testRepository | | Testrepository | TestRepository |  My environment is below.  GitBucket3.7 OS:Windows7 WebServer: Apache 2.4 + Tomcat 8.0  Thanks. ","false","improvement,pending"
"Transferring issues between repos","It would be very very useful if you were able to transfer issues to other repositories :) ","false","feature,pending,plugin"
"After upgrade to 3.7 some readme file couldn't be rendered","Old version 3.6， new version 3.7， The error msg：  ``` java java.lang.IndexOutOfBoundsException: Index: 6, Size: 6     at java.util.ArrayList.rangeCheck(ArrayList.java:604)     at java.util.ArrayList.get(ArrayList.java:382)     at io.github.gitbucket.markedj.Parser.tok(Parser.java:81)     at io.github.gitbucket.markedj.Parser.parse(Parser.java:31)     at io.github.gitbucket.markedj.Marked.marked(Marked.java:18)     at gitbucket.core.view.Markdown$.toHtml(Markdown.scala:47)     at gitbucket.core.view.helpers$.markdown(helpers.scala:94)     at gitbucket.core.wiki.html.page$.apply(page.template.scala:73)     at gitbucket.core.controller.WikiControllerBase$$anonfun$4$$anonfun$apply$4$$anonfun$apply$5.apply(WikiController.scala:49)     at gitbucket.core.controller.WikiControllerBase$$anonfun$4$$anonfun$apply$4$$anonfun$apply$5.apply(WikiController.scala:48)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.WikiControllerBase$$anonfun$4$$anonfun$apply$4.apply(WikiController.scala:48)     at gitbucket.core.controller.WikiControllerBase$$anonfun$4$$anonfun$apply$4.apply(WikiController.scala:45)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.WikiController.referrersOnly(WikiController.scala:14)     at gitbucket.core.controller.WikiControllerBase$$anonfun$4.apply(WikiController.scala:45)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:722) ``` ","false","bug"
"Move repository to organization","- [x] gitbucket-gist-plugin repository - [x] gitbucket-news repository - [x] gitbucket repository - [x] Travis configuration - [x] gitter room - [x] gitter Japanese room - [x] URL in documents ","false","task"
"Ref link from Issue to PR is invalid","- OS: Mac OS X 10.10.5 - GitBucket: HEAD (541b7e2)  It might be same problem with #924.  GitBucket generates a link from an Issue to a PR when the PR references the Issue. However, the created link seems wrong because it is not `/project/pull/#{PR}` but `/project/issue/#{Issue}`.  I confirmed there were two problems. 1. Before PR is closed, the link brings me to a strange page. It looks like a Issue detail page and is different from the PR page. 2. After PR is closed, the link throws NoSuchElementException.  ![screenshot](https://cloud.githubusercontent.com/assets/4208984/10519433/b175eb56-73a0-11e5-8cf6-49ecd14d7af1.png) ","false","bug,help wanted"
"Ref link from Issue to PR is not generated.","- OS: Mac OS X 10.10.5 - GitBucket: HEAD (541b7e2a79769cc0f4df0ebe1775858844a20d54)  When I create a new issue (B) which description contains a issue number (A), GitBucket automatically generates a refrence link (A) -> (B) in the issue (A).  However, when I create a new PR (C) which description contains the issue number (A), GitBucket does not generate the link (A) -> (C). And if I edit the PR's description (no modification is required. just click [Edit] and [Update Comment] button), the reference link (A) -> (C) is generated in turn.  ![screenshot](https://cloud.githubusercontent.com/assets/4208984/10519018/cb7813be-739e-11e5-94b5-f541df1b169d.png) ","false","bug,help wanted"
"Relative links in markdown files are always rendered with ""raw=true""","Hello,  An example like this in a file.md: [Hosts file](./docs/hosts_file.md)  Gives this link: http://gitbucket.localdomain/gitbucket/project/documentation/blob/master/docs/hosts_file.md?raw=true  This happens with every link done in gitbucket 3.7. Looking in the code i see that in src/main/scala/gitbucket/core/view/Markdown.scala line 113; fixUrl is always called with isImage parameter = True . I didn't tried, but seems like a good points to start looking. Thanks ","false","bug,help wanted"
"Detect links and render them as HTML links in repo description","This fixes #943  ","true","feature,help wanted"
"Detect URLs in project description","...And render them as hyperlinks. As on GitHub. ","false",
"gitbucket does correctly use --port parameter","Tested on 3.7, launch gitbucket via `java -jar gitbucket.war --port=9090`  Open your browser on http://localhost:9090. The gitbucket homepage is rendered with many errors because most URLs use a bad port number of 8080. ","false",
"feature/can select event trigger of webhook.","Can select event trigger. ![Add/Edit](https://cloud.githubusercontent.com/assets/18655/10453205/5a71eae2-71e5-11e5-9fd0-afb02508480c.png)  Can check detail of test hook request/responce. ![Test Hook Detail](https://cloud.githubusercontent.com/assets/18655/10453204/5a70e08e-71e5-11e5-80b8-9ce332804613.png)  Can check WebHook List ![List](https://cloud.githubusercontent.com/assets/18655/10453206/5a7d58d2-71e5-11e5-80bc-df4ea0f8a9d3.png) ","true","feature,help wanted"
"(ref #933) fix/Unable to download large file","I think we should be avoided that an exception ( separate issue from that gitbucket managing a large file with git ). The cause of this exception is that FileUtil.isLarge has not compatibility with ObjectLoader.isLarge.  and I Think that 1. JGitUtil.getContentFromId(git: Git, id: ObjectId, fetchLargeFile: Boolean) to deprecated 2. `getContentFromId` split to 2 methods. `getObjectLoaderFromId` for large binary, and `getContentTextFromId` for small text contents.  This patch added only `getObjectLoaderFromId`. ","true","improvement"
"Support uploading PDF files","Support uploading PDF files from a issue comment form. See also https://github.com/blog/2061-attach-files-to-comments and #12 . ","true","feature,help wanted"
"Change place of buttons","Change place of Comment button and Close button. Additionally, set tabindex. ","true","improvement"
"add getAccountByGroupName method","add getAccountByGroupName method ","true","improvement,pending"
"Bind to network interface","Is it possible to have Jetty bind to a network interface instead of all of them? e.g. one could bind to the loopback interface, in case Gitbucket only runs behind a reverse proxy. ","false","question"
"Deploy gitbucket-assembly.jar into Maven central or CDN",,"false","task"
"How to change the font style?","How to change the font style? ","false","question"
"Unable to download large file","I checked in a large file (900mb) into the git repo and was trying to download it as raw content.  http://git.vagrant.v8:8080/gitbucket/root/test-big/blob/master/Fedora-Cloud_Atomic-x86_64-22.iso  but fails with below stack trace:  ``` org.eclipse.jgit.errors.LargeObjectException: b8e8d679fa3c4f9b45aefd84cae1261aa99d04a7 exceeds size limit     at org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getCachedBytes(LargePackedWholeObject.java:98)     at org.eclipse.jgit.lib.ObjectLoader.getBytes(ObjectLoader.java:100)     at gitbucket.core.util.JGitUtil$$anonfun$getContentFromId$1.apply(JGitUtil.scala:719)     at gitbucket.core.util.JGitUtil$$anonfun$getContentFromId$1.apply(JGitUtil.scala:714)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:17)     at gitbucket.core.util.JGitUtil$.getContentFromId(JGitUtil.scala:714)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(RepositoryViewerController.scala:296)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(RepositoryViewerController.scala:293)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45.apply(RepositoryViewerController.scala:293)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45.apply(RepositoryViewerController.scala:291)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44.apply(RepositoryViewerController.scala:291)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44.apply(RepositoryViewerController.scala:288)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:32)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22.apply(RepositoryViewerController.scala:288)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)     at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745) ``` ","false",
"Image upload support in Wiki","Hi,  I am aware off issues #622 and #582, but those were raised when Gihub did not have the upload feature. Would be great to have image upload to Wiki like github, https://help.github.com/articles/adding-images-to-wikis/  Thanks ","false","duplicate"
"Support for controlling the version number of plug-ins.","Please add support for controlling the version number of plug-ins.  The main reason for this is to correctly match the version GitBucket has, with the version of the plug-ins themselves.  This should work automatically and not force the users (many of them are not even programmers) to figure it out.  See: gitbucket-plugins/gitbucket-h2-backup-plugin#7 ","false","feature"
"view raw error","``` org.eclipse.jgit.errors.LargeObjectException: ae71c886bc48faa455c591f5199d059be01231b0 exceeds size limit     at org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getCachedBytes(LargePackedWholeObject.java:98) ``` ","false","duplicate"
"Logging should not be in catalina.out","The GitBucket webapplication logging (and it's plug-ins) should not happen in the `catalina.out` or the appserver default log file but in it's own separate file, e.g. `gitbucket.log`, to be easier to separate problems but also to report them.  Thank you. ","false","improvement"
"Restrict simple users from creating groups","It seems that in the actual version of GitBucket even simple users (without admin rights) can create groups and manage other users as members of those groups.  In most usage scenarios of GitBucket (small/medium teams and projects) this is not a desired functionality, and should be allowed only users with admin rights.  Thank you. ","false","improvement"
"Clicking on ""H2 Console"" should prefill the right parameters to access the DB","In the admin part there's a ""H2 Console"" menu item.   This just opens the H2 Console, but does not pre-fill the right parameters to connect to the exact Database the running instance is using. ","false","improvement"
"Performance","I have tried to run Gitbucket on both, standalone and within Tomcat7. The overall performance is quite poor when it comes to the web interface. Switching pages takes quite a long time. While doing that the java process consumes a lot of CPU. Is there a way to debug this further or to tweak the setup for better performance? ","false","question"
"Feature/add properties for webhook push","- add `compare`, `after` and `before` property - add `head_commit` - fix `repository.url` (it should indicate to html path) - refactoring : remove ApiPushCommit class (merge to ApiCommit)  These fixes has been prepared for slack integration. ","true","improvement"
"gitbucket view comments fails","I created a repository, forked it, changed something, created a pull request and merged it. When I click on the top nav bar pull request list, I see the pull request listed. The link to this pull request shows 0 but href is `http://git.vagrant.v8:8080/gitbucket/TestGroup/test-repo/issues/1`. When I click it, I get below stack trace. I think this link should be `http://git.vagrant.v8:8080/gitbucket/TestGroup/test-repo/pull/1` and the count is wrong too.  ``` java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:347)     at scala.None$.get(Option.scala:345)     at gitbucket.core.issues.html.commentlist$$anonfun$apply$5.apply(commentlist.template.scala:85)     at gitbucket.core.issues.html.commentlist$$anonfun$apply$5.apply(commentlist.template.scala:40)     at scala.collection.immutable.List.map(List.scala:273)     at gitbucket.core.issues.html.commentlist$.apply(commentlist.template.scala:40)     at gitbucket.core.issues.html.issue$.apply(issue.template.scala:65)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8$$anonfun$apply$11$$anonfun$apply$12$$anonfun$apply$13.apply(IssuesController.scala:68)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8$$anonfun$apply$11$$anonfun$apply$12$$anonfun$apply$13.apply(IssuesController.scala:68)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8$$anonfun$apply$11$$anonfun$apply$12.apply(IssuesController.scala:67)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8$$anonfun$apply$11$$anonfun$apply$12.apply(IssuesController.scala:66)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8$$anonfun$apply$11.apply(IssuesController.scala:66)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8$$anonfun$apply$11.apply(IssuesController.scala:65)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:128)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.IssuesController.referrersOnly(IssuesController.scala:18)     at gitbucket.core.controller.IssuesControllerBase$$anonfun$8.apply(IssuesController.scala:65)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)     at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1526)     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1482)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745) ``` ","false","bug"
"missing gitbucket-assembly 3.7","http://amateras.sourceforge.jp/mvn/ does not contain gitbucket:gitbucket-assembly:3.7.0 which is required for plugins compatibility for 3.7. ","false","task"
"show progress bar for checkbox lists","In github there is this nice little feature, which shows a progress bar for checkbox lists/todo lists in issues. I couldn't find anything related to this, so sorry if this has been already mentioned in another issue.  Would be great to have this feature in gitbucket! ","false","feature"
"(refs #700)web ui merge does not update pull request that already exist",,"true","bug"
"fix pull-request url on webhook payload",,"true","bug"
"fix commit url in webhook `push` event.","The `url` value should indicate to html commit page. ( now it indicate to api url ) ","true","bug"
"Could not leave a comment on line in PullRequest.","I wrote a comment on source code in Pull Request(File Changed tab). The comment left on Conversation(tab), but not found on File Chaged(tab).  This phenomenon occurs in file name has blank(also directory name). ","false","bug,help wanted"
"Incorrect HTML encoding in issue comments","I am using latest build from master branch.  When writing a comment like as following  ``` Per l'acquisto della merce e delle licenze software. ```  the text is rendered as  ``` Per l&#39;acquisto della merce e delle licenze software. ```  e.g. `'` is represented as `&#39;` ","false","bug"
"GitBucket didn't respond to all requests suddenly","takezoe様  お世話様です。 tomと申します。  昨日gitbucketにおいて、突然全てのリクエストに応答しなくなる現象が発生し、 gitbucketの再起動で改善しました。 ## 問題が起きたのは18:30頃のようで、その時のログは下記内容になります。  18:28:08.877 [pool-2-thread-2] INFO  o.a.s.server.session.ServerSession - Server session created from /172.16.9.61:61635 18:28:08.877 [pool-2-thread-3] INFO  o.a.s.server.session.ServerSession - Kex: server->client aes128-ctr hmac-md5 none 18:28:08.877 [pool-2-thread-3] INFO  o.a.s.server.session.ServerSession - Kex: client->server aes128-ctr hmac-md5 none ## 18:30:08.986 [pool-1-thread-1] INFO  o.a.s.server.session.ServerSession - Disconnecting: Session has timed out waiting for authentication after 120000 ms.  何か原因として考えられることはありますでしょうか。  以上、よろしくお願い致します。 ","false","question"
"Fix ArrayIndexOutOfBoundsException of IssuesService","Hi I'm using Gitbucket 3.6.  I caught exception when trying to filter Issues like ""is:open snowgooseyk"".  I fixed this issue.  ``` java.lang.ArrayIndexOutOfBoundsException: 1     at gitbucket.core.service.IssuesService$IssueSearchCondition$$anonfun$19.apply(IssuesService.scala:479)     at gitbucket.core.service.IssuesService$IssueSearchCondition$$anonfun$19.apply(IssuesService.scala:477)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)     at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)     at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186)     at gitbucket.core.service.IssuesService$IssueSearchCondition$.apply(IssuesService.scala:477)     at gitbucket.core.controller.DashboardControllerBase$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(DashboardController.scala:21)     at gitbucket.core.controller.DashboardControllerBase$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.apply(DashboardController.scala:20)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.DashboardControllerBase$$anonfun$1$$anonfun$apply$1.apply(DashboardController.scala:20)     at gitbucket.core.controller.DashboardControllerBase$$anonfun$1$$anonfun$apply$1.apply(DashboardController.scala:17)     at gitbucket.core.util.UsersAuthenticator$class.gitbucket$core$util$UsersAuthenticator$$authenticate(Authenticator.scala:64)     at gitbucket.core.util.UsersAuthenticator$class.usersOnly(Authenticator.scala:58)     at gitbucket.core.controller.DashboardController.usersOnly(DashboardController.scala:9)     at gitbucket.core.controller.DashboardControllerBase$$anonfun$1.apply(DashboardController.scala:17)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80) ``` ","true","bug"
"NotFound after online file editing for files which include space","GitBucket 3.6です。  Web上で直接、半角スペースが入ったファイル名のファイルを「Edit」し「Commit changes」すると、遷移後のページが「Not Found」になります（Commit自体は成功）。 URLが正しくないのが原因であると思いますが、回避方法はありますでしょうか。 ","false",
"Building from master branch fails with ""object Optional is not a member of package java.util""","Experiencing since yesterday.  ``` $ uname -a Linux rovere 3.2.0-0.bpo.4-amd64 #1 SMP Debian 3.2.68-1+deb7u2~bpo60+1 x86_64 GNU/Linux ```  ``` $ java -version java version ""1.7.0_51"" Java(TM) SE Runtime Environment (build 1.7.0_51-b13) Java HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode) ```  ``` [info] Compiling 208 Scala sources and 2 Java sources to /home/ilgrosso/work/gitbucket/target/scala-2.11/classes... [error] /home/ilgrosso/work/gitbucket/src/main/scala/gitbucket/core/view/Markdown.scala:5: object Optional is not a member of package java.util [error] import java.util.{Optional, Locale} [error]        ^ [error] /home/ilgrosso/work/gitbucket/src/main/scala/gitbucket/core/view/Markdown.scala:73: not found: type Optional [error]     override def code(code: String, lang: Optional[String], escaped: Boolean): String = { [error]                                           ^ [error] /home/ilgrosso/work/gitbucket/src/main/scala/gitbucket/core/view/Markdown.scala:111: not found: type Optional [error]     override def link(href: String, title: Optional[String], text: String): String = { [error]                                            ^ [error] /home/ilgrosso/work/gitbucket/src/main/scala/gitbucket/core/view/Markdown.scala:115: not found: type Optional [error]     override def image(href: String, title: Optional[String], text: String): String = { [error]                                             ^ [error] four errors found [error] (compile:compileIncremental) Compilation failed [error] Total time: 59 s, completed 23-set-2015 8.10.15 ``` ","false",
"Switch markdown processor to markedj from pegdown",,"true","improvement"
"support sshPublicKey from LDAP","LDAP server can provide user ssh publickey as sshPublicKey attribute. it convenient, if PublicKeyAuthenticator support find publickey from LDAP.  I tried modify gitbucket and success it for me.  I did, - add ""SSH Public key attribute"" field on System Setting LDAP section.     usually put ""sshPublicKey"" - change PublicKeyAuthenticator - add some method LDAPUtil  please advise these codes are effectual?  Thank you.　(Issue#910)  ![pubkeyfromldap](https://cloud.githubusercontent.com/assets/11532107/9954602/65a14b84-5e25-11e5-9aba-be8947da60dc.jpg) ","true","feature,pending"
"ssh publickey from LDAP","LDAP server can provide user ssh publickey as sshPublicKey attribute. it convenient, if PublicKeyAuthenticator support find publickey from LDAP.  I tried modify gitbucket and success it for me. [ccskoba/gitbucket#30d054f43c](https://github.com/ccskoba/gitbucket/commit/30d054f43c9a2193d2878ced75bb554f442da9c5)  I did, - add ""SSH Public key attribute"" field on System Setting LDAP section.     usually put ""sshPublicKey"" - change PublicKeyAuthenticator - add some method LDAPUtil  please advise these codes are effectual?  Thank you.  ![pubkeyfromldap](https://cloud.githubusercontent.com/assets/11532107/9954602/65a14b84-5e25-11e5-9aba-be8947da60dc.jpg) ","false","feature"
"Add ZenHub to readme?","Hey, I'm on the ZenHub.io team. I noticed this repo uses ZenHub task boards to organize issues.  To help contributors know to check the task boards for current priorities, what do you think about adding the ZenHub badge to your ReadMe (or adding a mention to your contributor guidelines)? I'm happy to create a PR. A lot of people don't know ZenHub is free for open-source users :smile:  Thoughts? ","false","wontfix"
"RepositoryNotFoundException when merge pull request","西本と申します。  GitBucket 3.5 において、Merge pull request 実行時に例外が発生しました。 今のところ本現象が発生するのは、Windows 7 & IE11 から閲覧した時のみです。 Windows 7 & Google Chrome では発生していません。 1. Fork したリポジトリ yousuke.nishijima/SO.git からオリジナルの master に Pull request を発行。 2. オリジナルで Merge pull request を実行。 3. スタックトレースが画面に表示される。 4. マージは正常に処理されている。Pull request はオープンされたまま。  表示されたスタックトレースは以下の通りです。  <pre> org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: /usr/share/tomcat/.gitbucket/repositories/yousuke.nishijima/SO.git     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:575)     at org.eclipse.jgit.api.Git.open(Git.java:113)     at org.eclipse.jgit.api.Git.open(Git.java:97)     at gitbucket.core.controller.PullRequestsControllerBase$class.gitbucket$core$controller$PullRequestsControllerBase$$getRequestCompareInfo(PullRequestsController.scala:431)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34$$anonfun$apply$35$$anonfun$apply$36$$anonfun$apply$37.apply(PullRequestsController.scala:220)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34$$anonfun$apply$35$$anonfun$apply$36$$anonfun$apply$37.apply(PullRequestsController.scala:205)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34$$anonfun$apply$35$$anonfun$apply$36.apply(PullRequestsController.scala:205)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34$$anonfun$apply$35$$anonfun$apply$36.apply(PullRequestsController.scala:204)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34$$anonfun$apply$35.apply(PullRequestsController.scala:204)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34$$anonfun$apply$35.apply(PullRequestsController.scala:204)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:30)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:27)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.LockUtil$.lock(LockUtil.scala:27)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34.apply(PullRequestsController.scala:203)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15$$anonfun$apply$34.apply(PullRequestsController.scala:200)     at scala.Option.flatMap(Option.scala:171)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15.apply(PullRequestsController.scala:200)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$15.apply(PullRequestsController.scala:199)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$collaboratorsOnly$1$$anonfun$apply$8.apply(Authenticator.scala:93)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$collaboratorsOnly$1$$anonfun$apply$8.apply(Authenticator.scala:93)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:102)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:98)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:98)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:97)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.CollaboratorsAuthenticator$class.gitbucket$core$util$CollaboratorsAuthenticator$$authenticate(Authenticator.scala:97)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$collaboratorsOnly$1.apply(Authenticator.scala:93)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:314)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745) </pre>   以上です。よろしくお願いします。 ","false","bug,help wanted"
"Omit diff view for large differences",,"false","help wanted,improvement"
"Truncate long repository names in the repository list","Truncate text inside a box-content-row div rather than flowing out of the box ","true","improvement"
"Specify option to generate an RSA host key","As it is written on [the openssh-7.0 release note](http://www.openssh.com/txt/release-7.0), ssh-dss support is disabled by default.  > - Support for ssh-dss, ssh-dss-cert-\* host and user keys is disabled >   by default at run-time. These may be re-enabled using the >   instructions at http://www.openssh.com/legacy.html  But org.apache.sshd.common.keyprovider.AbstractKeyPairProvider which provides ssh access function uses dss host key by default and therefore we can not access to repositories via ssh in some environments.  SimpleGeneratorHostKeyProvider will generate a RSA host key when there is no existing host key, so we need to remove it manually. ","true","improvement"
"support .mailmap","add support for mailmap functionalities when browsing/showing commits  see also: - [git-shortlog](http://git-scm.com/docs/git-shortlog) for the .mailmap syntax - [git-log](http://git-scm.com/docs/git-log) with its `--use-mailmap` option ","false","feature"
"Release 3.6 ""Could not find or load main class JettyLauncher""","Hi, I'm not compiling the source myself, instead I use the release provided. Version 3.5 works perfectly, while version 3.6 terminates with that error. Here's the jre version I'm using  ``` # java -version openjdk version ""1.8.0_60"" OpenJDK Runtime Environment (build 1.8.0_60-b24) OpenJDK Server VM (build 25.60-b23, mixed mode) ```  I don't know what can be useful to debug the problem, let me know if you need more informations. Thanks. ","false",
"gitbucket stops responding after being idle","Hi,  We have noticed that when the server is not getting used or no requests are sent to it for some time, it stops responding (no ssh, no git client access) just says request refused. The only to way to wake it up is to go to the server using a web browser. Has anyone experienced similar behavior? Our system runs on Windows 2012 Server IIS.  Thanks ","false","question"
"reset password via email","any where to solve it? ","false","LDAP/SSO,feature"
"Commit messages do not translate to comments in issues","Since a while now, my gitbucket does not create comments when I reference issues in commit messages. E.g. when a commit message says: ""Fixed #20"", It neither closes issue #20, nor adds the commit as a comment to the issue.   Interestingly, when I look at the news stream on the page after logging in, the commit messages do not carry links to issues (the ""#20"" in this case is not a link). On the other hand, when I look at a specific commit, the same commit messages carries a link to issue 20. And when I look at the repository (the ""Code"" tab), the commit message of the last commit also carries a link.  Sadly, I don't know at which change that happened. It might have been with the change from 3.4 to 3.5, but that is not sure. ","false","bug"
"can't use html tags in markdown","markdownファイルの中でhtmlタグを利用したいのですが、GitBucketで表示するとすべて削除されます。   GitBucketではhtmlタグは使えないのでしょうか? ","false","question"
"allow to merge PR from UI ""fast forward""","Would be great to allow users to choose when accepting a PR if they want to merge with: - `--no-ff` (which is the default behavior today of gitbucket & github) - `--ff-only` fast forward only - `--ff` making fast forward when possible and merge commit otherwise  as see git [merge documentation](http://git-scm.com/docs/git-merge#_options).  PS: We could even think of another possibility which is a rebase. ","false","feature"
"Fix typo in README.md",,"true",
"split SMTP & notification, fixes #893","this PR brings a separation between the setup of a SMTP server and the usage of notifications.  For the ones who have disabled notifications because they are too verbose in the current version _(or not enough flexible)_, it allows them to still define SMTP settings and use [announce plugin](https://github.com/McFoggy/gitbucket-announce-plugin) as expressed in McFoggy/gitbucket-announce-plugin#5  ![image](https://cloud.githubusercontent.com/assets/1119660/9630438/8ff1e874-517a-11e5-813f-99f1510756b0.png) ","true","improvement"
"Internal link doesn't work","Internal link doesn't work since version 3.5. It works on version 3.4.  Is this change intentional?  Internal link is very useful to make TOC to the wiki page. - sample document for this issue.  ``` - [link to header1](#header1)  # Header1 ``` - [link to header1](#header1) # Header1 ","false","bug"
"reference gitbucket-h2-backup-plugin in README","small README enhancement to reference the new [gitbucket-h2-backup-plugin](https://github.com/McFoggy/gitbucket-h2-backup-plugin) that comes in replacement of PR #845   ","true",
"separate SMTP settings from notifications ones","In order to be able to use the [announce plugin](McFoggy/gitbucket-announce-plugin) independently from the notifications mechanism, it would be great to separate the notifications settings from the SMTP ones.  Doing so, we could declare a SMTP for reuse but do not activate notifications.  It would also allow in the future to: - enhance notifications settings by providing a dedicated section for fine grain setup - allow to have more communication channels than just SMTP ","false","improvement"
"Milestone detail page to show both issues and pull requests","While GitHub shows both issues and pull requests when you click on any milestones, GitBucket only shows issues.  Is GitBucket capable of showing both issues and pull requests under the same milestone, like what you get when you access https://github.com/takezoe/gitbucket/milestones/Priority1 ? ","false","improvement"
"""Sort"" pull down menu for Labels and Milestones","Just wanted to let you know ICYMI that GitHub UI has ""Sort"" pull down menu for both ""Labels""  ![image](https://cloud.githubusercontent.com/assets/204623/9513816/3e2954a0-4ccf-11e5-8c75-2c39684714e1.png)  and ""Milestones"".  ![image](https://cloud.githubusercontent.com/assets/204623/9513822/49947752-4ccf-11e5-9e30-d3314ccb100f.png)  Whereas GitBucket does not.  ![image](https://cloud.githubusercontent.com/assets/204623/9513833/65a9622c-4ccf-11e5-88c2-f2ddbb3c76fa.png) ","false","improvement"
"Searchbox for repositories and wiki pages",,"false","feature,help wanted"
"Can't log when using nginx reverse proxy with gitbucket on tomcat","Hi,  I have installed gitbucket on tomcat8 (with something like that: http://exemple.org:8080/gitbucket) and I use nginx reverse proxy (to access it with http://git.exemple.org)  I can log in with http://exemple.org:8080/gitbucket but not with http://git.exemple.org: when I do that, it seems it simply reload the page.  I try to change the base url in the gitbucket.conf, without sucess.  What can I do?  here is my nginx configuration  ``` server {     server_name git.exemple.org;      location / {         proxy_pass              http://localhost:8080/gitbucket/;         proxy_set_header        Host $host;         proxy_set_header        X-Real-IP $remote_addr;         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;         proxy_connect_timeout   150;         proxy_send_timeout      100;         proxy_read_timeout      100;         proxy_buffers           4 32k;         client_max_body_size    500m; # Big number is we can post big commits.         client_body_buffer_size 128k;     }       location /assets/ {         proxy_pass              http://localhost:8080/gitbucket/assets/;         proxy_cache             cache;         proxy_cache_key         $host$uri$is_args$args;         proxy_cache_valid       200 301 302 1d;         expires                 1d;     } } ``` ","false","question"
"Allow passwords longer than 20 characters","Why is there even a limit? ","false","duplicate"
"IIS HeliconZoo with PullRequestBuilder Not working","Hi all,  I've got GitBucket running on Windows IIS with no problems. I've used the Wiki setup HeliconZoo and it did the job. Currently I access my instance by http://host/gitbucket and there is no issue. However, i've setup the GitHub Pull Request Builder using the Wiki again and it really wants to work but I've found that because of the context_path set to ""/gitbucket"" the plugin trips out. In Jenkins project the Github Project path is set to http://domain/gitbucket/Utilities/UniversalTestApplication/. The request plugin thinks that the ""/gitbucket/"" part is the owner and it cant find repository ""Utilities"", but it isn't, its just the context path set by HeliconZoo. I've tried changing the Context_path but no success. If I set it to ""/"", gitbucket generates a query string so long that IIS can't handle it and throws error 404.15  My questions are: Does any one know how I could change IIS or HeliconZoo configuration to allow me to access the instance without the ""/gitbucket"", or what could I change in the Pull Request Builder setup so it ignores the ""/gitbucket"".  Thanks ","false","question"
"Replace some icon to octicon","- replace some of the non-octicon to octicon. - adjust the color of octicon on the button.  modified icon is as follows. - .icon-home          -> .octicon-home - .icon-time          -> .octicon-clock - .icon-ok            -> .octicon-check - .icon-lock          -> .octicon-lock - .icon-envelope      -> .octicon-mail - .icon-pencil        -> .octicon-pencil - .icon-remove-circle -> .octicon-x - .icon-check         -> .octicon-clippy - .icon-calendar      -> .octicon-calendar - .icon-cog           -> .octicon-gear - .icon-th-list       -> .octicon-list-unordered - .icon-trash         -> .octicon-trashcan - .icon-arrow-right   -> .octicon-arrow-right - .icon-retweet       -> .octicon-git-compare - .icon-comment       -> .octicon-comment ","true","improvement"
"ldap groups","is it possible to couple ldap groups of users to gitbucket? That way new members could automatically be authorized to repositories instead of having to first login and then added to the repository. ","false","question"
"Updated to fix truncated name in JSON: watchers_coun","The correct field in the JSON should be `watchers_count` rather than the truncated version `watchers_coun`.  This was spotted when I was testing the webhook-support against an internal service. ","true","bug"
"when are notifications sent?","Should notifications for issues be sent out only to users that are involved with that issue (e.g. assigned or participant), or to everyone that is a collabortator of the repo?   I have to add that the repo is in a group, and the collaborators that are in this group ( & repo), but NOT involved in the issues do receive also emails. At least for ""new issues"". ","false","question"
"File listing and sidebar display improvements","- Shorten commit message (by CSS), hover over to view complete description - Improved header text, button sizes - Improved and simplified menu gradient - Fixed ""fork form"" causing a big gap in header - Other minor style fixes and improvements ## Before  ![before-shorten-commit](https://cloud.githubusercontent.com/assets/1702638/9293553/3cfdf442-4427-11e5-8190-797ea41576c7.JPG) ## After  ![after-shorten-commit](https://cloud.githubusercontent.com/assets/1702638/9293554/3f7f8e2e-4427-11e5-823e-9deb5d344bb1.JPG) ","true","improvement"
"CSS improvements","At the moment there is just one massive CSS file which is difficult to maintain. Might I suggest we do the following: - Split up the CSS into seperate files 'common' styles and 'page' specific styles. - Convert the styles to use Sass - Switch from bootstrap 2 to bootstrap 4 - Compile own bootstrap, overriding Less variables so its more Github like. - Start making the views responsive.  We can do this in stages so it's manageable. Converting the styles to Sass is the only thing I'm not sure about how to do in Scala. I normally use Node based tools (Grunt/Gulp) but not sure if that would be suitable?  ","false","help wanted,improvement"
"Improved design of issue","## Old Design  ![old-issue](https://cloud.githubusercontent.com/assets/1702638/9285891/9cc46e42-42e2-11e5-98be-c5b14d77e720.JPG) ## This PR  ![new-issue](https://cloud.githubusercontent.com/assets/1702638/9285900/ab4d803e-42e2-11e5-9ceb-33616cd061a9.JPG) ","true","improvement"
"閲覧権限について","publicなリポジトリに対するアクティビティが誰でも閲覧可能になっています。 設定を下記にすることができますか？ 　・Anonymous access を Deny に変更 　・Default option to create a new repository を Private に変更  ","false","question"
"Deleting a commit's content will make a NullPointerException","In 3.4 version ,I make a new pull request, I want to delele some unneeded files. When i put ""Commit Changes"" button, i'll make a NullPointerException.  ![step1](https://cloud.githubusercontent.com/assets/5662000/9243642/ed350c3a-41cd-11e5-9edf-ac7b3036e1af.png) ![step2](https://cloud.githubusercontent.com/assets/5662000/9243644/ed38a5d4-41cd-11e5-8588-ccbc0c0b7ff3.png) ![step3](https://cloud.githubusercontent.com/assets/5662000/9243643/ed38229e-41cd-11e5-955d-6b2dcfa370e7.png)  Was it fixed in new version ? ","false","bug"
"Auto merge source code without accepting from ower.","Hi! I'm forking from another repository. After I made a pull request, I can automatically merge this code to origin repository without accepting from ower. Is this a bug ? This is in 3.4 version, and was it fixed in 3.5 version ? ","false","bug"
"Importing .bacpac file to azure from on-premise.","@takezoe  I used Microsoft SQL Server managment studio 2014 to upload .bacpac to azure from on premise network. All the steps for uploading the data has been done successfully, only the last part is showing error.  ![1](https://cloud.githubusercontent.com/assets/13770189/9233035/7a7ae3ce-414e-11e5-8370-75ba7324ff28.PNG) ![capture](https://cloud.githubusercontent.com/assets/13770189/9233040/7ea6bec8-414e-11e5-9918-6589bac3f7f2.PNG) ","false","invalid,question"
"Doubled URL in project RSS feed on gh-pages","I didn't know where to put this, but it bugged me a bit on every new post :)  In the RSS feed for the project (here: https://takezoe.github.io/gitbucket/feed.xml ), the URLs are doubled. For the latest release post it's: https://takezoe.github.io/gitbuckethttps://takezoe.github.io/gitbucket/gitbucket/2015/08/01/gitbucket-3.5.html  I'm guessing this is the template that needs fixing: https://github.com/takezoe/gitbucket/blob/gh-pages/feed.xml ","false","task"
"create pull request bug","When I update the gitbucket to the newest version, some things happen.  repository A; user a and b; A belongs to user a; b fork A;  When I create a pull request:  base is b:A  and from is a:A,then a page displays  ""Not Found"".  the url is :   http://git.etouch.cn/gitbucket/A/a/compare/B:master...A:master  Is this a bug?  Hope a fast reply. ","false",
"Update main.scala.html","1. fix header plus dropdown menu display bug in safari  When in safari, the header ""+"" menu is not middle in vertical. 1. add 'Your profile' in user dropdown menu  User dropdown menu in github has ""Your profile"",but gitbucket lack of this menu and has no entrance to your profile. ","true","improvement"
"Reset root/admin password","How can i reset the password of the root/admin user? As i have forgot the password that i set orignially before changing to LDAP authentication. ","false",
"Not linked when "".""(dot) contains @mention in comments of Issues ","Issuesに"".""が含まれるアカウント名の@mention付きコメントを投稿しても@mentionがリンクになりません。  ex.) @ichiro.suzuki please check this code. ","false","bug"
"Very Slow pull request","I'm using version 2.0 of gitbucket. When you press the pull request in gitbucket, even after forever does not process is complete. ","false","question"
"Does not working!","[root@localhost ~]# java -jar gitbucket.war --port=8080 --gitbucket.home=/root/git_bucket 2015-08-11 12:07:06.635:INFO:oejs.Server:jetty-8.y.z-SNAPSHOT 2015-08-11 12:07:06.813:INFO:oejw.WebInfConfiguration:Extract jar:file:/root/gitbucket.war!/ to /root/git_bucket/tmp/webapp 2015-08-11 12:07:26.737:INFO:oejw.StandardDescriptorProcessor:NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet Aug 11, 2015 12:07:27 PM com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$InfoLogger log INFO: MLog clients using slf4j logging. Aug 11, 2015 12:07:28 PM com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$InfoLogger log INFO: Initializing c3p0-0.9.5 [built 02-January-2015 13:25:04 -0500; debug? true; trace: 10] Aug 11, 2015 12:07:29 PM com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$InfoLogger log INFO: Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kflt9b7lec6faij03|191f517, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceUseNamedDriverClass -> false, identityToken -> z8kflt9b7lec6faij03|191f517, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:/root/git_bucket/data;MVCC=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=*****_, password=**_***}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ] Aug 11, 2015 12:07:33 PM org.quartz.core.SchedulerSignalerImpl <init> INFO: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl Aug 11, 2015 12:07:33 PM org.quartz.core.QuartzScheduler <init> INFO: Quartz Scheduler v.2.2.1 created. Aug 11, 2015 12:07:33 PM org.quartz.simpl.RAMJobStore initialize INFO: RAMJobStore initialized. Aug 11, 2015 12:07:33 PM org.quartz.core.QuartzScheduler initialize INFO: Scheduler meta-data: Quartz Scheduler (v2.2.1) 'QuartzScheduler~job' with instanceId 'job'   Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.   NOT STARTED.   Currently in standby mode.   Number of jobs executed: 0   Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.   Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.  Aug 11, 2015 12:07:33 PM org.quartz.impl.DirectSchedulerFactory createScheduler INFO: Quartz scheduler 'QuartzScheduler~job Aug 11, 2015 12:07:33 PM org.quartz.impl.DirectSchedulerFactory createScheduler INFO: Quartz scheduler version: 2.2.1 Aug 11, 2015 12:07:33 PM org.quartz.core.QuartzScheduler start INFO: Scheduler QuartzScheduler~job_$_job started. [INFO] [08/11/2015 12:07:33.138] [main] [[QuartzScheduler~job]] Setting up scheduled job 'Daily', with 'com.typesafe.akka.extension.quartz.QuartzCronSchedule@1a8da0f' Aug 11, 2015 12:07:33 PM grizzled.slf4j.Logger info INFO: The cycle class name from the config: ScalatraBootstrap Aug 11, 2015 12:07:33 PM grizzled.slf4j.Logger info INFO: Initializing life cycle class: ScalatraBootstrap 2015-08-11 12:07:34.917:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8080 ","false",
"where is rest apis docs?","like  'https://confluence.atlassian.com/display/BITBUCKET/Use+the+Bitbucket+REST+APIs' ","false","question,task"
"Add checksums to releases","While trying to deploy gitbucket using ansible I had some network issues with S3 which lead to incomplete downloads. It would be great if there were a way to validate a successful download. A sha256 checksum in the release notes would be a great help already.  Thanks! ","false","task"
"error to connect to gmail","![image](https://cloud.githubusercontent.com/assets/5886048/9155777/4377a736-3ef6-11e5-8be1-b69677d58319.png) I config it like this but not work ","false","question"
"Improve CSS styles",,"false","improvement"
"location.href not valid in function updateBlame()","src/main/twirl/gitbucket/core/repo/blob.scala.html  ``` 154  function updateBlame(){ 155     var m = /^\/(blame|blob)(\/.*)$/.exec(location.href.substring(repository.length)); ```  ""location.href"" is like a ""http://xxxxx/path/name"". so, it should be ""location.pathname"".  Best Regards, ","false","bug"
"efficient way to develop plugins","Hi,  when developing gitbucket, the auto reload mechanism as explained in the [how to run](https://github.com/takezoe/gitbucket/blob/master/doc/how_to_run.md#for-developers) doc is very efficient.  Is there a way to launch a dev version of gibucket to have the same kind level of feature for plugin development? Copy paste the plugin jar and restart gitbucket application is not what I would call efficient. ","false","duplicate"
"list installed plugins in the system administration menu","this contribution adds a new entry in the system admin menu to see which plugins are installed. It provides basic information on those plugins.  ![image](https://cloud.githubusercontent.com/assets/1119660/9088667/93c5dd1a-3b91-11e5-8633-6b83a9770308.png) ","true","feature"
"give an id to system admin menu container to allow plugin extension","Having an id on the container of admin links allows a plugin to enhance it.  This will be used for example by [McFoggy/gitbucket-announce-plugin](https://github.com/McFoggy/gitbucket-announce-plugin) ","true","improvement"
"Changes view will freeze the browser for many changes.","If the re are many changes present in a commit, the changes view will freeze the browser and in FF is even crashing it.  IMHO it should be limited how many files are collapsed or expanded in the changes view, to avoid such scenarios.  Thank you. ","false","improvement"
"add application version to header, fixes #853","basic implementation to provide the application version used when building the WAR to the header of the running application. ","true",
"Upgrading between versions","I would like to use gitbucket but I'm a bit concerned about potentially losing/corrupting data between different versions when upgrading.   My question is, does gitbucket have a migration strategy for upgrading (similar to gitlab) for migrating databases to new versions, e.g. for issue tracker, activity log, etc ? If not, is there a plan to implement such a strategy so there is easy upgrade paths between different versions? ","false","question"
"small fixed: env.sh has been already removed.",,"true",
"Fix making bad link from certain references.","I re-try to fix issue #838   simply implement certain reference described below. https://help.github.com/articles/writing-on-github/#references  in addtion, if specified commit link does not exist, gitbucket will return 404 status code. ","true","bug,improvement"
"Updated installation script to GitBucket 3.5",,"true",
"add an example of a backup script and some usage instructions","creation of a usable bash backup script with usage description. Some documentation is also provided to use it on windows. ","true",
"Distinguish database version & application version","It would be nice to see in the brand panel DB version and the application version: `db:3.4  app:3.4-McFoggy-001` where the later would be extracted from a file put in the classpath during the build and taken up from GITBUCKET_VERSION environment variable. ","false",
"Add an announcement mechanism","It would be great to have a way to notify users/groups for some announces.  Announces could: - be persistent or not - be notified by email or not - have a scope target   - global   - list of group   - list of individuals - ...  For persistent announces, we could imagine to provide some panels in different places showing the announces relatively to the place we are on the site: main page, project page.  One of the first usage would be to announce: shutdown, upgrade, restart in advance to gitbucket users.  Such a mechanism could also serve as a basis for a kind of messaging system between individuals/groups.  _PS: of course we can split this issue in several smaller ones in order to deliver something step by step._  This could be implemented as a plugin also, but I am not sure we have ways today to add content from a plugin into existing gitbucket pages. ","false","feature"
"Style vs github","Out of interest how closely should gitbucket mimic the style of github? I notice there is a lot of inconsistencies with paddings, sizes, colours (buttons too small, minimal paddings, etc).  Are you guys willing to accept PRs to make all the areas match the same polish that github has? :smile:  ","false","duplicate,improvement"
"Release 3.5.0 ?","Hi,  Any chance to release 3.5.0 soon? There are quite many changes since 3.4.0.  Thank you. ","false","question"
"Make header and sidemenu links clickable across full width.",,"true","improvement"
"Increase container width","Matches Github's container width of 980px. ","true","improvement"
"Fix issue #838","Fix issue #838  Simply response ""NotFound"" if specified repository was missing. As long as I confirmed, This behaviour is the same as GitHub's. ","true",
"solve #820 too long messages","small enhancement to shorten long commit messages in the file list of repositories (#820)  ![image](https://cloud.githubusercontent.com/assets/1119660/8961247/62e64fd6-3614-11e5-87e7-35d6d71304cd.png) ","true","improvement"
"add export functionality via system settings page and via URL, close …","Hi,  find enclosed a small contribution to gitbucket. It consists in providing a way to export the HSQLDB database. Such a functionality allows then setup some backup mechanisms for gitbucket.  I provide currently 2 ways to backup the database: 1. via the System Administration GUI / System Settings : a new panel is added for database export    ![image](https://cloud.githubusercontent.com/assets/1119660/8959216/d7a24be6-3609-11e5-94d8-3732fd7fb819.png) 2. via an HTTP GET on http://server:port/export  PS: I am totally new to scala world (pure java/jee developper) so by advance I apologize if I didn't respected some scala conventions. ","true","feature"
"Improve global header menu",,"false","improvement"
"Azure AD authentication","Hi, I'm new to GitBucket but it seems like a worthy replacement for Gitblit. I'm in the process of migrating our systems to the cloud, and one of those is our directory.  I see that GB already supports LDAP so it may be a logical next step to add support for Azure AD that also supports the OpenID and OAuth standards.  There are plenty of resources for doing this:  [ [Docs](https://azure.microsoft.com/en-us/documentation/articles/active-directory-authentication-scenarios/) ] [ [Example](https://github.com/AzureADSamples/WebApp-OpenIDConnect-DotNet) ] [ [Libs](https://msdn.microsoft.com/library/azure/dn151135.aspx) ]  What do you guys think? ","false","LDAP/SSO,feature,help wanted"
"Exception occurs when confirm to merge pull-request without additional comment.",,"false","bug"
"Last Login timestamp to be tracked for API access","I've integrated Jenkins and GitBucket using the plugin described in Wiki. I know it works as the projects get pulled and built as expected.  I think it would be useful if the ""Last Login"" timestamp was tracked for API access in the Administration page. Currently I have a dummy account (Jenkinsbot) which has access to pull projects and execute tests but it is not clear enough if that account logs in correctly.  Thanks ","false","improvement"
"Restarted Gitbucket can't find existing users and repos","I have a Gitbucket 3.4 instance that perform perfectly, with many users, repos and groups.  But, when I restart the Gitbucket process (executing it again after a `kill`), I am not able to login with the same credentials anymore, although the files in `.gitbucket/` are still there with everything we have done.  I realized that it can't find existing users and repositories because I could login with the old `root`/`root` login/password and, in the admin area, no user or repository was displayed (also I had changed root's password before the restart). ### System Details  ---  Ubuntu 14.04 64bits (fresh install, with Apache completely removed) Gitbucket 3.4 Java version ""1.7.0_79"" OpenJDK Runtime Environment (IcedTea 2.5.5) (7u79-2.5.5-0ubuntu0.14.04.2) OpenJDK 64-Bit Server VM (build 24.79-b02, mixed mode) ### How to reproduce the bug:  ---  **1. Execute Bitbucket without servlet container, with:** `java -jar gitbucket.war --port=8080 --host=gitbucket.your-domain.net`  **2. Access the instance with `http://gitbucket.your-domain.net:8080`** Login and create some users and repos  **3. Change your root password** Doing this you will be able to test if this bug ocurred using the default root password  **4. Kill the Gitbucket process** In my case, I used `ps ax | grep gitbucket` to identify the process id and `kill [id]` to kill it  **5. Restart Gitbucket with:** `java -jar gitbucket.war --port=8080 --host=gitbucket.your-domain.net`  **6. Try both root's password, new and old** If the bug occurs, you will only be able to login with old `root`/`root` and will not see users in admin area ","false","question"
"close action does not reference commit","would be great to see in the action text on an issue a reference to the commit that created/initiated the action.  For example when closing an issue from a commit message, we have today: - ""McFoggy closed the issue XX minutes ago""  instead we would see something like - ""McFoggy closed the issue XX minutes ago in [45e645646](http://nowhere.com)""  See what github provides as example : https://github.com/McFoggy/cssfx/issues/8 ","false","improvement"
"Link to commits in other repositories","Current reference linking fails when using the github syntax described [there](https://help.github.com/articles/writing-on-github/#references).  In gitbucket, in project GROUP1/Project1, referencing for example in an issue `Group2/Project2@SHA1` creates a link to `GROUP1/Project1/commit/SHA1` which is wrong and leads to the following error when clicked  ``` org.eclipse.jgit.errors.MissingObjectException: Missing unknown 39978bada1e0b5625df5a1585eb2c8dd6899e141     at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:148)     at org.eclipse.jgit.lib.ObjectReader.open(ObjectReader.java:229)     at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:839)     at gitbucket.core.util.JGitUtil$.getRevCommitFromId(JGitUtil.scala:154)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$25$$anonfun$apply$53$$anonfun$apply$54.apply(RepositoryViewerController.scala:347)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$25$$anonfun$apply$53$$anonfun$apply$54.apply(RepositoryViewerController.scala:346)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$25$$anonfun$apply$53.apply(RepositoryViewerController.scala:346)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$25$$anonfun$apply$53.apply(RepositoryViewerController.scala:343)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:30)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$25.apply(RepositoryViewerController.scala:343)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) ``` ","false","bug"
"Recovery from lost git repo","I removed one repository by mistake and now I want to recovery that repo. I have used a file recovery tool to find that repo directory back. For example, I get the directory ""XXX.git"" back. But under this directory, there is no other files but only config, HEAD, hooks and so on. How can I get all my source code files back from this directory? How to make that ""XXX.git"" directory as a standard git directory?  Thank you very much!   ","false",
"Fix duplicated Content-Type","When you request to the web api with an incorrect token, GitBucket return the duplicated Content-Type. ","true","bug"
"avatar need to be resized and/or cached","One of our colleagues pushed in his profile a big avatar file.  This introduced some latency, especially on the activity page, due to the fact that avatars are not cached and/or are not resized for common use cases.  It could be expected that gitbucket either: - provides some caching information for avatar URLs. When looking at network activity in chromedev tools show always a 200 for avatar, never a 304. - pre-computes/generates images in the expected size for avatar. On activity page, we download avatars in their full size just to resize them in 16x16 ","false","improvement"
"Web API should return the Content-Type: application/json","Environment: GitBucket: 3.4 Run: standalone without servlet container  Several Web API don't return the Content-Type: application/json. Maybe I think the response does not return the Content-Type: application/json if the response code is 200.  The following are some of the Web API response.  `/api/v3/user` and response code 200 is a incorrect Content-Type.  ``` shell-session $ curl -s -i -H ""Authorization: token 3c72d509f0fafaa1c0a3389c90b616131b4fa9c1"" http://localhost:8080/api/v3/user HTTP/1.1 200 OK Set-Cookie: JSESSIONID=wjl94h1203u4jxwt0adhf3dx;Path=/ Expires: Thu, 01 Jan 1970 00:00:00 GMT Content-Type: text/html;charset=UTF-8 Content-Length: 209 Server: Jetty(8.1.16.v20140903)  {""login"":""foo"",""email"":""foo@example.com"",""type"":""User"",""site_admin"":false,""created_at"":""2015-07-13T17:47:39Z"",""url"":""http://localhost:8080/api/v3/users/foo"",""html_url"":""http://localhost:8080/foo""} ```  `/api/v3/user` and response code 401 is a correct Content-Type.  ``` shell-session $ curl -s -i http://localhost:8080/api/v3/user HTTP/1.1 401 Unauthorized Set-Cookie: JSESSIONID=19uujk8ngg5opjbl981f09pt3;Path=/ Expires: Thu, 01 Jan 1970 00:00:00 GMT Content-Type: application/json;charset=UTF-8 Content-Length: 37 Server: Jetty(8.1.16.v20140903)  {""message"":""Requires authentication""} ```  `/api/v3/rate_limit` and response code 404 is a correct Content-Type.  ``` shell-session $ curl -s -i -H ""Authorization: token 3c72d509f0fafaa1c0a3389c90b616131b4fa9c1"" http://localhost:8080/api/v3/rate_limit HTTP/1.1 404 Not Found Set-Cookie: JSESSIONID=mbvb9fge9hw5iybst5sbnql8;Path=/ Expires: Thu, 01 Jan 1970 00:00:00 GMT Content-Type: application/json;charset=UTF-8 Content-Length: 43 Server: Jetty(8.1.16.v20140903)  {""message"":""Rate limiting is not enabled.""} ``` ","false",
"Support for S3 or AWS CodeCommit as a Repository Backend","I just realized that GitBucket is using JGit to manage the repositories. What would really improve the reliability of GitBucket is if JGit could manage data using S3. There's an interesting article here on how to use S3 as a Git repository using JGit:  http://www.fancybeans.com/blog/2012/08/24/how-to-use-s3-as-a-private-git-repository/  Another idea would be to leverage the recently released [AWS CodeCommit](http://aws.amazon.com/codecommit/). The UI for CodeCommit is rather weak and doesn't do any of the things that GitBucket does. Using CodeCommit to manage the repos on the server side would go a long way towards making the repo storage much more reliable.  ","false","feature,pending"
"how to define the ssh url that display on webui?","Hi all, ssh port is listening on 3222(use git  os account to start gitbucket, so can not listen on port 22) , and I use root to run a tcpproxy to forward port 22 ---> port 3222 , so there are tow questions: (1) how to define the ssh url display on webui such as ssh://abc@abc.com/abc/abc.git but not ssh://abc@abc.com:3222/abc/abc.git ? (2) how to define ssh port just bind on one interface IP but not 0.0.0.0 ?  ![bucket](https://cloud.githubusercontent.com/assets/1438526/8675515/f614f86a-2a76-11e5-84fe-a379b07d9efa.png) ","false","question"
"404 after committing a file via Web UI when the filename includes non-ascii characters ","I'm getting 404 error after committing a file via Web UI: 1. Edit or create a file with non-ascii characters in its filename, such as `fõõ.txt` or `ほげ.txt` 2. Write any commit message 3. Click ""Commit changes"" button to submit. ","false","bug"
"""checklist [x]"" or ""<strike>""  on readme.md don't work?","I want to write `readme.md` with `checklist [x]` and `~~strike~~`. But not work. Please help me. ","false","improvement,question"
"fixed cursor pointer css of group image change","Fixed css ","true","improvement"
"fix: wrong content type","In the repository viewer, Gitbucket returns Content-type as ""application/octet-stream"", even if the content is an image (ex. jpeg, png). So, some browsers (at least IE) cannot display the images. (Chrome and Firefox can display the image even if Content-type is ""application/octet-stream"").  It seems that all the raw data are returned as ""application/octet-stream"" in RepositoryViewerController.scala. I think that every content should be returned with the correct MIME-type. ","true","bug,pending"
"Windows Instructions don't work.","I'm trying to install using the [Windows Instructions](https://github.com/takezoe/gitbucket/wiki/Installation-on-IIS-and-Helicontech-Zoo) however the Helicontech-Zoo WPI is broken. It is throwing a 404 when trying to install Jetty.  Now I realize that this is outside your control, however I'm wondering if there are alternative instructions on how to install GitBucket on a Windows Server? I have near zero experience with anything Java related.  ![Imgur](http://i.imgur.com/0GSibiu.png) ","false",
"Error 404 when using prefix","When I start GitBucket with the following command and open the GitBucket page from a browser I can't use GitBucket. I am using a BananaPi (similar to Raspberry Pi) with Raspbian as server.  git@bananapi:~$ java -jar gitbucket.war --port=8006 --prefix=gitbucket  No matter, wether I browse to http://bananapi:8006/ or http://bananapi:8006/gitbucket/, I get the following 404 error in my browser (the path after ""accessing"" is the path from the url I entered):  HTTP ERROR: 404 Problem accessing /gitbucket/. Reason:     Not Found Powered by Jetty:// <img width=""622"" alt=""bildschirmfoto 2015-07-11 um 14 45 30"" src=""https://cloud.githubusercontent.com/assets/12215247/8633778/8c97ccf2-27db-11e5-98e4-0e22c2c16c1b.png""> ","false",
"Getting HTTP ERROR 500 due to java.lang.NoClassDefFoundError: com/mchange/v2/sql/SqlUtils","Hello,  I am getting the above error using GitBucket 3.4. It looks like some SqlUtils is missing from the distribution? Full error screen below:  HTTP ERROR 500  Problem accessing /signin. Reason:  ``` Server Error ```  Caused by:  java.lang.NoClassDefFoundError: com/mchange/v2/sql/SqlUtils     at com.mchange.v2.c3p0.impl.NewPooledConnection.handleThrowable(NewPooledConnection.java:369)     at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:895)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:433)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Unknown Source) ","false",
"MSSql support?","Hello,  I was also wondering if MSSql or other databases are supported? And if so, how can they be connected?  Thanks ","false","question"
"Cannot quick jump when / is in branch name","For example branch `features/feature1` user URL is  `http:///gitbucket.server/<owner>/<project>/find/features/feature1` which result into error 404.  I believe that the find url mapping [`get(""/:owner/:repository/find/:ref"")`](https://github.com/takezoe/gitbucket/blob/master/src/main/scala/gitbucket/core/controller/RepositoryViewerController.scala#L514) don't read parameters after slash.  May `*` can be used fir fetch everythings. `get(""/:owner/:repository/find/*"")` maybe work. ","false","bug"
"Provide easy way to develop plug-in",,"false","task"
"debugging smtp connection","I can't get the smtp to work but don't see any logs in the tomcat files that suggest anything is wrong.  Is there a way to trouble shoot the smtp settings? ","false",
"Truncate long commit messages","Hi there  A small suggestion for improvement would be adding some small snippets of CSS to truncate long commit messages.   Example ![image](https://cloud.githubusercontent.com/assets/1550685/8591178/caf46458-2626-11e5-9b8d-b32cab02246d.png)  How github does it (not that we need to directly copy it). ![image](https://cloud.githubusercontent.com/assets/1550685/8591199/ec8e928c-2626-11e5-98cd-212c9ba0e730.png) ","false","improvement"
"Federation?","Is there an easy way to federate multiple gitbuckets?  Ideally this featureset looks something like: - OAuth Login - OAuth Provider (so I can log into yours by pointing it at mine)   - including access to user info, notification settings, etc, so they get propogated correctly - cross-site issue/repo/user references (with something like InterWiki links) - cross-site forks (I fork your repo it ends up on the 'home' node where my user is defined) - cross-site pull requests (I should be able to submit a PR on your node that references a repo/branch on my node)  A system like the above could conceivably replace github with a network of self-hosted repos, I think. ","false","feature,pending"
"Pull Request don't work","Recently, I did a upgrade of gitbucket from 2.7 to 3.3. Now I can't do pull requests. When I open a pull request I receive a exception.  This exception happen only for older projects. New projects works fine.  What happen? How can I resolve it?  Below, the printscreen and the exception .  ![gitbucket-error](https://cloud.githubusercontent.com/assets/493477/8548570/e2590842-249b-11e5-9a8b-763a33d90b90.png)  ``` javascript org.eclipse.jgit.errors.ObjectWritingException: Unable to create new object: /esec/ferramentas/git/gitbucket/repositories/Certillion/icpm-system.git/objects/85/cb6f684a84dabf81a1144e5b695893decd9604     at org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insertOneObject(ObjectDirectoryInserter.java:125)     at org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(ObjectDirectoryInserter.java:91)     at org.eclipse.jgit.lib.ObjectInserter.insert(ObjectInserter.java:329)     at org.eclipse.jgit.lib.ObjectInserter.insert(ObjectInserter.java:300)     at gitbucket.core.service.MergeService$MergeCacheInfo.createMergeCommit(MergeService.scala:165)     at gitbucket.core.service.MergeService$MergeCacheInfo.updateBranch$1(MergeService.scala:122)     at gitbucket.core.service.MergeService$MergeCacheInfo.checkConflictForce(MergeService.scala:134)     at gitbucket.core.service.MergeService$MergeCacheInfo$$anonfun$checkConflict$1.apply$mcZ$sp(MergeService.scala:109)     at gitbucket.core.service.MergeService$MergeCacheInfo$$anonfun$checkConflict$1.apply(MergeService.scala:109)     at gitbucket.core.service.MergeService$MergeCacheInfo$$anonfun$checkConflict$1.apply(MergeService.scala:109)     at scala.Option.getOrElse(Option.scala:121)     at gitbucket.core.service.MergeService$MergeCacheInfo.checkConflict(MergeService.scala:109)     at gitbucket.core.service.MergeService$$anonfun$checkConflict$2.apply(MergeService.scala:25)     at gitbucket.core.service.MergeService$$anonfun$checkConflict$2.apply(MergeService.scala:24)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.service.MergeService$class.checkConflict(MergeService.scala:24)     at gitbucket.core.controller.PullRequestsController.checkConflict(PullRequestsController.scala:27)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27$$anonfun$apply$28$$anonfun$1.apply$mcZ$sp(PullRequestsController.scala:169)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27$$anonfun$apply$28$$anonfun$1.apply(PullRequestsController.scala:169)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27$$anonfun$apply$28$$anonfun$1.apply(PullRequestsController.scala:169)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:30)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:27)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.LockUtil$.lock(LockUtil.scala:27)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27$$anonfun$apply$28.apply(PullRequestsController.scala:168)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27$$anonfun$apply$28.apply(PullRequestsController.scala:166)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27.apply(PullRequestsController.scala:166)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26$$anonfun$apply$27.apply(PullRequestsController.scala:163)     at scala.Option.flatMap(Option.scala:171)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26.apply(PullRequestsController.scala:163)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12$$anonfun$apply$26.apply(PullRequestsController.scala:162)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:100)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:98)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:98)     at gitbucket.core.util.CollaboratorsAuthenticator$$anonfun$gitbucket$core$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:97)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.CollaboratorsAuthenticator$class.gitbucket$core$util$CollaboratorsAuthenticator$$authenticate(Authenticator.scala:97)     at gitbucket.core.util.CollaboratorsAuthenticator$class.collaboratorsOnly(Authenticator.scala:92)     at gitbucket.core.controller.PullRequestsController.collaboratorsOnly(PullRequestsController.scala:27)     at gitbucket.core.controller.PullRequestsControllerBase$$anonfun$12.apply(PullRequestsController.scala:162)     at gitbucket.core.controller.ControllerBase$$anonfun$ajaxGet$1.apply(ControllerBase.scala:91)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) ``` ","false","question"
"Lose metadata when the process oom","Yesterday, I came across a problem that when the gitbucket process(tomcat) oom,  some metadata such as user info, repositories is lose!!!  It is such a big problem, but i have no idea what happened.  There are some screenshots of error log, i hope it can help.  ![1a594e09-c745-4a8e-bcd6-55f267dbeac4](https://cloud.githubusercontent.com/assets/2572041/8543798/5a709b52-24d2-11e5-8f7a-b62346e27b38.png) ![3f1dc870-f355-4c31-a101-ce6156c65285](https://cloud.githubusercontent.com/assets/2572041/8543801/5d4309f0-24d2-11e5-9176-e74b1eefe12c.png) ![ec016b42-1db4-4cc8-ad00-c223f0a1a1b1](https://cloud.githubusercontent.com/assets/2572041/8543804/604bb412-24d2-11e5-8ba5-2d3fc1983870.png) ![fc696c8e-2630-450e-ab21-9ace4909f96d](https://cloud.githubusercontent.com/assets/2572041/8543806/628ebaa8-24d2-11e5-93bb-8a0902f9753d.png) ","false","question"
"'x' days ago is not a useful information in commit list.","Maybe it looks nice in ""recent activity"" but in the commit history, the ""'x' days ago"" information is not useful at all. Please put the timestamp there.  See in the screenshot below: ![gitbucket_commit_time](https://cloud.githubusercontent.com/assets/5159511/8526426/f87b9922-2406-11e5-93cc-844d4008ae33.png)  how not helpful at all is the information **""2 days ago""** and **""3 days ago""**. More practical would have been to have the time, since the commits are grouped by date. Of course, after the date, one could extend with the text of how much time is that date in the past, but for single commits the timestamp is more helpful.  This is of course how GitHub works, but IMHO GitBucket should not ""clone"" the bugs too :).  Thank you. ","false","improvement,pending"
"Update Scalatra to 2.4",,"false","task"
"Fixes #748 - duplicate c3p0.war","# Dependencies  I've looked into ticket #748 which is about dupicate versions of c3p0.  Unfortunately, there isn't an easy way to display all transitive dependencies within SBT. You have to install a plugin first. ## sbt-dependency-graph  I've installed [this plugin](https://github.com/jrudolph/sbt-dependency-graph) to get a list of all dependencies. The installation is pretty easy: 1. Determine the SBT version: `sbt --version` -> 0.13.8 2. Create/extend the file ~/.sbt/0.13/plugins/plugins.sbt: `addSbtPlugin(""net.virtual-void"" % ""sbt-dependency-graph"" % ""0.7.5"")` 3. Create/extend the file ~/.sbt/0.13/global.sbt: `net.virtualvoid.sbt.graph.Plugin.graphSettings` ## Show Dependencies  ``` cd gitbucket . env.sh sbt dependency-tree ... [info] gitbucket:gitbucket_2.11:3.4u4 [S] [info]   +-com.enragedginger:akka-quartz-scheduler_2.11:1.3.0-akka-2.3.x [S] [info]   | +-org.quartz-scheduler:quartz:2.2.1 [info]   |   +-c3p0:c3p0:0.9.1.1 [info]   |   +-org.slf4j:slf4j-api:1.6.6 (evicted by: 1.7.10) [info]   |   +-org.slf4j:slf4j-api:1.7.10 [info]   |    [info]   +-com.h2database:h2:1.4.180 [info]   +-com.mchange:c3p0:0.9.5 [info]   | +-com.mchange:mchange-commons-java:0.2.9 ... ```  ""c3p0"" shows up twice within the dependency tree. Unfortunately, different organizations are used for the two versions, so SBT cannot evict the older version. ## Fix Dependencies  The dependencies can be fixed by modifying the file ""project/build.scala"":  ``` -  ""com.enragedginger"" %% ""akka-quartz-scheduler"" % ""1.3.0-akka-2.3.x"" +  ""com.enragedginger"" %% ""akka-quartz-scheduler"" % ""1.3.0-akka-2.3.x"" exclude(""c3p0"",""c3p0"") ```  Basically, you have to add ' exclude(""c3p0"",""c3p0"")' to the dependency ""akka-quartz-scheduler"". ","true","improvement"
"Added group descriptions (implements #674)","This PR allows groups to have descriptions.  The description is shown on the group page (`/:groupName`) instead of the account username.  Here's a group without a description:  ![2015-07-04-151651_3200x1080_scrot](https://cloud.githubusercontent.com/assets/1874242/8509131/25d498ae-2260-11e5-98f3-2b9263c28afe.png)  Here's a group with a description:  ![2015-07-04-151844_3200x1080_scrot](https://cloud.githubusercontent.com/assets/1874242/8509135/333e2532-2260-11e5-9db5-31a9e8085b6e.png)  This implements the feature request in #674. ","true","feature"
"Extension point to serve Git repository by plug-in",,"false","feature"
"Added nice titles to atom feeds","Originally titles in the atom feed used the activity type. This gave no useful information. The user had to open the news item to see what was going on. Now, the title is the activity's message rendered to html.  This fixes #481 ","true","improvement"
"New PRs in forked repositories default to comparing with parent repository's default branch","This PR implements the improvement requested in #668.   When looking at the branches of a repository, there are buttons that allow you to compare branches or create a PR.  If the current repo is not a fork, clicking one of those buttons compares the given branch with the default branch.  If the current repo is a fork, clicking one of those buttons compares the given branch with the default branch of the parent (upstream) repository. ","true","improvement"
"Any environment variables that could force to change the home directory?","I was trying to deploy GitBucket with Tomcat in OpenShift, however, as of the very default home directory location is ~/.gitbucket, and ~/ is resolved as ""/var/lib/openshift/{ID}"", which is unable to write anything by the user. I used to change HOME_DIR variable to ""~/app-root/.gitbucket"" but still no luck, maybe I should try editing the Tomcat configuration file itself? ","false","question"
"Forking for a team","If I create a new fork for users group the collaborators section is empty and members of the group cannot access this repository. When I re-edited a group members (eg. change user role) in ""Edit group"", collarorators are already in place. ","false","bug"
"Removing branches","You cannot switch to or remove a branch if there is a # character in branch name ","false","bug,pending"
"How can review board access the history of file?","Hey, guys, we are trying to use review board with gitbucket, however, we found that we cannot access the history of the file like the following git services: cgit: http://git.gnome.org/browse/gtk+/plain/<filename>?id2=<revision> Gitweb: http://git.kernel.org/?p=bluetooth/bluez-gnome.git;a=blob_plain;f=<filename>;hb=<revision>  We can only access the history of the file with the following gitbucket url https://<gitbucket host name>/<group name>/<project name>/blob/<revision>/<filename>?raw=true but this url use https and review board failed to access this file is there any other ways to access the history of the file with gitbucket? ","false","question"
"Turn on logging","Hi all,  So I've got Gitbucket (gitbucket.war) running on IIS with Jetty 8. I've turned on Jetty logging, but I cannot find any information how to log stuff from GiBucket. What am I missing?   Thanks ","false","question"
"Plugin: Do you have to build it for each new version of gitbucket?","I've read https://takezoe.github.io/gitbucket/gitbucket/2015/06/29/how-to-create-plugin.html .  It says this:  > ... > Notice: gitbucket-assembly must be a latest version. > ...  Does this mean you have to build your plugin for each and every fresh version of gitbucket? Currently, gitbucket is on version 3.4.0. So I'm using this for the gitbucket-assembly, run the build of my plugin and install the plugin into a gitbucket installation of version 3.4.0.  Next month, gitbucket will probably be on version 3.5.0. Can I install the plugin created against 3.4.0 or do I have to edit the gitbucket-assembly and re-run the build?  Thanks for your help, Uli ","false","question"
"Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception:   org.h2.jdbc.JdbcSQLException: General error: ""java.lang.NullPointerException"" [50000-180]","when startup the gitbucket get error:  01-Jul-2015 11:57:10.520 WARNING [com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0] com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@375b9e1c -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception:   org.h2.jdbc.JdbcSQLException: General error: ""java.lang.NullPointerException"" [50000-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:168)     at org.h2.message.DbException.convert(DbException.java:295)     at org.h2.engine.Database.openDatabase(Database.java:294)     at org.h2.engine.Database.<init>(Database.java:257)     at org.h2.engine.Engine.openSession(Engine.java:60)     at org.h2.engine.Engine.openSession(Engine.java:167)     at org.h2.engine.Engine.createSessionAndValidate(Engine.java:145)     at org.h2.engine.Engine.createSession(Engine.java:128)     at org.h2.engine.Engine.createSession(Engine.java:26)     at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:347)     at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:108)     at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)     at org.h2.Driver.connect(Driver.java:72)     at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)     at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)     at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)     at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)     at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)     at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)     at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)     at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547) Caused by: java.lang.NullPointerException  01-Jul-2015 11:57:17.875 WARNING [com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1] com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@6ad61675 -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception:   org.h2.jdbc.JdbcSQLException: General error: ""java.lang.NullPointerException"" [50000-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:168)     at org.h2.message.DbException.convert(DbException.java:295)     at org.h2.engine.Database.openDatabase(Database.java:294)     at org.h2.engine.Database.<init>(Database.java:257)     at org.h2.engine.Engine.openSession(Engine.java:60)     at org.h2.engine.Engine.openSession(Engine.java:167)     at org.h2.engine.Engine.createSessionAndValidate(Engine.java:145)     at org.h2.engine.Engine.createSession(Engine.java:128)     at org.h2.engine.Engine.createSession(Engine.java:26)     at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:347)     at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:108)     at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)     at org.h2.Driver.connect(Driver.java:72)     at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)     at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)     at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)     at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)     at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)     at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)     at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)     at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547) Caused by: java.lang.NullPointerException  01-Jul-2015 11:57:17.896 INFO [localhost-startStop-1] grizzled.slf4j.Logger.info The cycle class name from the config: ScalatraBootstrap 01-Jul-2015 11:57:18.003 INFO [localhost-startStop-1] grizzled.slf4j.Logger.info Initializing life cycle class: ScalatraBootstrap 01-Jul-2015 11:57:18.744 INFO [localhost-startStop-1] org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration.run Trying to register BouncyCastle as a JCE provider 01-Jul-2015 11:57:19.678 WARNING [com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2] com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@3e701add -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (30). Last acquisition attempt exception:   org.h2.jdbc.JdbcSQLException: General error: ""java.lang.NullPointerException"" [50000-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:168)     at org.h2.message.DbException.convert(DbException.java:295)     at org.h2.engine.Database.openDatabase(Database.java:294)     at org.h2.engine.Database.<init>(Database.java:257)     at org.h2.engine.Engine.openSession(Engine.java:60)     at org.h2.engine.Engine.openSession(Engine.java:167)     at org.h2.engine.Engine.createSessionAndValidate(Engine.java:145)     at org.h2.engine.Engine.createSession(Engine.java:128)     at org.h2.engine.Engine.createSession(Engine.java:26)     at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:347)     at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:108)     at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)     at org.h2.Driver.connect(Driver.java:72)     at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:135)     at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)     at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)     at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)     at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)     at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)     at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)     at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547) Caused by: java.lang.NullPointerException ","false","waiting 4 user feedback"
"'+' should be a valid character in repo names","**Expected** Creating the repo 'foo++' should succeed  **Actual** repo creation fails with 'Repository name contains invalid character.'  **Reproduce** Launch gitbucket and attempt to create a new repo 'foo++'  **Version**  ``` ~/git/gitbucket $ git describe 3.4-6-g59f78dc ```  **Justification** '++' is a common naming convention for C++ projects, e.g. `libFLAC++` ","false","improvement"
"Commit Assignment","Hi,  I have created a repo within a group. I am the manager of the repo and the group. I have set up a remote-tracking account that automatically pushed to the repos master branch.  In the overview, the commits are linked correctly to this account: ![bildschirmfoto vom 2015-06-30 19 50 22](https://cloud.githubusercontent.com/assets/1267594/8437730/4d72eb88-1f61-11e5-9c36-5f164d4aacc4.png)  But when I go to the details of the commit, it is assigned to my user:  https://freie.software/adfinis-sygroup/freedomvote/commit/1907616bde98722f574c9cb4d191253c1dd6ab10 ","false",
"Allow proxy setting for building gitbucket","Please allow to specify a proxy setting for SBT when building it.  The `sbt.bat` and `sbt.sh` do not allow this.  Thank you. ","false","task"
"Remove GITBUCKET_VERSION as an env from the build.","Please remove the GITBUCKET_VERSION from the build process as an env variable requirement.  It just complicates everything.  Thank you. ","false",
"Unable to shutdown Tomcat in 3.4","I have deployed GitBucket to Tomcat, but the following error occurred when I shut down the Tomcat. When this error occurs, Tomcat's process will continuously stay in the OS.  CentOS 7.0 Tomcat 7.0.62 OpenJDK 1.8 GitBucket 3.4  ``` Jun 28, 2015 11:02:23 PM org.apache.catalina.core.StandardServer await INFO: A valid shutdown command was received via the shutdown port. Stopping the Server instance. Jun 28, 2015 11:02:23 PM org.apache.coyote.AbstractProtocol pause INFO: Pausing ProtocolHandler [""http-bio-8180""] Jun 28, 2015 11:02:23 PM org.apache.coyote.AbstractProtocol pause INFO: Pausing ProtocolHandler [""ajp-bio-8009""] Jun 28, 2015 11:02:23 PM org.apache.catalina.core.StandardService stopInternal INFO: Stopping service Catalina Jun 28, 2015 11:02:23 PM grizzled.slf4j.Logger info INFO: Destroying life cycle class: ScalatraBootstrap Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc SEVERE: The web application [/gitbucket] registered the JDBC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [MVStore background writer nio:/opt/apache-tomcat-7.0.62/.gitbucket/data.mv.db] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [job-scheduler-1] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [job-akka.actor.default-dispatcher-5] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [AKKA_QRTZ_-1] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [Timer-1] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [Resource Destroyer in BasicResourcePool.close()] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [QuartzScheduler~job_QuartzSchedulerThread] but has failed to stop it. This is very likely to create a memory leak. Jun 28, 2015 11:02:23 PM org.apache.coyote.AbstractProtocol stop INFO: Stopping ProtocolHandler [""http-bio-8180""] Jun 28, 2015 11:02:23 PM org.apache.coyote.AbstractProtocol stop INFO: Stopping ProtocolHandler [""ajp-bio-8009""] Jun 28, 2015 11:02:23 PM org.apache.coyote.AbstractProtocol destroy INFO: Destroying ProtocolHandler [""http-bio-8180""] Jun 28, 2015 11:02:23 PM org.apache.coyote.AbstractProtocol destroy INFO: Destroying ProtocolHandler [""ajp-bio-8009""] Jun 28, 2015 11:02:23 PM org.apache.catalina.loader.WebappClassLoader loadClass INFO: Illegal access: this web application instance has been stopped already.  Could not load com.mchange.v2.resourcepool.BasicResourcePool$1DestroyResourceTask.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact. java.lang.IllegalStateException         at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1612)         at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1571)         at com.mchange.v2.resourcepool.BasicResourcePool.destroyResource(BasicResourcePool.java:980)         at com.mchange.v2.resourcepool.BasicResourcePool.access$100(BasicResourcePool.java:32)         at com.mchange.v2.resourcepool.BasicResourcePool$5.run(BasicResourcePool.java:1174)  Exception in thread ""Resource Destroyer in BasicResourcePool.close()"" java.lang.NoClassDefFoundError: com/mchange/v2/resourcepool/BasicResourcePool$1DestroyResourceTask         at com.mchange.v2.resourcepool.BasicResourcePool.destroyResource(BasicResourcePool.java:980)         at com.mchange.v2.resourcepool.BasicResourcePool.access$100(BasicResourcePool.java:32)         at com.mchange.v2.resourcepool.BasicResourcePool$5.run(BasicResourcePool.java:1174) Caused by: java.lang.ClassNotFoundException: com.mchange.v2.resourcepool.BasicResourcePool$1DestroyResourceTask         at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1720)         at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1571)         ... 3 more ``` ","false",
"Use '{loginName} {fromAddress}' for the from field within the notific…","…ation emails  See doc/README.email-sender.md for details. ","true","improvement"
"Collect all recipients into the TO field and send out the notification emails only once to all of them","Probably not useful to anyone but me ;)  See doc/README.combined-mail.md for details. ","true",
"Linux Ubuntu1404","This pull request makes the release process work on linux. - it fixes the source bashism (see separate pull request #793) - it fixes the script ""make-release-war.sh"" - it fixes the doc ""how_to_run.md""  Within ""how_to_run.md"", the description on how to do a release on windows is missing. Running ""Ant at the top of the source tree"" doesn't work since there is no build.xml any more... ","true","task"
"doc change: build.xml -> release/build.xml","The doc references a top level build.xml, which doesn't exist any more. ","true",
"Fixed bashism 'source'","# Running `./sbt.sh` emits `./sbt.sh: 2: ./sbt.sh: source: not found`  This is due to the usage of `source` within the scripts.  There are two potential fixes: - Change `#!/bin/sh` to `#!/bin/bash` - Change `source` to `.`  I'm doing the ladder one... - `find . -name ""*.sh*|xargs -n1 sed -i ""s/source /. /""` ","true","duplicate"
"Full text search using embedded Elasticsearch",,"false","feature,plugin"
"Move to Slick 3.0",,"false","improvement"
"Guide for H2 Console.","Its not really a bug. Just wanted a guide/wiki on H2 console. Whats the purpose. I noticed that they are majorly Databases in the saved settings. I am running gitbucket standalone. If I select `Generic Mysql` and try to test a connection:  I am getting `Class ""com.mysql.jdbc.Driver"" not found [90086-180]` Can someone explain primary purpose of this section and how to use it.  ","false","task"
"modify css: hide href content on printing","on printing, href content appeared.  it is caused by bootstrap.css  https://github.com/takezoe/gitbucket/blob/faae237ac522c1824eff09b9da5e9ec7b91d8fa3/src/main/webapp/assets/vendors/bootstrap/css/bootstrap.css#L183-L185 ","true","improvement"
"Repository is not found when original repository have been already renamed","Gitbucket shows ""Not Found"" when following is operated. 1. User A creates original repository (call this UserA/original) 2. Fork ""UserA/original"" to organization B. (call this OrgB/original) 3. Rename ""OrgB/original"" to ""OrgB/renamed"" 4. User B forks OrgB/renamed. (call this UserB/renamed) 5. User B commit some to UserB/renamed. 6. Create pull request from UserB/renamed to OrgB/renamed. Then Gitbucket shows ""Not Found"".  On line 288 of `PullRequestsController`, return value from `getForkedRepositories is absent. ","false","bug"
"Markdown Syntax","When I add a code block to README.md  ``` $ make vagrant                   # build vagrant box $ make vagrant-collectstatic-dev # collect all staticfiles $ make vagrant-runserver         # run development server ```  it is formatted in one line instead of three. ","false","question"
"Forkしたリポジトリを削除するとerrorになる","あるリポジトリをフォークして編集後、push しようとしたとき Error 128 になってしまいました。 その後、いろいろ試して、フォークした リポジトリを削除した時　 エラーとなり、 Your repositories には表示されますが、クリックすると org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: C:\Windows\System32\config\systemprofile.gitbucket\repositories\sys*****_\**_*******.git     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:575)     at org.eclipse.jgit.api.Git.open(Git.java:113)     at org.eclipse.jgit.api.Git.open(Git.java:97)     at gitbucket.core.util.JGitUtil$.getRepositoryInfo(JGitUtil.scala:166)     at gitbucket.core.service.RepositoryService$$anonfun$getRepository$2.apply(RepositoryService.scala:200)     at gitbucket.core.service.RepositoryService$$anonfun$getRepository$2.apply(RepositoryService.scala:193)  etc..  とエラーが表示され、結局 リネームも削除も再度forkもできなくなりました。 このリポジトリを削除する方法はありますでしょうか？ ","false",
"Pull request","How can i do the pull request ? ","false","question"
"what is the http path of gitbucket repository","I run a gitbucket on tomcat. I change the port of tomcat to 80, and change the default server context path to gitbucket.So I can access the gitbucket web page as following： http://10.10.19.105  When I start to clone a gitbucket repository, troubles come: git clone http://10.10.19.105/root/game-of -life.git  fatal: repository 'http://10.10.19.105/root/game-of -life.git/' not found  I try a new path adding /git context which can work well: git clone http://10.10.19.105/git/root/game-of -life.git  Cloning into 'game-of-life'... remote: Counting objects:1940, done .... Checking connectivity,,, done  My question is why the git path is http://[host-name]:[port]/**git**/[user]/[repository name].git? ","false","question"
"how to release a project?","I tried click 'release', and then it only show me a blank 'tags' with no release buttom, how to release a project? ","false","duplicate,question"
"Forking repository should be asynchronously",,"false","improvement"
"More Blame View Errors","The error found and corrected in #773 seems to affect some configurations differently.  I have the same issue, but only after the fix was implemented.  It seems the original would have worked properly, but I just upgraded from 2.7 to 3.3.  Here's what I found in Chrome DevTools:  ``` Uncaught TypeError: Cannot read property '1' of null  >> repo = $("".blame-action"").data(""repository"") ""http://myhiddensubdomain.myhiddendomainname.com/nocarrier/amx_modules""  >> location.pathname ""/nocarrier/amx_modules/blob/master/SymnetIP.axs""  >> location.href ""http://myhiddensubdomain.myhiddendomainname.com/nocarrier/amx_modules/blob/master/SymnetIP.axs""  >> /^\/(blame|blob)(\/.*)$/.exec(location.pathname.substring(repo.length)) null  >> /^\/(blame|blob)(\/.*)$/.exec(location.href.substring(repo.length)) [""/blob/master/SymnetIP.axs"", ""blob"", ""/master/SymnetIP.axs""] ```  It would seem as though location.href would have worked in my case.  Could it possibly be due to my subdomain configuration? ","false","bug,duplicate"
"Duplicated reference comment by updating","Duplicated reference comment is inserted if issues or issue comments which include reference to other issues are updated. ","false","bug"
"how to add group to a project","sorry,I used to use gitbucket to handler my project in my pc. but, I cant find one way to add group to a project. please someone could tell me how do it? ","false","question"
"fix diff ignore space","Now, diff ignore-space don't ignore difference between space and non-space. For example, `a = 1` and `a=1`.  this patch is fix it. ","true","improvement"
"Set http header for browser cache","Please set http header for browser cache control. For examples ETag , Last-Modified, Expires.  Especially, under /assets, and avater.  ( I looked for an effective method in scalatra and jetty , but I did not know .. ;) ","false","improvement"
"Unable to manage collaborators for groups in 3.3","I am pretty sure the previous version allowed me to add/remove users to a group -> repo -> settings -> collaborators. ","false","question"
"Extension point to add markup render",,"false","feature"
"GitBucket development setup - Question","Hi,  I've been using GitBucket and its been great. You guys are doing awesome job. I would like to see if I could participate in making some additions to the project in my spare time. Specifically, I'd like to extend the API functionalitty. I've been going through the Developer's Guide, but I am struggling to include the scalatra-forms. I've got the source and I've ran sbt in command-prompt, but the documentation isn't 100% clear to the new commers as to where to add the changes suggested. Could anyone provide some guidance? I am looking to update the developer's guide to make it easier for people in similar situation like mine. ","false","question"
"Can not show blame view.","1. Show URL (`http://hostname:port/GROUP_NAME/APP_NAME/blob/HASH/fileName`) 2. click `Blame` 3. Can not show Blame View - Chrome Inspector...  > Uncaught TypeError: Cannot read property '1' of null  It was OK if substituted as below .  ``` javascript   function updateBlame(){     /*var m = /^\/(blame|blob)(\/.*)$/.exec(location.pathname.substring(repository.length));*/    // repository => http://hostname:port/group_name/app_name    // location.href => http://hostname:port/group_name/app_name/blame/HASH/assets/FILE_NAME    // location.pathname => /group_name/app_name     var m = /^\/(blame|blob)(\/.*)$/.exec(location.href.substring(repository.length));     var mode = m[1]; ```  envirionment is.. - APPLICATION_ROOT `http://hostname:port/` - GitBucket 3.3 - Chrome Version 43.0.2357.81(mac) and 43.0.2357.81 m(win) and InternetExplorer11 ","false","bug"
"fix .travis.yml",,"true","task"
"Fix typo in release.md","Minor typo fix: ""assemnbly"" ","true",
"Simplify release operation",,"false","task"
"please support to ""go get"" for public and private repositories ","""go get"" is golang command for package download and install.  Same issue with the gitlab https://github.com/gitlabhq/gitlabhq/pull/7693  Remote import paths http://golang.org/cmd/go/#hdr-Remote_import_paths  Maybe, I think that it is all right with the addition of `<meta name=""go-import"" content=""@path git @url (repository)"" />` in [gitbucket/src/main/twirl/gitbucket/core/main.scala.html](https://github.com/takezoe/gitbucket/blob/master/src/main/twirl/gitbucket/core/main.scala.html).  But, even if redirected to the login screen, want to display the repository information before the redirect.  thank you. ","false","feature"
"Avoid NPE when master branch does not exist","fix #767. Selecting first one of `Git#branchList` for default branch when master branch does not exists. ","true","bug"
"NullPointerException occurs when open branches page","NullPointerException occurs when open branches page of a repository which doesn't have `master` branch.  Following is the stacktrace shown.  ``` java.lang.NullPointerException     at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)     at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:837)     at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:752)     at gitbucket.core.util.JGitUtil$$anonfun$getBranches$1$$anonfun$apply$31.apply(JGitUtil.scala:756)     at gitbucket.core.util.JGitUtil$$anonfun$getBranches$1$$anonfun$apply$31.apply(JGitUtil.scala:753)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.Iterator$class.foreach(Iterator.scala:750)     at scala.collection.AbstractIterator.foreach(Iterator.scala:1202)     at scala.collection.IterableLike$class.foreach(IterableLike.scala:72)     at scala.collection.AbstractIterable.foreach(Iterable.scala:54)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)     at scala.collection.AbstractTraversable.map(Traversable.scala:104)     at gitbucket.core.util.JGitUtil$$anonfun$getBranches$1.apply(JGitUtil.scala:753)     at gitbucket.core.util.JGitUtil$$anonfun$getBranches$1.apply(JGitUtil.scala:750)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.util.JGitUtil$.getBranches(JGitUtil.scala:750)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$34$$anonfun$apply$65.apply(RepositoryViewerController.scala:406)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$34$$anonfun$apply$65.apply(RepositoryViewerController.scala:405)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:30)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$34.apply(RepositoryViewerController.scala:405)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:193)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:314)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745) ``` ","false","bug"
"NoSuchElementException in raw view of large files","Opening the raw view of large files, an error occurred. In my case, it has occurred in the MySQL dump file of 10.8MiB.  There is no problem if it is unable to display, Is there a way to be downloaded? (except `git pull`)  my env - AmazonLinux2015.03 - GitBucket 3.1 - JDK 1.7.0_75 - nginx 1.6.3  stacktrace is as follow.  ``` java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:347)     at scala.None$.get(Option.scala:345)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(RepositoryViewerController.scala:297)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45$$anonfun$apply$46.apply(RepositoryViewerController.scala:294)     at scala.Option.map(Option.scala:146)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45.apply(RepositoryViewerController.scala:294)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44$$anonfun$apply$45.apply(RepositoryViewerController.scala:291)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44.apply(RepositoryViewerController.scala:291)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22$$anonfun$apply$44.apply(RepositoryViewerController.scala:287)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at gitbucket.core.util.ReferrerAuthenticator$$anonfun$gitbucket$core$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.ReferrerAuthenticator$class.gitbucket$core$util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at gitbucket.core.util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at gitbucket.core.controller.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:30)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$22.apply(RepositoryViewerController.scala:287)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:30)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:27)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) ```  gitbucket was started in a simple way such as `java -jar gitbucket.war`.  nginx server conf is as follow.  ``` nginx server {     listen 80;     index index.html index.htm index.php index.phtml;      location / {         proxy_pass                          http://127.0.0.1:8080;         proxy_redirect                      off;         proxy_set_header Host               $host;         proxy_set_header X-Real-IP          $remote_addr;         proxy_set_header X-Forwarded-Host   $host;         proxy_set_header X-Forwarded-Server $host;         proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;         proxy_connect_timeout               150;         proxy_send_timeout                  100;         proxy_read_timeout                  100;         proxy_buffers                       4 32k;         client_max_body_size                500m;         client_body_buffer_size             128k;     } } ``` ","false","bug"
"Export the gitbucket ERD to other formats too.","Please export the ERD  of gitbucket https://github.com/takezoe/gitbucket/blob/master/doc/gitbucket.erd   to other formats too, e.g. PNG image too, and include it in the WIKI page, a DDL to be inspected easily, etc. ","false","document"
"add file finder button on blob view.","Because from the github has become so. ","true","improvement"
"Don't remove disabled user's repository",,"false","improvement"
"Force IE compatibility mode off","互換表示設定されているIE11だと、Diffが正しく表示されないようです。 たぶん、以下の様な指定があると互換表示が働かなくなって、正しく表示されるようになると思うのですが…。  ``` html <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" /> ``` ","false","improvement"
"Permission denied (publickey)","HI, I am getting this error when trying to connect using ssh.  Setup: - I have LDAP configured and it works well. - Hosting using Team City (runs on Tomcat) on Windows 2008   -Running 3.2 GitBucket      I did see the other issue regarding the url, but I don't think this is applicable.   Is there some sort of error log to get further diagnostic info?  Thanks ","false",
"Add pre-tag horizontal scroll on markdown","pre tag on markdown is disabled horizontal scroll. but, I want to horizontal scroll. (eg. SQL, HTML, command line, and just like GitHub)  before. ![2015-05-20 18 01 15](https://cloud.githubusercontent.com/assets/97468/7722766/47a558d4-ff1e-11e4-88cb-076627de3bfb.png)  after. ![2015-05-20 18 01 44](https://cloud.githubusercontent.com/assets/97468/7722771/507b28bc-ff1e-11e4-919c-381378fb3197.png) ","true","improvement"
"Fix mobile view","Fix most of the bug in the a mobile screen rendering ","true","improvement"
"`_` is hidden by diff line","Fix height of diff line   before diff area ![before](https://cloud.githubusercontent.com/assets/97468/7648070/4efe6674-fb19-11e4-9c76-cec544445b86.png)  after diff area ![after](https://cloud.githubusercontent.com/assets/97468/7648074/563dc722-fb19-11e4-8583-9a32414d1ad0.png) ","true","improvement"
"diffview is not defined","When I open a commit, gitbucket does not show diff. Here is the error capture.  ![diffview_is_not_defined](https://cloud.githubusercontent.com/assets/1018469/7646404/df1bcfd8-fafd-11e4-91a8-8de7d292b758.PNG) ","false",
"org.h2.jdbc.JdbcSQLException: General error: ""java.lang.IllegalStateException: Unsynchronized metadata read [1.4.180/3]""; SQL statement:","Gitbucket  home page is not loading and I see trace below.  ``` org.h2.jdbc.JdbcSQLException: General error: ""java.lang.IllegalStateException: Unsynchronized metadata read [1.4.180/3]""; SQL statement: select x2.x3, x2.x4, x2.x5, x2.x6, x2.x7, x2.x8, x2.x9, x2.x10 from (select x11.x12 as x9, x11.x13 as x6, x11.x14 as x5, x11.x15 as x4, x11.x16 as x8, x11.x17 as x10, x11.x18 as x3, x11.x19 as x7 from (select x20.""ACTIVITY_DATE"" as x12, x20.""ACTIVITY_TYPE"" as x13, x20.""ACTIVITY_USER_NAME"" as x14, x20.""REPOSITORY_NAME"" as x15, x20.""ADDITIONAL_INFO"" as x16, x20.""ACTIVITY_ID"" as x17, x20.""USER_NAME"" as x18, x20.""MESSAGE"" as x19 from ""ACTIVITY"" x20) x11 inner join (select x21.""UPDATED_DATE"" as x22, x21.""PARENT_REPOSITORY_NAME"" as x23, x21.""DEFAULT_BRANCH"" as x24, x21.""DESCRIPTION"" as x25, x21.""ORIGIN_REPOSITORY_NAME"" as x26, x21.""ORIGIN_USER_NAME"" as x27, x21.""PARENT_USER_NAME"" as x28, x21.""PRIVATE"" as x29, x21.""REPOSITORY_NAME"" as x30, x21.""USER_NAME"" as x31, x21.""REGISTERED_DATE"" as x32, x21.""LAST_ACTIVITY_DATE"" as x33 from ""REPOSITORY"" x21) x34 on (x11.x18 = x34.x31) and (x11.x15 = x34.x30) where x34.x29 = ? order by x11.x17 desc limit 30) x2 [50000-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:168)     at org.h2.message.DbException.convert(DbException.java:295)     at org.h2.mvstore.db.MVTable.addRow(MVTable.java:624)     at org.h2.result.ResultTempTable.addRow(ResultTempTable.java:157)     at org.h2.result.ResultTempTable.addRows(ResultTempTable.java:170)     at org.h2.result.LocalResult.addRowsToDisk(LocalResult.java:291)     at org.h2.result.LocalResult.addRow(LocalResult.java:286)     at org.h2.command.dml.Select.queryFlat(Select.java:544)     at org.h2.command.dml.Select.queryWithoutCache(Select.java:644)     at org.h2.command.dml.Query.query(Query.java:322)     at org.h2.command.dml.Query.query(Query.java:290)     at org.h2.index.ViewIndex.find(ViewIndex.java:284)     at org.h2.index.ViewIndex.find(ViewIndex.java:177)     at org.h2.index.BaseIndex.find(BaseIndex.java:127)     at org.h2.index.IndexCursor.find(IndexCursor.java:159)     at org.h2.table.TableFilter.next(TableFilter.java:329)     at org.h2.command.dml.Select.queryFlat(Select.java:532)     at org.h2.command.dml.Select.queryWithoutCache(Select.java:644)     at org.h2.command.dml.Query.query(Query.java:322)     at org.h2.command.dml.Query.query(Query.java:290)     at org.h2.command.dml.Query.query(Query.java:36)     at org.h2.command.CommandContainer.query(CommandContainer.java:90)     at org.h2.command.Command.executeQuery(Command.java:197)     at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:192)     at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:38)     at scala.slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)     at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:64)     at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.build(Invoker.scala:47)     at scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.list(Invoker.scala:39)     at scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:16)     at service.ActivityService$class.getRecentActivities(ActivityService.scala:31)     at app.IndexController.getRecentActivities(IndexController.scala:8)     at app.IndexControllerBase$$anonfun$2.apply(IndexController.scala:24)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.IllegalStateException: Unsynchronized metadata read [1.4.180/3]     at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:756)     at org.h2.mvstore.MVStore.getChunkIfFound(MVStore.java:829)     at org.h2.mvstore.MVStore.getChunk(MVStore.java:814)     at org.h2.mvstore.MVStore.readPage(MVStore.java:1860)     at org.h2.mvstore.MVMap.readPage(MVMap.java:767)     at org.h2.mvstore.Page.getChildPage(Page.java:252)     at org.h2.mvstore.MVMap.binarySearch(MVMap.java:467)     at org.h2.mvstore.MVMap.binarySearch(MVMap.java:468)     at org.h2.mvstore.MVMap.get(MVMap.java:449)     at org.h2.mvstore.MVMapConcurrent.put(MVMapConcurrent.java:47)     at org.h2.store.LobStorageMap.copyLob(LobStorageMap.java:220)     at org.h2.value.ValueLobDb.link(ValueLobDb.java:248)     at org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:120)     at org.h2.mvstore.db.MVTable.addRow(MVTable.java:620)     ... 137 more ```  Is there any way to recover this database? ","false","question"
"fix login value for Webhook and API.","Hi.  Why `ApiUser#login` value is `Account#fullName`? (https://github.com/takezoe/gitbucket/blob/master/src/main/scala/gitbucket/core/api/ApiUser.scala#L30)  The issues are as follows. - In webhook payloads, the API url is invalid. - Not work `GitHub pull request builder plugin`. (https://github.com/takezoe/gitbucket/issues/684#issuecomment-99663083) ","true","bug"
"java.lang.AbstractMethodError: Plugin.initialize","I tried to update the gitbucket to latest 3.2 build, but I'm getting  following errors.   ``` 2015-05-11 06:41:10.639:WARN:oejuc.AbstractLifeCycle:FAILED o.e.j.w.WebAppContext{/,file:/opt/gitbucket/data/tmp/webapp/},file:/opt/gitbucket/lib/gitbucket.war: java.lang.AbstractMethodError: Plugin.initialize(Lgitbucket/core/plugin/PluginRegistry;Ljavax/servlet/ServletContext;Lgitbucket/core/service/SystemSettingsService$SystemSettings;)V java.lang.AbstractMethodError: Plugin.initialize(Lgitbucket/core/plugin/PluginRegistry;Ljavax/servlet/ServletContext;Lgitbucket/core/service/SystemSettingsService$SystemSettings;)V         at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:123)         at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:98)         at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)         at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)         at gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistory.scala:98)         at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.scala:41)         at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.scala:30)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)         at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:30)         at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:782)         at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)         at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:774)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1242)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)         at org.eclipse.jetty.server.Server.doStart(Server.java:282)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at JettyLauncher.main(JettyLauncher.java:65) 2015-05-11 06:41:10.641:WARN:oejuc.AbstractLifeCycle:FAILED org.eclipse.jetty.server.Server@63070bab: java.lang.AbstractMethodError: Plugin.initialize(Lgitbucket/core/plugin/PluginRegistry;Ljavax/servlet/ServletContext;Lgitbucket/core/service/SystemSettingsService$SystemSettings;)V java.lang.AbstractMethodError: Plugin.initialize(Lgitbucket/core/plugin/PluginRegistry;Ljavax/servlet/ServletContext;Lgitbucket/core/service/SystemSettingsService$SystemSettings;)V         at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:123)         at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:98)         at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)         at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)         at gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistory.scala:98)         at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.scala:41)         at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.scala:30)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)         at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:30)         at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:782)         at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)         at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:774)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1242)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)         at org.eclipse.jetty.server.Server.doStart(Server.java:282)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at JettyLauncher.main(JettyLauncher.java:65) Exception in thread ""main"" java.lang.AbstractMethodError: Plugin.initialize(Lgitbucket/core/plugin/PluginRegistry;Ljavax/servlet/ServletContext;Lgitbucket/core/service/SystemSettingsService$SystemSettings;)V         at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:123)         at gitbucket.core.plugin.PluginRegistry$$anonfun$initialize$1.apply(PluginRegistory.scala:98)         at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)         at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)         at gitbucket.core.plugin.PluginRegistry$.initialize(PluginRegistory.scala:98)         at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.scala:41)         at gitbucket.core.servlet.InitializeListener$$anonfun$contextInitialized$1.apply(InitializeListener.scala:30)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)         at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)         at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)         at gitbucket.core.servlet.InitializeListener.contextInitialized(InitializeListener.scala:30)         at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:782)         at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:424)         at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:774)         at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:249)         at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1242)         at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717)         at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:95)         at org.eclipse.jetty.server.Server.doStart(Server.java:282)         at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64)         at JettyLauncher.main(JettyLauncher.java:65) ```  3.1 was also throwing same errors. ","false","question"
"pretty printing","It seems to me that GitBucket is relying on google-code-prettify pretty printer. However, do you always pretty print as if the underlying language were C (hardcoded)? If it is the case, it would be nice to be able to add other languages. Also how would the language be decided: based on file extension?  ","false","improvement"
"ArrayIndexOutOfBoundsException with gitbucket 3.2 after server reboot","3 day ago we updated to 3.2 with no issues so far, but today after a server reboot our startpage of gitbucket does show the below exception.  the repo urls and git access works but not the default landing page  also for my user i can check the ""Public Activity"" tab `/gitbucket/user1?tab=activity` but for another user there is a similar exception. but the activity for my user seems to be outdated (last activity was 4 days ago according to the page).  ``` org.h2.jdbc.JdbcSQLException: General error: ""java.lang.ArrayIndexOutOfBoundsException: 6""; SQL statement: select x2.x3, x2.x4, x2.x5, x2.x6, x2.x7, x2.x8, x2.x9, x2.x10 from (select x11.x12 as x9, x11.x13 as x6, x11.x14 as x5, x11.x15 as x4, x11.x16 as x8, x11.x17 as x10, x11.x18 as x3, x11.x19 as x7 from (select x20.""ACTIVITY_DATE"" as x12, x20.""ACTIVITY_TYPE"" as x13, x20.""ACTIVITY_USER_NAME"" as x14, x20.""REPOSITORY_NAME"" as x15, x20.""ADDITIONAL_INFO"" as x16, x20.""ACTIVITY_ID"" as x17, x20.""USER_NAME"" as x18, x20.""MESSAGE"" as x19 from ""ACTIVITY"" x20) x11 inner join (select x21.""UPDATED_DATE"" as x22, x21.""PARENT_REPOSITORY_NAME"" as x23, x21.""DEFAULT_BRANCH"" as x24, x21.""DESCRIPTION"" as x25, x21.""ORIGIN_REPOSITORY_NAME"" as x26, x21.""ORIGIN_USER_NAME"" as x27, x21.""PARENT_USER_NAME"" as x28, x21.""PRIVATE"" as x29, x21.""REPOSITORY_NAME"" as x30, x21.""USER_NAME"" as x31, x21.""REGISTERED_DATE"" as x32, x21.""LAST_ACTIVITY_DATE"" as x33 from ""REPOSITORY"" x21) x34 on (x11.x18 = x34.x31) and (x11.x15 = x34.x30) where x34.x29 = ? order by x11.x17 desc limit 30) x2 [50000-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:168)     at org.h2.message.DbException.convert(DbException.java:295)     at org.h2.command.Command.executeQuery(Command.java:209)     at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:192)     at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)     at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:38)     at scala.slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)     at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:64)     at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.build(Invoker.scala:47)     at scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.list(Invoker.scala:39)     at scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:16)     at gitbucket.core.service.ActivityService$class.getRecentActivities(ActivityService.scala:38)     at gitbucket.core.controller.IndexController.getRecentActivities(IndexController.scala:14)     at gitbucket.core.controller.IndexControllerBase$$anonfun$2.apply(IndexController.scala:31)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:37)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)     at org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor.run(AprEndpoint.java:1780)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:744) Caused by: java.lang.ArrayIndexOutOfBoundsException: 6     at org.h2.index.PageDataLeaf.getRowAt(PageDataLeaf.java:332)     at org.h2.index.PageDataLeaf.getRowWithKey(PageDataLeaf.java:455)     at org.h2.index.PageDataNode.getRowWithKey(PageDataNode.java:280)     at org.h2.index.PageDataNode.getRowWithKey(PageDataNode.java:280)     at org.h2.index.PageDataIndex.getRowWithKey(PageDataIndex.java:426)     at org.h2.index.PageDataIndex.getRow(PageDataIndex.java:415)     at org.h2.table.RegularTable.getRow(RegularTable.java:106)     at org.h2.index.PageBtreeIndex.getRow(PageBtreeIndex.java:301)     at org.h2.index.PageBtreeCursor.get(PageBtreeCursor.java:45)     at org.h2.index.MultiVersionCursor.get(MultiVersionCursor.java:82)     at org.h2.index.IndexCursor.get(IndexCursor.java:260)     at org.h2.table.TableFilter.getValue(TableFilter.java:897)     at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:186)     at org.h2.expression.Alias.getValue(Alias.java:36)     at org.h2.command.dml.Select.queryFlat(Select.java:539)     at org.h2.command.dml.Select.queryWithoutCache(Select.java:644)     at org.h2.command.dml.Query.query(Query.java:322)     at org.h2.command.dml.Query.query(Query.java:290)     at org.h2.index.ViewIndex.find(ViewIndex.java:284)     at org.h2.index.ViewIndex.find(ViewIndex.java:177)     at org.h2.index.BaseIndex.find(BaseIndex.java:127)     at org.h2.index.IndexCursor.find(IndexCursor.java:159)     at org.h2.table.TableFilter.next(TableFilter.java:329)     at org.h2.table.TableFilter.next(TableFilter.java:399)     at org.h2.command.dml.Select.queryFlat(Select.java:532)     at org.h2.command.dml.Select.queryWithoutCache(Select.java:644)     at org.h2.command.dml.Query.query(Query.java:322)     at org.h2.command.dml.Query.query(Query.java:290)     at org.h2.index.ViewIndex.find(ViewIndex.java:284)     at org.h2.index.ViewIndex.find(ViewIndex.java:177)     at org.h2.index.BaseIndex.find(BaseIndex.java:127)     at org.h2.index.IndexCursor.find(IndexCursor.java:159)     at org.h2.table.TableFilter.next(TableFilter.java:329)     at org.h2.command.dml.Select.queryFlat(Select.java:532)     at org.h2.command.dml.Select.queryWithoutCache(Select.java:644)     at org.h2.command.dml.Query.query(Query.java:322)     at org.h2.command.dml.Query.query(Query.java:290)     at org.h2.command.dml.Query.query(Query.java:36)     at org.h2.command.CommandContainer.query(CommandContainer.java:90)     at org.h2.command.Command.executeQuery(Command.java:197)     ... 146 more ``` ","false",
"""#"" + number in code block is unexpectedly rewritten","When I write the Markdown text containing ""#"" + number in the code block, ""#"" is automatically replaced with ""issues:"". This bug bothers us when we're discussing the commit message.  **How to reproduce** 1. Open issue page and click ""New issue"" button 2. Type the following text as a comment of the issue:        ```    refs #42    ``` 3. Click ""Preview"" tab  **Expected result** The string `refs #42` is displayed in the code block (pre element).  **Actual result** ![gitbucket_code_block](https://cloud.githubusercontent.com/assets/2604763/7553589/e4accc88-f73b-11e4-8d67-5e6cd5522cb5.png) ","false","bug"
"feature / diffing images","added images on diff view.  like https://help.github.com/articles/rendering-and-diffing-images/#viewing-differences https://github.com/blog/817-behold-image-view-modes  2-up ![2-up](https://cloud.githubusercontent.com/assets/18655/7535028/a1f93d9e-f5bb-11e4-92cc-90d6fc4503d9.png)  Swipe ![swipe](https://cloud.githubusercontent.com/assets/18655/7541227/74afb59c-f5ee-11e4-9d00-d673582346c0.gif)  Onion skin ![onion](https://cloud.githubusercontent.com/assets/18655/7541221/672ab890-f5ee-11e4-8a31-dc0c2ff1191b.gif)  Difference ![difference](https://cloud.githubusercontent.com/assets/18655/7541177/17cd5834-f5ee-11e4-9a9c-bde850d5c877.png)  Blink  ( original ) ![blink](https://cloud.githubusercontent.com/assets/18655/7541214/5a01eec2-f5ee-11e4-8e13-d82871d311b0.gif) ","true","feature"
"[Feature] Importer","I would love to see a new feature to allow imports of existing repositories, Meaning all the branches automatically get imported into GitBucket. ","false",
"gitbucket.war 3.2 library is a duplicate","gitbucket.war includes c3p0-0.9.5.jar and c3p0-0.9.1.1.jar. ","false","bug"
"Gray logo","The logo in the navbar was black, but that didn't look so good. Somewhat lighter, gray, looks much better. ","true","improvement"
"Comment in a pull request commit on a line number in split view is not visible to other users in unified view","To reproduce: 1. Make a pull request with multiple commits. 2. From a different user open the pull request and view a commit diff in split view.  3. Comment on a couple different line numbers in different files. 4. Refresh and click on link to the commit from the comment in the pull request stream.    Observe in Unified view only 1 line comment in visible (the first one) and none of the other comments are. 5. Click on split view     Observe all the comments are visible. ","false",
"Error when delete repository","i got a Exception when i delete a repository。I think it is similar to #412, but it recurs.  （env：win7，gitbucket3.2） java.io.IOException: Unable to delete file: d:\dev\repo\gitbucket\repositories\liuwenjun\spms.git\objects\pack\pack-60af82734d0e4161b7267c95d7b8f8b9d45fae0e.pack     at org.apache.commons.io.FileUtils.forceDelete(FileUtils.java:2279)     at org.apache.commons.io.FileUtils.cleanDirectory(FileUtils.java:1653) ","false","duplicate"
"jQuery updated to v1.11.1",,"true","improvement"
"Allow to shutdown gitbucket when launched with embedded jetty","It would be great to have the possibility to shutdown the application via some API when launched with embedded jetty via: `java -jar gitbucket.war`.  A simple protected (by paswword, token, ...) http endpoint could do the trick. ","false","feature,pending"
"Disable certain git commands","I would like to know whether any workaround for disabling ""git push -f"" for all repos ","false","feature,pending"
"Opening svg for display very slow and displays jquery popup","Just navigating to the file leads to the following situation where the pretty printed svg source is eventually displayed but after a very long time (svg file has 2341 lines).  ![gitb1](https://cloud.githubusercontent.com/assets/12143150/7444306/6ceba79c-f17c-11e4-97a1-2f2795379255.png) ![gitb2](https://cloud.githubusercontent.com/assets/12143150/7444307/6cee0bc2-f17c-11e4-9f4f-3eaca1317498.png) ![gitb3](https://cloud.githubusercontent.com/assets/12143150/7444308/6cf0b73c-f17c-11e4-89dc-4ccdd5ad2c25.png) ","false","duplicate"
"Move to Elasticsearch",,"false","improvement,pending"
"Document about release operation",,"false","task"
"Using [raw] button: very slow or timeout","Upon attempting to display a 124kB svg file raw, I invariabily get a ""Bad gateway"" error (behind proxy) and the file is never displayed raw. Similarly, displaying a text file raw is incredibly slow. Is this the reason why github is serving such files from a different server? https://raw.githubusercontent.com/takezoe/gitbucket/3732963d4baecc0f0ee790fa11d64c939083ea58/etc/icons.svg  Bug? ","false","improvement"
"Suggestion for good IDE setup","Hi,  can someone give advices on how to correctly setup an IDE to work on the project? I tried Eclipse (& scala-ide), Netbeans & IDEA without lot of success.  In all 3 I can import the project, but in none of them I have a correct setup in which I have completion & navigation between Java, Scala & templates.  Of course using sbt on command line of course I build/run correctly the project  Thanks for any help.  _PS: as you might have understand I am new to scala world_ ","false",
"Web hook issue","Hi! we have many repositories in our gitbucket server. In a given repository X, a user A pushes some changes and the web hook to jenkins is fired. Later a given user B pushes some changes to the same repo, but the web hook is not fired.   I upgrade gitbucket from v2.6 to v3.1.1.  What do you think is going on here? Thanks! ","false",
"How to validate upgrades?","Hello everyone,  _""This issue is not a defect and can be marked as question/discussion""_  We are investigating to use [gitbucket](https://github.com/takezoe/gitbucket) in my company. In such a process we'd like to know how others  have implemented an upgrade strategy of the system. A SCM tool, like [gitbucket](https://github.com/takezoe/gitbucket), can quickly become quite critical ; thus just deploying the latest war looks like to be a little dangerous.  Can some of you explain how they deal with that?  PS: we understand that sources are ""safe"" in the way that an upgrade does not touch the git bare repositories, but nevertheless a non running front-end and http api in front can lead to a non productivity.  Thanks for your hints. ","false","question"
"SSH base URL configuration should be separated from HTTP base URL",,"false","improvement"
"NullPointerException on MainPage after PC-Crash","After a PC-Crash, i got the following NullPointerException on the MainPage after Login. Repository sites are working and access them via git is also still possible.  org.h2.jdbc.JdbcSQLException: Eingabe/Ausgabe: ""java.io.IOException: java.lang.NullPointerException""; ""lob: null table: 58 id: 70"" IO Exception: ""java.io.IOException: java.lang.NullPointerException""; ""lob: null table: 58 id: 70"" [90031-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:168)     at org.h2.message.DbException.convertIOException(DbException.java:330)     at org.h2.value.ValueLobDb.getString(ValueLobDb.java:302)     at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:285)     at com.mchange.v2.c3p0.impl.NewProxyResultSet.getString(NewProxyResultSet.java:934)     at scala.slick.driver.JdbcTypesComponent$JdbcTypes$StringJdbcType.getValue(JdbcTypesComponent.scala:203)     at scala.slick.driver.JdbcTypesComponent$JdbcTypes$StringJdbcType.getValue(JdbcTypesComponent.scala:200)     at scala.slick.jdbc.SpecializedJdbcResultConverter$$anon$2.read(SpecializedJdbcResultConverters.scala:45)     at scala.slick.jdbc.SpecializedJdbcResultConverter$$anon$2.read(SpecializedJdbcResultConverters.scala:43)     at scala.slick.relational.ProductResultConverter.read(ResultConverter.scala:56)     at scala.slick.relational.ProductResultConverter.read(ResultConverter.scala:46)     at scala.slick.relational.TypeMappingResultConverter.read(ResultConverter.scala:125)     at scala.slick.driver.JdbcInvokerComponent$QueryInvoker.extractValue(JdbcInvokerComponent.scala:42)     at scala.slick.jdbc.StatementInvoker$$anon$1.extractValue(StatementInvoker.scala:63)     at scala.slick.jdbc.PositionedResultIterator.fetchNext(PositionedResult.scala:176)     at scala.slick.util.ReadAheadIterator$class.scala$slick$util$ReadAheadIterator$$update(ReadAheadIterator.scala:34)     at scala.slick.util.ReadAheadIterator$class.hasNext(ReadAheadIterator.scala:40)     at scala.slick.jdbc.PositionedResultIterator.hasNext(PositionedResult.scala:167)     at scala.collection.Iterator$class.foreach(Iterator.scala:750)     at scala.slick.jdbc.PositionedResultIterator.foreach(PositionedResult.scala:167)     at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:65)     at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.build(Invoker.scala:47)     at scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.list(Invoker.scala:39)     at scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:16)     at gitbucket.core.service.ActivityService$class.getRecentActivitiesByOwners(ActivityService.scala:41)     at gitbucket.core.controller.IndexController.getRecentActivitiesByOwners(IndexController.scala:14)     at gitbucket.core.controller.IndexControllerBase$$anonfun$2.apply(IndexController.scala:42)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:30)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:27)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Unknown Source) Caused by: java.io.IOException: java.lang.NullPointerException     at org.h2.message.DbException.convertToIOException(DbException.java:364)     at org.h2.util.IOUtils.copyAndCloseInput(IOUtils.java:213)     at org.h2.util.IOUtils.readStringAndClose(IOUtils.java:307)     at org.h2.value.ValueLobDb.getString(ValueLobDb.java:292)     ... 164 more Caused by: java.lang.NullPointerException     at org.h2.mvstore.StreamStore$Stream.nextBuffer(StreamStore.java:453)     at org.h2.mvstore.StreamStore$Stream.read(StreamStore.java:414)     at sun.nio.cs.StreamDecoder.readBytes(Unknown Source)     at sun.nio.cs.StreamDecoder.implRead(Unknown Source)     at sun.nio.cs.StreamDecoder.read(Unknown Source)     at java.io.InputStreamReader.read(Unknown Source)     at java.io.BufferedReader.fill(Unknown Source)     at java.io.BufferedReader.read1(Unknown Source)     at java.io.BufferedReader.read(Unknown Source)     at org.h2.util.IOUtils.copyAndCloseInput(IOUtils.java:200)     ... 166 more ","false","question"
"(refs #441) Add limit of activity log configuration","Delete old activity logs if activity log limit has been specified. ","true","improvement"
"Implement additional accessibility fixes",,"true","improvement"
"Private Activity - similar to the ""Public Activity""","Since GitBucket is used mostly by teams, and less for open source projects, a tab with ""Private Activity"" that would behave exactly like the ""Public Activity"" would be very helpful.  Right now there's only the ""Recent Activity"" that shows all changes, but from a project management point of view, it would be very helpful if ""Private Activity"" were available. ","false","help wanted,improvement"
"Display SVG images instead of blob by default","The source code for an image can be big and slow to render. Moreover, the image itself might be more relevant information when browsing through the repository. Default GitHub behavior is to display the rendered blob but provides buttons for switching between the two views. See e.g. https://github.com/takezoe/gitbucket/blob/3732963d4baecc0f0ee790fa11d64c939083ea58/etc/icons.svg for an example. Would be nice to have. ","false","feature,help wanted"
"fix test hook error","When posting test hook on empty repository, Gitbucket throws NPE.  ``` java.lang.NullPointerException     at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)     at org.eclipse.jgit.revwalk.RevWalk.lookupCommit(RevWalk.java:656)     at org.eclipse.jgit.api.LogCommand.add(LogCommand.java:330)     at org.eclipse.jgit.api.LogCommand.add(LogCommand.java:189)     at gitbucket.core.controller.RepositorySettingsControllerBase$$anonfun$14$$anonfun$apply$14.apply(RepositorySettingsController.scala:167)     at gitbucket.core.controller.RepositorySettingsControllerBase$$anonfun$14$$anonfun$apply$14.apply(RepositorySettingsController.scala:164)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:26)     at gitbucket.core.controller.RepositorySettingsControllerBase$$anonfun$14.apply(RepositorySettingsController.scala:164)     at gitbucket.core.controller.RepositorySettingsControllerBase$$anonfun$14.apply(RepositorySettingsController.scala:163)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$ownerOnly$1$$anonfun$apply$2.apply(Authenticator.scala:34)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$ownerOnly$1$$anonfun$apply$2.apply(Authenticator.scala:34)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$gitbucket$core$util$OwnerAuthenticator$$authenticate$1$$anonfun$apply$3.apply(Authenticator.scala:41)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$gitbucket$core$util$OwnerAuthenticator$$authenticate$1$$anonfun$apply$3.apply(Authenticator.scala:39)     at scala.Option.map(Option.scala:146)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$gitbucket$core$util$OwnerAuthenticator$$authenticate$1.apply(Authenticator.scala:39)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$gitbucket$core$util$OwnerAuthenticator$$authenticate$1.apply(Authenticator.scala:38)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.OwnerAuthenticator$class.gitbucket$core$util$OwnerAuthenticator$$authenticate(Authenticator.scala:38)     at gitbucket.core.util.OwnerAuthenticator$$anonfun$ownerOnly$1.apply(Authenticator.scala:34)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)          ...(continue) ```  fix above error. ","true","bug"
"Adding the possibility to have read only collaborators","Hi, I have changed the code a bit to allow read only collaborators. That means you can only fork the repo but not push to it. Initially I was thinking to create a role based auth, it would be much more flexible, but this is what I have so far.   Let me know what you think ","true","feature"
"Sites functionality!","Hi,  GitHub already has support for ""sites"", but the implementation and handling seems quite confusing and complicated (with the special gh-pages branch).  GitBucket has a very nice support for WIKI by using another Git repo with the `_WIKI` suffix.  Support for ""sites"" could be implemented in a similar clean way the WIKI is implemented. So the repo structure would look like:  ``` repo repo_WIKI repo_SITE ```  see #703  ","false","feature"
"Fix typo","Fix typo in the directory structure documentation: It should read Repositories, instead of Repositoties ","true",
"Add non-group members to repository collaborators","I like the ability to add collaborators to a group and have them automatically repository collaborators. However, I'd like to add non-group members to repositories as collaborators.  For instance, say I have a private installation for my company. I use the groups feature to combine logically-related repositories, so for instance myapp/myapp is myapp's code, myapp/blog is its static blog, etc. I want to hire someone to work on myapp, but I only want them to have access to myapp/myapp. As it stands, it looks like I need to add them to the myapp group, thus giving them access to myapp/blogand friends.  Most ideal would be per-repository/group ACLs. Failing that, I'd like to give a collaborator access to myapp/myapp without granting access to everything else under the myapp group.  Thanks. ","false","feature"
"(refs #721)NullPointerException on getFileList","NullPointerException occured on getFileList When branch has multi-origin and get sub-folder file list. (see test https://github.com/takezoe/gitbucket/blob/ebc5219ce635d80c0bafd400e3c68a00879c0771/src/test/scala/gitbucket/core/util/JGitUtilSpec.scala#L93 ) ","true","bug"
"Label unlabelled icons for accessibility.",,"true","improvement"
"i got a ""java.lang.NullPointerException""","hi,i finded a bug in gitbucket 3.1.1 & win7. i pushed my code into server,and i viewed the code on the server,i  got this result.plz tell me how can i do? java.lang.NullPointerException     at org.eclipse.jgit.util.RawParseUtils.commitMessage(RawParseUtils.java:1024)     at org.eclipse.jgit.revwalk.RevCommit.getFullMessage(RevCommit.java:440)     at gitbucket.core.util.JGitUtil$$anonfun$getFileList$1$$anonfun$apply$11.apply(JGitUtil.scala:303)     at gitbucket.core.util.JGitUtil$$anonfun$getFileList$1$$anonfun$apply$11.apply(JGitUtil.scala:298)     at scala.collection.immutable.List.map(List.scala:273)     at gitbucket.core.util.JGitUtil$$anonfun$getFileList$1.apply(JGitUtil.scala:298)     at gitbucket.core.util.JGitUtil$$anonfun$getFileList$1.apply(JGitUtil.scala:199)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:35)     at gitbucket.core.util.JGitUtil$.getFileList(JGitUtil.scala:199)     at gitbucket.core.controller.RepositoryViewerControllerBase$$anonfun$gitbucket$core$controller$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$75$$anonfun$apply$76.apply(RepositoryViewerController.scala:509)     ... ","false","bug"
"i got a ""java.lang.NullPointerException""","duplicate #721  ","false","duplicate"
"How about ssh keys in LDAP?","I use FreeIPA. FreeIPA provides a LDAP server which allows gitbucket to use LDAP auth. In addition FreeIPA stores ssh keys for a user in LDAP. Would it be possible (feasible) to add a feature for gitbucket to use the keys in LDAP?  ","false","question"
"Feature/api add issue urls","- add html_url and comments_url on api issue - add html_url on api issue-comment ","true","improvement"
"Authentication failed when cloning public repositories","Hello,  I'm using gitbucket 3.1.1 running on [docker container](https://registry.hub.docker.com/u/f99aq8ove/gitbucket/) with the following configuration.  ``` gravatar=true notification=true is_create_repository_option_public=true ldap_authentication=false ssh=false smtp.host=smtp.mandrillapp.com allow_account_registration=false smtp.from_name=Gitbucket Notification smtp.port=587 allow_anonymous_access=false smtp.from_address=****** smtp.password=****** smtp.user=****** ```  When I tried to clone my public repository on gitbucket, authentication failed and I couldn't clone my repository.  ``` bash $git clone http://my_gitbucket_server/git/fukui/test_public.git Cloning into 'test_public'... Username for 'http://my_gitbucket_server': fukui     Password for 'http://fukui@my_gitbucket_server':  fatal: Authentication failed for 'http://my_gitbucket_server/git/fukui/test_public.git/' ```  In contrast, cloning private repositories succeeded with the same configuration.  Thank you. ","false","duplicate"
"Fix style of message for browsers that do not support drag'n'drop file u...","Screenshot(IE9)  before fix https://drive.google.com/file/d/0B3MHNRDTZ8GgSzB2RS04NWUzWG8/view?usp=sharing https://drive.google.com/file/d/0B3MHNRDTZ8GgRk45cEdvQ25CQXc/view?usp=sharing  after fix https://drive.google.com/file/d/0B3MHNRDTZ8GgZmlQbmxoRXVSbzA/view?usp=sharing ","true","improvement"
"Can't load index page","Hello,  Since few days I can't load the index page. Instead I have this java exception:  java.lang.IllegalArgumentException: named capturing group is missing trailing '}'     at java.util.regex.Matcher.appendReplacement(Matcher.java:792)     at scala.util.matching.Regex$Replacement$class.replace(Regex.scala:804)     at scala.util.matching.Regex$MatchIterator$$anon$1.replace(Regex.scala:782)     at scala.util.matching.Regex$$anonfun$replaceAllIn$1.apply(Regex.scala:473)     at scala.util.matching.Regex$$anonfun$replaceAllIn$1.apply(Regex.scala:473)     at scala.collection.Iterator$class.foreach(Iterator.scala:750)     at scala.collection.AbstractIterator.foreach(Iterator.scala:1202)     at scala.util.matching.Regex.replaceAllIn(Regex.scala:473)     at gitbucket.core.view.helpers$RegexReplaceString.replaceAll(helpers.scala:151)     at gitbucket.core.view.helpers$.activityMessage(helpers.scala:164)     at gitbucket.core.helper.html.activities$.gitbucket$core$helper$html$activities$$simpleActivity$1(activities.template.scala:49)     at gitbucket.core.helper.html.activities$$anonfun$apply$1.apply(activities.template.scala:72)     at gitbucket.core.helper.html.activities$$anonfun$apply$1.apply(activities.template.scala:59)     at scala.collection.immutable.List.map(List.scala:277)     at gitbucket.core.helper.html.activities$.apply(activities.template.scala:59)     at gitbucket.core.html.index$.apply(index.template.scala:28)     at gitbucket.core.controller.IndexControllerBase$$anonfun$2.apply(IndexController.scala:31)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at gitbucket.core.controller.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:88)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:82)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:182)     at gitbucket.core.controller.ControllerBase.withRouteMultiParams(ControllerBase.scala:27)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:82)     at gitbucket.core.controller.ControllerBase.invoke(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:171)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:493)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at gitbucket.core.controller.ControllerBase.runRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:121)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at gitbucket.core.controller.ControllerBase.executeRoutes(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at gitbucket.core.controller.ControllerBase.withResponse(ControllerBase.scala:27)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at gitbucket.core.controller.ControllerBase.withRequestResponse(ControllerBase.scala:27)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at gitbucket.core.controller.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:27)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at gitbucket.core.controller.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at gitbucket.core.controller.ControllerBase.withRequest(ControllerBase.scala:27)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at gitbucket.core.controller.ControllerBase.handle(ControllerBase.scala:27)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at gitbucket.core.controller.ControllerBase.doFilter(ControllerBase.scala:64)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:30)     at gitbucket.core.servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withTransaction(JdbcBackend.scala:46)     at gitbucket.core.servlet.TransactionFilter.doFilter(TransactionFilter.scala:27)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:370)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745)  Since this I upgraded from 2.8 to 3.1 just to see if it change something but it's still the same.  Thanks in advance for your help.  Rémi ","false","bug"
"Patch version identifier and Account display mailAddress ","This pull request is adding in patchVersion so that the releases like 3.1.1 will display the full release in the header. It will work with 3.2 or 3.2.1 versions style.  This also has a change to display the mailAddress under account. ","true","improvement"
"How to make Japanese link with daku-on(U+3099) and han-daku-on(U+309a)","I wrote hash link in Japanese on markdown.  ``` md # パスワード  [パスワード](#パスワード) ```  Do not work the link that has been converted markdown to html.  ``` html <h1 class=""markdown-head"">   <a class=""markdown-anchor-link"" href=""#%e3%83%8f%e3%82%9a%e3%82%b9%e3%83%af%e3%83%bc%e3%83%88%e3%82%99""></a>   <a class=""markdown-anchor"" name=""%e3%83%8f%e3%82%9a%e3%82%b9%e3%83%af%e3%83%bc%e3%83%88%e3%82%99""></a>   パスワード </h1> <p><a href=""#パスワード"">パスワード</a></p> ```  `%e3%83%8f%e3%82%9a%e3%82%b9%e3%83%af%e3%83%bc%e3%83%88%e3%82%99` is `パスワード` (""ハ (U+30cf)"", ""゚ (U+309a)"", ""ス (U+30b9)"", ""ワ (U+30ef)"", ""ー (U+30fc)"", ""ト (U+30c8)"", ""゙ (U+3099)""). Not `パスワード` (""パ (U+30d1)"", ""ス (U+30b9)"", ""ワ (U+30ef)"", ""ー (U+30fc)"", ""ド (U+30c9)"").  Perhaps the effect of #272 normalization. ","false","bug"
"Comments in diff are sometimes not shown.","Diffにコメントを記載した場合、一番上に来るDiffに書いたコメントが見えなくなる現象がありました。 「Ignore Space」にチェックを入れることで見えるようになることも確認しています。 ブラウザで要素を検証したところdivタグに「style=""display: none;""」が入っていました。  https://github.com/takezoe/gitbucket/blob/3b7e6aa68e65c8ad664ca70a491c39e8890a8611/src/main/twirl/gitbucket/core/helper/diff.scala.html#L162 で、画面一番下の「Show line notes below」の表示/非表示をやってるんですが、その絞り込みが出来ていないようです。 https://github.com/takezoe/gitbucket/blob/3b7e6aa68e65c8ad664ca70a491c39e8890a8611/src/main/twirl/gitbucket/core/repo/commentform.scala.html#L62 のようにcomment-listの下のみにしないと表示されないようです。 ","false","bug"
"URL with / at the end returns 404 error","When I tried to access a repository with an URL that has / at the end, 404 error was returned (as in the screenshot below):  ![screenshot](https://cloud.githubusercontent.com/assets/809530/7108252/517849c8-e1bb-11e4-8b8c-60ef90ea9900.png)  Is this behavior known? ","false",
"Not work the webhook under a proxy.","gitbucket running on my server under a proxy.  webhook work nice when destination ip on local. but not work when global ip.  Do you gitbucket webhook supported under  a proxy environment? ","false","improvement"
"Fix db connection error in dev mode","Changes to close the no longer needed DB connections.  In the development, i think you maybe use `container:restart` or `~ ;copy-resources;aux-compile`. However, since the H2 DB file is locked, can not normally operate.  The above problem will be fixed by this PR ","true","improvement"
"Your Projects container formatting suggestion","Hi all,  After created new repository, I did not take into consideration length of its name and in the UI it looks a little bad. Just thought I'll add a suggestion to trim the text of group/repository_name to a fixed value and add ""..."".   Thanks  ","false","improvement"
"The deleted user names exist in the complement list.","When a user manages repository collaborators, the deleted user names exist in the complement list. But a user can not add the deleted user name to collaborator list. ","false","bug"
"[ closed issue #644 ] reappears...","Hi! Mr.takezoe.  Closed Issue #644 reappears In V3.1 & V3.1.1...  Maybe. ","false","duplicate"
"fix word-diff javascript error","javascript error occured when diff contains the word 'hasOwnProperty'. ","true","bug"
"Markdown list generation bug","Hi all,  I've been really impressed with this project. Just wanted to inform you about a bug I seem to have discovered. I made a very simple list (GitHub documentation): (formatting is messed up)  <div> 1. Item 1 2. Item 2 3. Item 3    * Item 3a    * Item 3b 4. Item 4 5. Item 5 6. Item 6 </div>  GitBucket does not seem to process the list after the sub points correctly. It marks items 4,5,6 as 1,2,3 making it looks like two separate lists.  Thanks ","false",
"Personal Wiki page","I think i'ts a good idea to have a Wiki page per user (not only per repo). To allow users to make personal public or private pages. ","false","feature,pending"
"Fix basic auth read when anon access disabled","Basic authentication fails when not updating a public repository with the ""Disable Anonymous Access"" option enabled ","true","duplicate"
"fix some api user is invalid, and add content-type on webhook","fix some api user is invalid - issue.userName -> issue.openedUserName - issueComment.userName -> issueComment.commentedUserName  and add content-type on webhook request header. ( jenkins gprb need content-type since  1.16-7 https://github.com/jenkinsci/ghprb-plugin/commit/592a99a1ad032e63327feea08a78e34eca99b139 )  refs #684   ","true","bug"
"web ui merge does not update pull request that already exist","Steps to Reproduce. 1. create pull request A (from develop into master) 2. create pull request B (from feature into develop) 3. merge pull request B via web ui (update develop branch) 4. pull request A should be updated, but actual it is not updated.  PullRequestsControllerBase ""/:owner/:repository/pull/:id/merge"" should call PullRequestService.updatePullRequests. ","false","bug,help wanted"
"Fix issue notifications","As explained by @troter on Issue #689, the Notification class can't notify (send email) when a new issue or pull request is created because the transaction wasn't committed yet, and the getIssue method inside the Notifier class runs in a different session.  To fix it I just pass the issue object instead of issueId to the Notifier class. ","true","bug"
"WebHook payload JSON has wrong values and names","The WebHook Payload JSON have some issues: 1. pusher.login, repositiry.owner.login are actually Display Name, instead of actual login. commits[].author, committer, pusher etc use the field named 'name'. 2. repository.watchers_coun field (note the missing t).  And a few notes: 1. commits[].url gives 404. My guess that API is not implemented yet 2. the payload is actually a application/x-www-form-urlencoded with the single field ""payload"" containing JSON. Why not passing application/JSON? 3. i think it would be useful to set a global WebHook, used across all the repos ","false",
"let non-anonymous user read access to public repos with basic auth","In GitBucket 3.1, http (read) access to public repos with basic authentication fails, when the **Anonymous access** setting is set to **Deny**. They should have read/write access permission to public repos with the correct basic auth headers. ","true","bug"
"add file finder","like https://github.com/blog/793-introducing-the-file-finder. ![9e0d696b6a84384e71bb7cbebe24cacc](https://cloud.githubusercontent.com/assets/18655/7004283/1576e630-dca4-11e4-8f3e-abb8960ca773.png)  ![98dcdc9851a7d60a7db3d2c374b39d01](https://cloud.githubusercontent.com/assets/18655/7004259/b8e5ef42-dca3-11e4-857e-bd94184d6058.png) - You've activated the `file finder` by pressing `t` on repository viewer - Add link to file finder on repository viewer. - Import jquery hotkey library https://github.com/tzuryby/jquery.hotkeys - Import fuzzy-scoreing library https://github.com/joshaven/string_score   - This library is based on atom editor's [fuzzy-finder](https://github.com/atom/fuzzy-finder).   - Added some changes that optimize for file find.     - detect word separator as not only white-space, but also non-alphanum-charactors and camel case.     - return with maching posisions for text hilight. ","true","feature"
"issue refer comment can not be created when we create a pull request.","When we created/edited a issue, added/edited issue comments, edited a pull request, or added/edited pull request comments, issue refer comment will be created.  But when we created a pull request, issue refer comment will not be created. ","false","improvement"
"Browse history for directory","github's ""Browse commits for this branch"" button refs #536  ![szoter_image](https://cloud.githubusercontent.com/assets/18655/6991101/82f382ac-dabc-11e4-90d7-0944e976f81a.png) ","true","feature"
"Improve searching with Lucene","Improve speed of the searching with Lucene.  Note that it is slow to search when the first time searching or after the repository was modified because the processing contains indexing.  The index data will store in `$GITBUCKET_HOME/tmp/_index` directory. ","true","feature"
"Upgrade from 3.0 to 3.1 fails","Upgrading from 3.0 to 3.1 results in application server/container just hanging on startup. I stopped the server after approximately 30min. My setup is a powerful GNU/Linux box with Tomcat7 and OpenJDK7-JRE. I tried to redeploy the app restarting tomcat.  All previous upgrades from ~2.2 till 3.0 worked flawlessly within the same setup. Unfortunately nothing is in the logs except ""[...] deploying gitbucket.war [...]"". Going back to 3.0 again works fine.  Had somebody with similar setup managed to upgrade or having same issues?  Thx in Advance.  ","false","question"
"fix/api context-path support","When context-path is not '/', api `/api/v3/repos/*` works not correctly.  refs #684 ","true","bug"
"Allow a password that contains colons","Allow a password that contains colons in the basic autentication. ","true","bug"
"Mailer#toNotify's Future is likely to be executed before the transaction is committed.","When create issue or open new pull request, gitbucket will try to send a notification. But currently, It may not be send notification. Because Servlet Filter's database session and Mailer's database session are different, and Mailer#toNotify's Future is likely to be executed before the transaction is committed.  This is a dirty patch.  ``` diff diff --git a/src/main/scala/gitbucket/core/util/Notifier.scala b/src/main/scala/gitbucket/core/util/Notifier.scala index 9e80917..27fcf9f 100644 --- a/src/main/scala/gitbucket/core/util/Notifier.scala +++ b/src/main/scala/gitbucket/core/util/Notifier.scala @@ -73,6 +73,7 @@ class Mailer(private val smtp: Smtp) extends Notifier {       val f = Future {        database withSession { implicit session => +        Thread.sleep(10*1000)          getIssue(r.owner, r.name, issueId.toString) foreach { issue =>            defining(                s""[${r.name}] ${issue.title} (#${issueId})"" -> ``` ","false","bug"
"Allow Ctrl+Enter to submit a comment","Instead of having to click the button when in the text field, allow Ctrl+Enter to submit the comment, like I am about to do here in the Github issue tracker. ","false","feature"
"Notify when an updated version of GitBucket has been released","Insert a checkbox in the server settings screen to enable a notification of new versions  On administrator login, do a page request on  ```  https://github.com/takezoe/gitbucket/releases/latest ```  If the URL does not redirect to   ```  https://github.com/takezoe/gitbucket/releases/[current version number] ```  then the user is not running the latest release.  Lastly, create a dismissable DIV popup in the corner indicating that a new version is available ","false","feature,plugin"
"(refs #442)add compare/pull-request button","![c7de8b613e92a68c40ca9358595aaa31](https://cloud.githubusercontent.com/assets/18655/6896541/6651bdb4-d727-11e4-81f8-eedf8095af96.png) ![63f411bfdbeabe2cade136d633052bcd](https://cloud.githubusercontent.com/assets/18655/6896542/6780e70a-d727-11e4-88c2-de54b0575e75.png) ","true","feature"
"AnyAdministrator can controll Any Private Repository.( like #644 )","Hi! Mr.takezoe.  like #644. but this problem is alive.  If you are [ Administrator ], you can do clone,push,pull any private repository. even though, other user's repository...  I think, this is a bug. don't you. ### [ src/main/scala/gitbucket/core/service/RepositoryService.scala ] ##### In Function [ hasWritePermission ]  ------------------------------------------ case Some(a) if(a.isAdmin) => true ------------------------------------------ I think, above code is no necessary. ","false",
"Any information on how to setup 'GitHub pull request builder plugin'","I've tried to setup Jenkins 'GitHub pull request builder plugin'. But it doesn't work yet. I'd like to know the correct setting.  In my environment, gitbucket is runnning under subdirectory like 'http://example.com/gitbucket'.  --- #### Q1: 'GitHub server api URL' in system setting page.  I guess this field should be 'http://example.com/gitbucket/api/v3/' #### Q2: 'GitHub project' in job setting page  It seems Gprb plugin use this field for retrieving repository information.   When I set 'http://example.com/gitbucket/group/sample', Gprb access 'http://example.com/gitbucket/api/v3/repos/gitbucket/group' URL.   When I set 'http://example.com/group/sample', Gprb access 'http://example.com/gitbucket/api/v3/repos/group/sample' URL.   In both case, gitbucket return simple JSON data, {""message"":""Not Found""}. ","false","question"
"In V3.1 & 3.1.1, Not work the WebHook By https [ with self-signed certification ]...","Hi! Mr.takezoe.  the webhook by https is not work in V3.1 by http, It works nice!  In V3.0, It works nice!  I think, It's important function. ","false","invalid"
"Please remember, about [ closed issue #650 and #651] again...","Hi! Mr.takezoe.  this is mamemo0823 ( my-dev )  It's pleasure, Gitbucket V3.1 is released. I've been waiting for.  I tried to check, closed issues [ #644, #646, #650, #651 ]  I think, #644 And #646 works nice!!! thanks.  but #650, #651 is not works. Please again, remember #650 & #651...  Now I'm build [ fixed this Version ] by myself... I think, my suggest source is work good. And It solves Just #533. #650, #651 means that there are none administrator in this system.  In fact, no one can do [ Administrate Operating ]...  I think, It's bad condition...  If possible, Please handle #650 & #651 again.  thank you. ","false","duplicate"
"Feature/improve file list performance","gitbucket is seriously slow If project root has many files. because `JGitUtil.getFileList` is slow. for example https://github.com/borisyankov/DefinitelyTyped. getFileList('DefinitelyTyped', 'master', '.') take 199,654 milli seconds to get.  this pull request improvement for performance of method `JGitUtil.getFileList`.  getFileList('https://github.com/borisyankov/DefinitelyTyped','master','.') take 1820 ～ 1762 milli seconds.  ( I found #376 after finished this work, and I measure performance on commit 62a6d743936f8cc7581a897b0700337e1b000194 , it take 2916 ～ 2660 milli seconds, my work has a meaning :) ","true","improvement"
"fix #679 jquery-hashchange-plugin for jquery 1.9","fix #679 .  ``` jquery.ba-hashchange.js:300 Uncaught TypeError: Cannot read property 'msie'  ```  in blob page. ","true","bug"
"jquery-hashchange-plugin is not supported jquery 1.9","jquery.ba-hashchange.js use `$.browser` https://github.com/takezoe/gitbucket/blob/73766f11ebdfd99d4c2742c4a4681b3c42783c3a/src/main/webapp/assets/vendors/jquery/jquery.ba-hashchange.js#L300  but jquery removed `browser` property since version1.9.0. http://api.jquery.com/jquery.browser/ (gitbucket used version is 1.9.1)  IE console report those error.  ``` SCRIPT5007: 未定義または NULL 参照のプロパティ 'msie' は取得できません ファイル: jquery.ba-hashchange.js、行: 273、列: 5 ``` ","false","bug"
"Export/Import Repo functionality!","Please add support to be able to export a repository with all it's issues, wiki, commits, activity stream, etc.   Also please add support to be able to import such a ""GitBucket repo"" in another GitBucket instance.  Please note that this is different than the #575 request (where the backup and restore should work for the entire installation).  The main usage is to be able to migrate the issues, the wiki and the activity stream to another installation easier.  Thank you. ","false","feature"
"Fork button does not work on some browsers","Clicking the Fork button has no effect on these browsers: - Firefox v31.5.0 (Centos6) - Firefox v36.0.4 (Windows 7) - Internet Explorer 9  For firefox the fork button _does_ work if the user belongs to a group.  For internet explorer the fork button doesn't work in either case.  It always takes me to a page that asks ""Where should we fork this repository?"", but clicking the displayed user/group avatars has no effect. ","false","bug"
"#672 fix blank diff output","sorry... i fixed it. this time, I tested on firefox 36, chrome 41, IE 11( emulation mode edge, 8, 9, 7 ) windows 7 ","true","bug"
"Primer vs Bootstrap","GitHub has released their CSS toolkit. Any thoughts about switching to it from Bootstrap?  http://primercss.io/ ","false","improvement"
"groups should support a description field","instead of redundantly displaying group name  ![selection_035](https://cloud.githubusercontent.com/assets/494405/6803527/0a8aca0a-d206-11e4-9990-addae0b74660.png)  vs  ![selection_036](https://cloud.githubusercontent.com/assets/494405/6803528/0f009eb6-d206-11e4-94ac-a3f5219f0c96.png) ","false","feature"
"user email does not display on profile page","Even though I've set an email in my profile, it doesn't actually display on my profile page:  ![selection_033](https://cloud.githubusercontent.com/assets/494405/6803230/38911550-d204-11e4-90f4-fc0923bf4c5a.png)  ![selection_034](https://cloud.githubusercontent.com/assets/494405/6803235/3eb2438c-d204-11e4-8e77-66bd3b7fd855.png) ","false","improvement"
"regression: blank diff output","Using the development trunk I'm having rendering issues with commit diffs.  `git bisect` indicates the bug was introduced in aa35498.  This is what diff output looks like at 14becd0 (one commit before):  ![selection_031](https://cloud.githubusercontent.com/assets/494405/6802308/4a855124-d1fd-11e4-8ee1-b86cc64234eb.png)  And this is what the output looks like at aa35498 (as well as current HEAD 1341ef9):  ![selection_030](https://cloud.githubusercontent.com/assets/494405/6802328/7910d7d4-d1fd-11e4-9264-2a4479ce50c8.png)  I'm getting this issue on both Linux and Windows, as well as Internet Explorer 9 and Firefox v31-36 ","false","bug"
"TransactionFilter always transacts the resouces under /assets","I guess the result string of getRequestURI() at TransactionFilter.scala:23 is never started with ""/assets/"". ","false","bug"
"More fixes for #669","My previous pull request #669 missed the following things. - Bump Scala version to 2.11.6 in .travis.yml too - Bump minor version of embed-jetty jar files too  Sorry for bothering you. Thanks  in advance. ","true","task"
"Bump Scalatra to 2.3.1, sbt to 0.13.8","Scalatra 2.3.1 is out. http://notes.implicit.ly/post/114410798604/scalatra-2-3-1 ","true","task"
"New pull requests should default to upstream master","The addition of #611 is awesome.  However if it would be nice if upon creating a new pull request it defaulted to the upstream master instead of the current repo master.  Compare:  ![selection_028](https://cloud.githubusercontent.com/assets/494405/6790539/6212adb4-d176-11e4-8833-ad4ae82708d2.png)  With the Github equivalent:  ![selection_029](https://cloud.githubusercontent.com/assets/494405/6790617/ed25d2dc-d176-11e4-8060-98446f22ad6c.png)  Thanks! ","false","improvement"
"""Load More"" action on the recent activity home page.","Please add support for showing more elements in the recent activity home page when the user wants, the same way github is doing. See screenshot of Github: ![load_more](https://cloud.githubusercontent.com/assets/5159511/6776960/41ad62d4-d145-11e4-802c-cac1c7b08528.png) ","false","improvement"
"html5shiv.js is not found","GitBucket v3.0 (gitbucket.war) has no assets/vendors/bootstrap/js/html5shiv.js. I do not know what happens.  I use ""internet explorer 10"". GitBucket pages open in Document Mode as ""IE7 standars"".  現在IE10で使っていますが、ドキュメントモード(F12で起動する開発者ツールで確認)が「IE7標準」となりhtml5shiv.jsを読み込もうとします。 ","false","bug"
"Allow users to edit the wiki","GitBucket doesn't have formal docs about its features and we don't have enough resources to make it. How about allowing users to edit the wiki?  This issue has been raised from discussion in gitter: https://gitter.im/takezoe/gitbucket?at=550e058ea62333494b857b00 ","false","task"
"newline issues with UI editors","The wiki editor adds dos-style line endings to wiki content.  You can see this if you subsequently pull the wiki repo and look at the diff:  ![selection_025](https://cloud.githubusercontent.com/assets/494405/6770763/c3316574-d098-11e4-851d-38e3a7dbad5e.png)  It would be preferable if the wiki editor used unix-style line endings  The file editor doesn't have the dos line ending problem, but it also fails to insert an end-of-file newline.  This isn't as annoying, but is still definitely a bug:  ![selection_026](https://cloud.githubusercontent.com/assets/494405/6770772/f67dedc6-d098-11e4-8e08-ce2b9bd5f6b0.png)  Thanks! ","false","improvement"
"Support merging pull requests via commit","**Expect** A merge commit with the message `Merge pull request #42 from foo/bar` will close pull request `#42`   **Actual** Merge commit has no effect and the pull request remains open  **Reproduce** Create a branch with some changes, open a pull request, but then instead of closing the PR via the UI, instead merge locally and push a commit identical to what the UI would produce.  This has no effect.  Github supports closing pull requests via commit, and it would be nice if gitbucket emulated this behavior.  Perhaps by also supporting the shorter `Merge #42` form in addition to the longer `Merge pull request #42`. ","false","help wanted,improvement"
"Fork should work regardless of group membership","Fork button had no effect if you didn't belong to a group.  This may explain #424 ","true",
"Change GITBUCKET_HOME to Network drive","Hi, I am trying to utilse GitBucket on windows with IIS and Jetty. everything works great. I would like to change the GITBUCKET_HOME directory so that all repositories are stored on a network drive. I tried changing the GITBUCKET_HOME to a mounted drive letter, but when restarted I get Service Unavailable. I have also tried creating folder links. Assigning various premissions. I also tried using full UNC path.  Any help/advice would be appreciated. ","false","question"
"Need rollback if directory can't created.","The Windows has some **reserved device names** like `prn`, `com1`, `LPT1`... and can't create those name file or directory.  if user create a repository that has name `prn` ( or maybe user name ), throwen IOException.  ``` java.io.IOException: Creating directories for C:\Users\nazoking\.gitbucket\repositories\root\prn.git failed     at org.eclipse.jgit.util.FileUtils.mkdirs(FileUtils.java:315)     at org.eclipse.jgit.internal.storage.file.FileRepository.create(FileRepository.java:270)     at org.eclipse.jgit.lib.Repository.create(Repository.java:170)     at gitbucket.core.util.JGitUtil$$anonfun$initRepository$1.apply(JGitUtil.scala:539)     at gitbucket.core.util.JGitUtil$$anonfun$initRepository$1.apply(JGitUtil.scala:538)     at gitbucket.core.util.ControlUtil$.using(ControlUtil.scala:17)     at gitbucket.core.util.JGitUtil$.initRepository(JGitUtil.scala:538)     at gitbucket.core.controller.AccountControllerBase$$anonfun$29$$anonfun$apply$34.apply(AccountController.scala:324)     at gitbucket.core.controller.AccountControllerBase$$anonfun$29$$anonfun$apply$34.apply(AccountController.scala:303)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:30)     at gitbucket.core.util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:27)     at gitbucket.core.util.ControlUtil$.defining(ControlUtil.scala:14)     at gitbucket.core.util.LockUtil$.lock(LockUtil.scala:27) : ```  directory was not created, but database has those name repository. and some page throw exception. for example user home.  ``` org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: C:\Users\nazoking\.gitbucket\repositories\root\prn.git     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:575)     at org.eclipse.jgit.api.Git.open(Git.java:113)     at org.eclipse.jgit.api.Git.open(Git.java:97)     at gitbucket.core.util.JGitUtil$.getRepositoryInfo(JGitUtil.scala:162)     at gitbucket.core.service.RepositoryService$$anonfun$getVisibleRepositories$5.apply(RepositoryService.scala:279)     at gitbucket.core.service.RepositoryService$$anonfun$getVisibleRepositories$5.apply(RepositoryService.scala:274) : ```  This behavior occurs even in the case of the other. For example, if the inode is not enough. Or such as when there is already different in uppercase and lowercase directory.  Need rollback if directory can't created. ","false","improvement"
"upgrade error from 2.7 to 3.0 or 2.8","I have 2.7 project site and replaced gitbucket.war of 3.0 or 2.8, and then access the site, so I got the following error.  org.h2.jdbc.JdbcSQLException: Table ""ACTIVITY"" not found; SQL statement: select x2.x3, x2.x4, x2.x5, x2.x6, x2.x7, x2.x8, x2.x9, x2.x10 from (select x11.x12 as x9, x11.x13 as x6, x11.x14 as x5, x11.x15 as x4, x11.x16 as x8, x11.x17 as x10, x11.x18 as x3, x11.x19 as x7 from (select x20.""ACTIVITY_DATE"" as x12, x20.""ACTIVITY_TYPE"" as x13, x20.""ACTIVITY_USER_NAME"" as x14, x20.""REPOSITORY_NAME"" as x15, x20.""ADDITIONAL_INFO"" as x16, x20.""ACTIVITY_ID"" as x17, x20.""USER_NAME"" as x18, x20.""MESSAGE"" as x19 from ""ACTIVITY"" x20) x11 inner join (select x21.""UPDATED_DATE"" as x22, x21.""PARENT_REPOSITORY_NAME"" as x23, x21.""DEFAULT_BRANCH"" as x24, x21.""DESCRIPTION"" as x25, x21.""ORIGIN_REPOSITORY_NAME"" as x26, x21.""ORIGIN_USER_NAME"" as x27, x21.""PARENT_USER_NAME"" as x28, x21.""PRIVATE"" as x29, x21.""REPOSITORY_NAME"" as x30, x21.""USER_NAME"" as x31, x21.""REGISTERED_DATE"" as x32, x21.""LAST_ACTIVITY_DATE"" as x33 from ""REPOSITORY"" x21) x34 on (x11.x18 = x34.x31) and (x11.x15 = x34.x30) where x34.x29 = ? order by x11.x17 desc limit 30) x2 [42102-180]  If I setup a site from scratch using 2.8 or 3.0, there is no issue. ","false","question"
"RTL support in Markdown","in Wiki, Issue, etc. ","false","improvement,pending"
"wiki のタイトルに日本語を含めるとその後編集出来なくなる","2.9 までは発生せず、3.0 から発生しました。  再現方法 1. New Page からタイトルに日本語を含めてページを作成。 2. 画面右 Pages に作成したタイトルが正しく表示される 3. Pages から作成したページをクリックすると、内容も正しく表示されている 4. Edit Page をクリックすると Editing に表示されるタイトルが変わり、元の内容ではなく新しいページを作成する画面になる。      例：""testあ"" というタイトルで作成した場合、Edit Page では ""testB"" と表示されている ","false",
"(refs #641) Enable rename detection","see #641.  Current. ![before](https://cloud.githubusercontent.com/assets/764760/6654187/5ac3c668-caf7-11e4-8c44-4a4627ac4774.png)  After ![after](https://cloud.githubusercontent.com/assets/764760/6654188/5f24ec28-caf7-11e4-9878-9ee846a8244d.png) ","true","improvement"
"Fix font in line comments","Line comments on a diff were rendered in the browsers default font ","true","bug"
"Spacing under branch view in Firefox","There is some space missing between lines in the branch view. The spacing looks much better when I disable the `line-height: 100%` directive, which I highlighted on the left.  ![gitbucket spacing](https://cloud.githubusercontent.com/assets/459632/6638535/63481a12-c987-11e4-8270-a4ad86676339.png) ","false",
"Git Tags should be default sorted by date not by name","Git Tags should be default sorted by date in reverse order, not by name, since the versioning schemes for the tags seem to vary (and GitBucket would need to parse them as a number, since string sorting is delivering the wrong order). See a bad example below:  ![gitbucket_tag_sorting](https://cloud.githubusercontent.com/assets/5159511/6636467/af26b266-c970-11e4-958e-95208b303831.png) ","false","improvement"
"User aliases support!","Please add user aliases support so that several email addresses (and user names) that are present in git commits to be associated and visualized with the same user.  This is required, since over the time, a user will have more than one or or will push from more systems.  This should be editable only by the admin, to prevent misuse. ","false","feature,help wanted"
"Other User can disable [ !!!Last!!! ]  Administrator.","Hi! Mr.takezoe. this is mamemo0823 ( my-dev ).  again, In [_edituser Page]. At [ Disabled: ] section.  Maybe this situation is difficult to find... #### (1) Now, [ root ] Login. #### (2) Create User [ xxx ] with [ User Type: administrator ]. #### (3) Change [ root ]'s User Type from [ Administrator ] to [ Normal ]. #### (4) Edit [ xxx ]'s Disable Flag from [ Off ] to [ On ]  As you are about to see, This system has no Administrator...  Maybe, [ Now gitbucket's version ] contains this problem.  Then i suggest these codes #### [ src/main/scala/gitbucket/core/service/AccountService.scala ]  define a function  ``` scala def isAdmin(userName: String)(implicit s: Session): Option[Account] =   Accounts filter(t => (t.userName === userName.bind) && (t.isAdmin === true.bind)) firstOption ``` #### [ src/main/scala/gitbucket/core/controller/UserManagementController.scala ]  modify such like this  ``` scala protected def disableByNotYourself(paramName: String): Constraint = new Constraint() {   override def validate(name: String, value: String, messages: Messages): Option[String] = {     params.get(paramName).flatMap { userName =>       if(params.get(""removed"") == Some(""true"")){         if(userName == context.loginAccount.get.userName){           Some(""You can't disable your account yourself"")         }else{           // [ loginUser ] is not equal [ targetUser ]           if(isAdmin(userName) != ""None"" && getAdminUsers(false).length == 1) {             Some(""Deny! Because This user is Last Administrator..."")           }else{             None           }         }       }else{         None       }     }   } } ```  How about this suggestion? ","false","duplicate"
"Last One Administrator can change [ User Type ] to [ Normal ]","Hi! Mr.takezoe. this is mamemo0823 ( my-dev ).  again, In [_edituser Page]. At [ User Type: ] section.  Last One Administrator can change [ User Type ] to [ Normal ]... I think, Maybe It's not good.  Then i suggest these codes  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_ ### [ src/main/twirl/gitbucket/core/admin/users/user.scala.html ]  1st, In [ User Type ] Section... ------------------------------------------------------- <fieldset>   <label class=""strong"">User Type:</label>   <label class=""radio"" for=""userType_Normal"">     <input type=""radio"" name=""isAdmin"" id=""userType_Normal"" value=""false""@if(account.isEmpty || !account.get.isAdmin){ checked}/> Normal   </label>   <label class=""radio"" for=""userType_Admin"">     <input type=""radio"" name=""isAdmin"" id=""userType_Admin"" value=""true""@if(account.isDefined && account.get.isAdmin){ checked}/> Administrator   </label> </fieldset> ------------------------------------------------------- ->  ------------------------------------------------------- <fieldset>   <label class=""strong"">User Type:</label>   ##### <div> ##### <span id=""error-isAdmin"" class=""error""></span> ##### </div>    <label class=""radio"" for=""userType_Normal"">     <input type=""radio"" name=""isAdmin"" id=""userType_Normal"" value=""false""@if(account.isEmpty || !account.get.isAdmin){ checked}/> Normal   </label>   <label class=""radio"" for=""userType_Admin"">     <input type=""radio"" name=""isAdmin"" id=""userType_Admin"" value=""true""@if(account.isDefined && account.get.isAdmin){ checked}/> Administrator   </label> </fieldset> ------------------------------------------------------- ### [ src/main/scala/gitbucket/core/service/AccountService.scala ]  2nd, define a function such like this... ------------------------------------------------------- def getAdminUsers(includeRemoved: Boolean = true)(implicit s: Session): List[Account] = {   if(includeRemoved){     Accounts filter (_.isAdmin === true.bind) sortBy(_.userName) list   } else {     Accounts filter (t=>(t.removed === false.bind) && (t.isAdmin === true.bind)) sortBy(_.userName) list   } } ------------------------------------------------------- ### [ src/main/scala/gitbucket/core/controller/UserManagementController.scala ]  3rd, modify such like this -------------------------------------------------------   val editUserForm = mapping( ..... ##### ""isAdmin""     -> trim(label(""User Type""    ,boolean(checkLastAdminUser()))),  .....   )(EditUserForm.apply) -------------------------------------------------------  and add function such like this...  -------------------------------------------------------   protected def checkLastAdminUser (): Constraint = new Constraint() {     override def validate(name: String, value: String, messages: Messages): Option[String] = {       params.get(""isAdmin"").flatMap { isAdmin =>         if(isAdmin == ""false""){           if(getAdminUsers(false).length == 1){             Some(""Deny! Because This user is Last Administrator..."")           }else{             None           }         }else{           None         }       }     }   } ------------------------------------------------------- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_  How about this suggestion? ","false","duplicate"
"Issues are not shown in from milestone view","マイルストーン一覧画面から、 マイルストーンを選択した後に対応付けられているIssueの一覧が表示されません。  こちらのフィルターから選択すると表示されます。。 ![2015-03-12 8 39 59](https://cloud.githubusercontent.com/assets/1995608/6609317/416ea540-c893-11e4-95d0-5647e7bd3e05.png) - マイルストーン一覧画面画面から参照した場合のフィルター条件   ![2015-03-12 8 41 38](https://cloud.githubusercontent.com/assets/1995608/6609342/85c74648-c893-11e4-9019-8274edacd820.png) - 表示される場合のフィルター条件   ![2015-03-12 8 43 17](https://cloud.githubusercontent.com/assets/1995608/6609362/b4581258-c893-11e4-9027-fbe5a5360b68.png)  マイルストーンの数は2個で、それぞれ4つのIssueがあります。 ","false","bug"
"organization level webhooks","Hi  team, Is there any plan for adding support for ""organization level"" webhooks?  ","false","feature"
"GistプラグインのSnipetリンクでコンテキストパスが省略されてしまう","GitBucket3.0へのバージョンアップに合わせて、新しいgistプラグインも導入してみました。 その際に、以前のプラグインシステムでも発生していたのですが、「Snipet」リンクがコンテキストパスが省略されたURLになってしまいます。  （正しいURL）`https://hogeserver/gitbucket/gist` （リンクURL）`https://hogeserver/gist`  System SettingsのBase URLは `https://hogeserver/gitbucket` に設定してあります。 ","false","duplicate"
"i suggest that you add [ autocomplete=""off"" ] in [ core/account/edit.scala.html ]","Hi! Mr.takezoe  i suggest that you add [ autocomplete=""off"" ] in [ core/account/edit.scala.html ]'s password section.  such like --------------------- <input type=""password"" name=""password"" id=""password"" value="""" /> -> <input type=""password"" name=""password"" id=""password"" value="""" autocomplete=""off"" /> ---------------------  it's not big problem, but for better usability.  thank you. ","false","improvement"
"About [ Disable Check Box ] In User Management Page","grad to see you. from mamemo0823 to you  [ Administration ] -> [ UserManagement ] -> [ Someone Profile Edit ] In this page, Normally do update user information under [ Disable Check Box ] is OFF. But system receives as it's ON. Then i can't update the information.  Maybe, Line 198 about in UserManagementController.scala,  Please check this issue. ","false","bug"
"Anyone can create private repositories clone.","Anyone can create private repositories clone on GitBucket 2.8 and 3.0. GitBucket 2.7 works fine (Only collaborators) ","false","bug"
"Improvement diff","![3b865d9e5a1c8a6129cdf94fd3942433](https://cloud.githubusercontent.com/assets/18655/6558601/74a7c0a6-c6c0-11e4-8144-f59c09383f93.png) - Ignore whitespace (and blank lines) .   - click checbox on each file heaer.   - when url parameter has ""w=1"" , all checkboxes checked on loaded. - hilight-syntax in diff. - keyword level diff hilight. - mprovement experience page start speed   - lazy diff rendering     - it is effective if the diff has a lot of files     - corner-cutting ( no listen scrall or othre event. it insert `setTimeout` into each diff renderings )   - some feature move to css from javascript.   - some javascript event handlers on each elements move to on parent elements. - color style approach github lik more. - show diff stat ","true","improvement"
"Issueのコメントでmarkdownを使うとプレビューと実際の表示が異なる","Issueのコメントで書いたMarkdownがプレビューと実際に表示されるもので異なります。 書いたMarkdownは以下で  ``` markdown #test  | a | b | c | |---|---|---| | 1 | 2 | 3 | ```  プレビューだと以下のようになりますが、  ![preview](https://cloud.githubusercontent.com/assets/1235368/6500570/b2960e86-c350-11e4-8f7d-cbe33107c2f3.jpg)  実際に書込を行うと以下のように表示されます。  ![actually](https://cloud.githubusercontent.com/assets/1235368/6500609/25dd5b24-c351-11e4-9513-f81da8101146.jpg)  3.0で確認しています。 ","false","bug"
"Enable rename detection","The gitbucketis not detect rename/copy on diff. I create root user's .gitconfig (root is owner of gitbucket process) and set  ``` [diff]     renames = copies ```  then , gitbucket detect rename/copy on diff.  please enable rename/copy detect for default setting. ","false","improvement"
"fix javascript getter for plug-in system","The method `find` returns only one entry `Option[String]`. So if there're more than one javascript (two plugins for example) registered to the same path, only the first one will be used.  This PR fix this issue allowing to use more than one javascript registered to the same path. ","true","bug"
"Blame","![blame](https://cloud.githubusercontent.com/assets/18655/6469109/31e860f6-c21d-11e4-90a5-3ae72d1d334c.png) - Annotates each line in the given file with information from the revision which last modified the line. - Hilight latest annotations. - `prev` link is link to blame page of one more before the revision which last modified the line. it is helpful for find change reason. - implovement for performance of blob page ( many div created ). - stop scroll when user click line number ( reflesh hash and hilight-lines only ). ","true","feature"
"Activity timeline hangs for users joining many groups","リポジトリの参照権限が多いユーザのみ、 ログイン後のマイページが表示できません。  多分ですが、アクティビティの数が多いと表示できなくなる印象です。 2.6 ~ 3.0で再現しています。  https://www.dropbox.com/s/xe9uxrz203k35ko/git.oratta.net.txt?dl=0 上記エラーが出るユーザーも、参加グループを減らすと表示できるようになります。 減らすグループはどのグループでも大丈夫なので、特定のデータが悪さしているようには見受けられませんでした。 ","false","duplicate"
"Gitbucket Upgrade","I am currently have gitbucket 2.6 there is any upgrade procedure  to 3.0 ???  Thanks in advance,  Darien ","false","question"
"application failure if base URL does not begin with valid protocol (http:// etc)","If the protocol name is left out of the base URL field under settings, the gitbucket application fails with   java.net.MalformedURLException: unknown protocol: example.com ","false",
"Api support for JENKINS GitHub pull request builder plugin","Api support for jenkins pull-request-builder plugin.  https://wiki.jenkins-ci.org/display/JENKINS/GitHub+pull+request+builder+plugin https://github.com/janinko/ghprb - Web hook events.   - [PullRequestEvent](https://developer.github.com/v3/activity/events/types/#pullrequestevent)     - implemented actions are `opened`, `closed`, `reopened`, `synchronize`.   - [IssueCommentEvent](https://developer.github.com/v3/activity/events/types/#issuecommentevent)   - [IssueEvent](https://developer.github.com/v3/activity/events/types/#issuecommentevent)     - implemented actions are `opened`, `closed`, `reopened` - API v3   - Authentication     - [OAuth2 Token (sent in a header)](https://developer.github.com/v3/#oauth2-token-sent-in-a-header)   - Pull Requests     - [Get a single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request)     - [List commits on a pull request](https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request)     - [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)   - Issues/Comments     - [Create a comment](https://developer.github.com/v3/issues/comments/#create-a-comment)     - [List comments on an issue](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue)   - Repositories     - [Get](https://developer.github.com/v3/repos/#get)   - Repositories/Statuses     - [Create a Status](https://developer.github.com/v3/repos/statuses/#create-a-status)     - [Get the combined Status for a specific Ref](https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref)   - Users     - [Get a single user](https://developer.github.com/v3/users/#get-a-single-user)     - [Get the authenticated user](https://developer.github.com/v3/users/#get-the-authenticated-user)   - Rate Limit     - [Get your current rate limit status](https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status)       - disable only - Web UI   - create/delete personal access token on user profile page ![screen shot](https://cloud.githubusercontent.com/assets/18655/5935697/f8ece720-a720-11e4-8a33-a6b3f08eb5fe.png)   - show commit state on issue list ![screen shot](https://cloud.githubusercontent.com/assets/18655/6432342/d5127b10-c090-11e4-9bbe-37cecc4f8c24.png)   - show commit state on pull-request detail page ![screen shot](https://cloud.githubusercontent.com/assets/18655/6432350/23f45a78-c091-11e4-9f71-b9f131baceec.png) - Automation test   - fork and set system.properties `gitbucket.home` ","true","feature"
"LDAP BindDN password is plaintext readable in gitbucket.conf","This is an issue, as in my case, the gitbucket server can be launched by different people, with different LDAP Bind DN. Here are some solution proposals : 1 :  Store the whole LDAP authentication attributes of the gitbucket.conf into the database, and maybe the SMTP part too. 2 : Allow to pass the BindDN password as command line argument (just like --data from the command line when using ""java -jar gitbucket.war --data=/home/gitbucket)  and the BindDN too.  2 bis: Allow input of ldap login and password through a Swing GUI with JPasswordField (I have implemented that but it is not clean enough to be commited/contributed) 3 : Crypt the whole gitbucket.conf, with the key stored in database 4 : I could avoid the issue by using an LDAP dedicated accound, for which password being readable would not be problematic  (not sure it is feasible).  Do you have other ideas ? My favorite would be 2 (command line argument), with the option of passing the Bind DN too. ","false","LDAP/SSO,improvement"
"JettyLauncher : Unsupported major.minor version 51.0","following instructions on  http://www.debian-administration.org/article/710/Setting_up_your_own_graphical_git-server_with_gitbucket  to install on a debian server, I stumble on:  ``` lolo@rem:~$ java -jar gitbucket.war Exception in thread ""main"" java.lang.UnsupportedClassVersionError: JettyLauncher : Unsupported major.minor version 51.0     at java.lang.ClassLoader.defineClass1(Native Method)     at java.lang.ClassLoader.defineClass(ClassLoader.java:643)     at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)     at java.net.URLClassLoader.defineClass(URLClassLoader.java:277)     at java.net.URLClassLoader.access$000(URLClassLoader.java:73)     at java.net.URLClassLoader$1.run(URLClassLoader.java:212)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(URLClassLoader.java:205)     at java.lang.ClassLoader.loadClass(ClassLoader.java:323)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:294)     at java.lang.ClassLoader.loadClass(ClassLoader.java:268) Could not find the main class: JettyLauncher. Program will exit. lolo@rem:~$ ```  I tried installing and launching jetty:  ``` 129  aptitude search Jetty 130  sudo aptitude install jetty 131  sudo vi /etc/default/jetty 132  sudo /etc/init.d/jetty status 133  sudo /etc/init.d/jetty start 137  sudo aptitude install libjetty-extra ```  but no success. ","false","question"
"All issues are not checked","Gitbucket head ## Steps to reproduce 1.  go to issues page. 2.  click the checkbox in the header (see blow). ## Actual result   No issues checked ## Expected result   All issues checked  ![image](https://cloud.githubusercontent.com/assets/271370/6323384/5543363c-bb6c-11e4-8fa1-edafd23b6543.png)  and if you click the checkbox in the header and click the label dropdown. then you can get the following exception.  ``` java.lang.NumberFormatException: For input string: ""on""     at java.lang.NumberFormatException.forInputString(Unknown Source)     at java.lang.Integer.parseInt(Unknown Source)     at java.lang.Integer.parseInt(Unknown Source)     at scala.collection.immutable.StringLike$class.toInt(StringLike.scala:241)     at scala.collection.immutable.StringOps.toInt(StringOps.scala:30)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$executeBatch$1.apply(IssuesController.scala:308)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$executeBatch$1.apply(IssuesController.scala:308)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)     at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)     at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186)     at app.IssuesControllerBase$class.app$IssuesControllerBase$$executeBatch(IssuesController.scala:308)     at app.IssuesControllerBase$$anonfun$24$$anonfun$apply$64$$anonfun$apply$65.apply(IssuesController.scala:267)     at app.IssuesControllerBase$$anonfun$24$$anonfun$apply$64$$anonfun$apply$65.apply(IssuesController.scala:266)     at scala.Option.map(Option.scala:145)     at app.IssuesControllerBase$$anonfun$24$$anonfun$apply$64.apply(IssuesController.scala:266)     at app.IssuesControllerBase$$anonfun$24$$anonfun$apply$64.apply(IssuesController.scala:265)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:100)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:98)     at scala.Option.map(Option.scala:145)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:98)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:97)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.CollaboratorsAuthenticator$class.util$CollaboratorsAuthenticator$$authenticate(Authenticator.scala:97)     at util.CollaboratorsAuthenticator$class.collaboratorsOnly(Authenticator.scala:92)     at app.IssuesController.collaboratorsOnly(IssuesController.scala:13)     at app.IssuesControllerBase$$anonfun$24.apply(IssuesController.scala:265)  (snip) ``` ","false","bug"
"baseurl doesn't seem to work","I'm running gitbucket on my home network If I change baseurl to http://undertable2:8080/gitbucket I get redirection problem. I tried even with IP address as I worried about DNS problem and results are long like this:  http://192.168.1.122:8080/gitbucket/signin?redirect=%2Fgitbucket%2Fsignin%3Fredirect%3D%252Fgitbucket%252Fsignin%253Fredirect%253D%25252Fgitbucket%25252Fsignin%25253Fredirect%25253D%2525252Fgitbucket ","false","question"
"Marking a open issue as ""open"" causes ""NoSuchElementException: None.get""","GitBcket 2.8  Steps to reporuce 1. create a ticket. 2. go to issues page 3. check the ticket and mark as ""Open""  You can get the following exception.  ``` java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:322)     at scala.None$.get(Option.scala:320)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$77$$anonfun$33.apply(IssuesController.scala:351)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$77$$anonfun$33.apply(IssuesController.scala:351)     at scala.Option.getOrElse(Option.scala:120)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$77.apply(IssuesController.scala:351)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$77.apply(IssuesController.scala:334)     at scala.Option.map(Option.scala:145)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1.apply(IssuesController.scala:334)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1.apply(IssuesController.scala:331)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at app.IssuesControllerBase$class.app$IssuesControllerBase$$handleComment(IssuesController.scala:331)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62$$anonfun$apply$63$$anonfun$apply$1.apply$mcVI$sp(IssuesController.scala:258)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62$$anonfun$apply$63$$anonfun$apply$1.apply(IssuesController.scala:258)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62$$anonfun$apply$63$$anonfun$apply$1.apply(IssuesController.scala:258)     at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)     at scala.collection.mutable.ArrayOps$ofInt.foreach(ArrayOps.scala:234)     at app.IssuesControllerBase$class.app$IssuesControllerBase$$executeBatch(IssuesController.scala:308)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62$$anonfun$apply$63.apply(IssuesController.scala:258)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62$$anonfun$apply$63.apply(IssuesController.scala:256)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62.apply(IssuesController.scala:256)     at app.IssuesControllerBase$$anonfun$23$$anonfun$apply$62.apply(IssuesController.scala:255)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:100)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1$$anonfun$apply$9.apply(Authenticator.scala:98)     at scala.Option.map(Option.scala:145)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:98)     at util.CollaboratorsAuthenticator$$anonfun$util$CollaboratorsAuthenticator$$authenticate$1.apply(Authenticator.scala:97)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.CollaboratorsAuthenticator$class.util$CollaboratorsAuthenticator$$authenticate(Authenticator.scala:97)     at util.CollaboratorsAuthenticator$class.collaboratorsOnly(Authenticator.scala:92)     at app.IssuesController.collaboratorsOnly(IssuesController.scala:13)     at app.IssuesControllerBase$$anonfun$23.apply(IssuesController.scala:255)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1556)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1548)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:524)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:568)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1110)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:453)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1044)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:199)     at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.eclipse.jetty.server.Server.handle(Server.java:459)     at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:280)     at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:229)     at org.eclipse.jetty.io.AbstractConnection$1.run(AbstractConnection.java:505)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536)     at java.lang.Thread.run(Thread.java:745) ``` ","false","bug"
" Use Octicons in gitbucket #409 ","Should be good to resolve #409.  The lasts images that are still used are : feed.png, indicator.gif and indicator-bar.gif  ","true","improvement"
"Proposal: Add ""issue subscriptions"" to manage notification logic","## Overview  As described in the [wiki page](https://github.com/takezoe/gitbucket/wiki/Notification), notifications are sent out to specified users when an event occurs. This contrasts current GitHub functionality which has the concept of _subscriptions_ to determine who is notified.  I propose that we introduce the concept of _subscriptions_ to issues in Gitbucket. For the purposes of this proposal, the term _issues_ includes _pull requests_ ## Subscribing  At issue creation, the following users will be auto-subscribed: - Repository owner and collaborators - Issue creator - Repository watchers (if implemented in the future)  Additionally, the following events will auto-subscribe a user: - Issue assignment - @-mentions  Finally, any user can subscribe or unsubscribe to an issue via a new UI element to be added on the view issue page. This UI element only appears for logged-in users ## Sending Notifications  All subscribers to an issue will receive a notification for the following events: - Issue creation - Comment creation - Status update  **Exception to above**: the user who initiates the action will not receive a notification ## Database Table  Issue subscriptions will be tracked in a new table  `ISSUE_SUBSCRIPTION` - `USER_ID` - `REPOSITORY_NAME` - `ISSUE_ID` - `SUBSCRIBER_USER_NAME` - `REASON` - e.g. `author`, `owner`, `assigned`, `subscribed`, `mentioned`, `collaborator`, `watcher` ## UI Mockup  | Example Subscribe UI | Example Unsubscribe UI | | --- | --- | | ![gitbucket-subscribe](https://cloud.githubusercontent.com/assets/1167829/6196338/9cbd7096-b3a5-11e4-9918-08bcd12c1016.png) | ![gitbucket-unsubscribe](https://cloud.githubusercontent.com/assets/1167829/6196346/b533542e-b3a5-11e4-9bfc-ded8e6745f70.png) | ","false","feature"
"Need some help to configure a WebHook for pulling to Web server","Hi all,  Thanks to all for your great work on GitBucket ! I'm trying to create a WebHook to automate deployment from 'dev' branch to my web server in pre-production.  1st question : when I manually type 'git pull' on my web server, I need to authenticate, maybe a difficulty for the webhook ??!  2nd question : what kind of file do you expect for webhook ? Is PHP right ? (don't care ?) I found this post interesting :  https://gist.github.com/marcelosomers/8305065 Could I start with this template ?  3nd question : how can adapt this code to let it work on Gitbucket ? Payload...  A full example or wiki would be very great and I'm sorry to ask all these questions, I'm beginner on Git and I try to do my best to understand almost concepts and how GitBucket works. I just precise that I searched a lot into issues and on Google before posting this issue, so please be kind if I'm a truly noob for you :-)  Thanks to everyone who will help me !!  Tim. ","false","question"
"Impossible to store config into MySQL DB","Hi, I tried to use MySQL to store the config of GitBucket but I got this error message   Class ""com.mysql.jdbc.Driver"" not found [90086-180]  Here is my configuration ![capture1](https://cloud.githubusercontent.com/assets/8004432/6128307/c610d0f0-b134-11e4-849a-3ebf3565882e.PNG)  Do you have any idea ?  Thanks for your help ! I love Gitbucket :+1:  ","false","question"
"Copy repositories/ directory to a different gitbucket installation?","Let me start off by mentioning this is not really an issue - it is more of a ""I screwed up, please help me"" question!  **Question: Is there a way to copy the `repositories/` directory of a gitbucket installation to a different installation provided the usernames are the same between the two?**  I have been running gitbucket internally for a small team of 3 people. I've using the `java -jar gitbucket.war` method - no servlet containers or stuff.   Recently, the `data.h2.db` file got corrupted (don't ask me how - it is more embarrassing than you might imagine). So, I thought of simply installing gitbucket afresh, creating new users with the same usernames as before, and copying over the `repositores/` folder.  However, this does not work. I don't see the old repositories in gitbucket web UI.  If this approach does not work, is there any other way to migrate the repositories? Perhaps using some standard GIT procedure on the <repo-name>.git folders? ","false","question"
"See Active User Sessions!","It would be really helpful to be able to see the actual running user sessions and what they're doing, e.g. in order to know if to schedule a downtime or not.  This might come especially handy when doing a backup. ","false","feature,pending"
"Maintain/Upcoming Downtime Message for all Users.","It would be really useful if it were possible to display a message to all logged in users, e.g. a ""Maintain Message"" or an ""Upcoming Downtime Message"" in order not to take the users by surprise. ","false","question"
"How to include images?","How to include images/graphics ? - in the readme.md of the project ? - in the WIKI documents ? - in an arbitrary *.md"" file of a project. E.g. /docs/install.md ?  It would be preferable if these images would be ""local"" to the repo and machine, since ""private"" repos should work on ""intranet only"" envs too.  I'm not that much interested in including *.jpeg files (or creating ""websites"" like github allows), but more augmenting the docs with SVG diagrams. ","false","question"
"Fix blinking tooltips on side menu","Move bootstrap tooltip up to the `li` element to fix the issue with blinking ","true","improvement"
"Fix facebox resource URLs.","When the base URL is changed, facebox resources are not found. This request solved the issue. ","true","bug"
"html anchor in markdown","I update my gitbucket to 2.8,then it happens. In 2.6 I wrote anchor which named **_code**_ in markdown,then it can display anchor named **_code**_，and i can write a hyperlink to the anchor using **_href = ""#code""**_.But in 2.8, the anchor disappears, and it don't work when use **_href = ""#code""**_.  Is it OK? And if it's ok,what shoud i do if i want to use the anchor?  Thx. ","false","question"
"commit number stops at number ""10001 commits""","the counter stops at 10001 commits   ![100001](https://cloud.githubusercontent.com/assets/10846570/6038496/428841f0-ac66-11e4-8168-eef0a84b2949.PNG) ","false","duplicate"
"Support ed25519 for SSH","When I submit my SSH public key  ``` ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICKHoRRTDdoqmEQ9YFNFn75K0w6wdh1labhDzDCtTRO+ colindean ```  Gitbucket tells me that it's invalid. It's definitely valid, but perhaps Gitbucket doesn't support ed25519 yet. That'd be a nice feature to have. ","false","feature,help wanted"
"(Optional) AsciiDoc Renderer","This PR enabled support for the AsciiDoc markup language. The renderer is based on Asciidoctor and the AsciidoctorJ project, which provides a Java API for the Ruby/JRuby based rendering engine. Unfortunately the required jruby runtime add lots of dependencies to the project (only four, but jruby-complete is about 22MB large). As this size is considered too large by @takezoe (see #288), this PR only provides the support but not the dependencies.  At runtime (or to be exact at initalization time) the renderer tries to load some required classes. If they are not found, the Asciidoc renderer will be disabled.  To enable the renderer, the GitBucket operator need to provided the following dependencies: - org.asciidoctor:asciidoctorj:1.5.2 - org.jruby:jruby-complete:1.7.16.1 - org.slf4j:slf4j-api:1.7.7 - net.sourceforge.htmlcleaner:htmlcleaner:2.10  Other versions may work as well.  This PR is based on my Asciidoc branch, which I maintain since the support was removed from GitBucket (see #288). It runs without any hassle on at least two installations. The refactorings to make it optional are fairly new though. ","true",
"fix/xss by raw html","test/html is cause of xss ","true","bug"
"Fix typo",,"true","bug"
"i have a repo,when add issue which happen this  bug","java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:322)     at scala.None$.get(Option.scala:320)     at service.IssuesService$class.createIssue(IssuesService.scala:195)     at app.IssuesController.createIssue(IssuesController.scala:13)     at app.IssuesControllerBase$$anonfun$10$$anonfun$apply$16.apply(IssuesController.scala:93)     at app.IssuesControllerBase$$anonfun$10$$anonfun$apply$16.apply(IssuesController.scala:88)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at app.IssuesControllerBase$$anonfun$10.apply(IssuesController.scala:88)     at app.IssuesControllerBase$$anonfun$10.apply(IssuesController.scala:87)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1$$anonfun$apply$14.apply(Authenticator.scala:143)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1$$anonfun$apply$14.apply(Authenticator.scala:143)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:150)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:148)     at scala.Option.map(Option.scala:145)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:148)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:147)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.ReadableUsersAuthenticator$class.util$ReadableUsersAuthenticator$$authenticate(Authenticator.scala:147)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1.apply(Authenticator.scala:143)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.ajp.AjpAprProcessor.process(AjpAprProcessor.java:188)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)     at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2440)     at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2429)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)     at java.lang.Thread.run(Thread.java:745)  how to slove this problem???? ","false",
"fix/update pullrequest when file edited by online editor","fix bug. call `updatePullRequests` on `RepositoryViewerControllerBase.commitFile` and `updatePullRequests` moves to PullRequestService. ","true","bug"
"Feature/new branches ui","new Branches ui - like a github new UI   - show ahead/behind comit count.   - ahead/behind bar is not implemented.   - 'all branches' table only. - add link to pull request if exists. - change delete button label-level to warning if branch is merged. - 'compare' button is changed to 'new pull request' button if user is logined   - 'new pull request' button is link to compare and show form  ![3913ab4d4c754e1bd6762756a6c72c8d](https://cloud.githubusercontent.com/assets/18655/5960755/074f6fcc-a81b-11e4-93b4-15b4e6e8e9b1.png) ","true","feature"
"Personal access tokens","for webapi ( #603 , #545 , #41 ) - create/delete/list tokens by web-ui and record to DB ( new table `ACCESS_TOKEN` created by 2_9.sql ) - authorization by http header ""Authorizations: token xxxxx"" ( in ControllerBase.LoginAccount method.. is correct place ? )  ![532383f204fd9b1d8774e572d51d9d65](https://cloud.githubusercontent.com/assets/18655/5935697/f8ece720-a720-11e4-8a33-a6b3f08eb5fe.png)  If you need api for test, there is https://github.com/team-lab/gitbucket/compare/team-lab:feature/access-token...feature/access-token-test or #603 ","true","feature"
"Issue labels is lost by renaming repository",,"false","bug"
"Add emoji (emoticon) support for markdown","Add emoji support for markdown on GitBucket. The emoji list is based on http://www.emoji-cheat-sheet.com/  See how it's working: ![gitbucket-emoji](https://cloud.githubusercontent.com/assets/137572/5848075/ae30dd82-a1bb-11e4-8bd8-755035453c74.gif) ","true","feature"
"Is there release page?","I want release page like ""https://github.com/takezoe/gitbucket/releases"". ","false","feature"
"Fix merge guide's text","In merge guide's ""Step 3"", branch name of the checkout destination was ""master"" always. Fix it, ""master"" is changed to `pullreq.branch`. ","true","bug"
"Add Connection Pool","As some people reported [here](https://github.com/takezoe/gitbucket/issues/463) and [here](https://github.com/takezoe/gitbucket/issues/460) and I realized it as well, GitBucket has some performance problems.  This pull request add a connection pool using the [c3p0](https://github.com/swaldman/c3p0) library and [typesafe config](https://github.com/typesafehub/config) as configuration library. I'm using (about 10 concurrent users and 60 repositories) this branch internally for more than 2 months with no performance issue so far.  The connection pool (c3p0) is using its [default settings](http://www.mchange.com/projects/c3p0/) but it can be [changed directly in the database.conf file](http://www.mchange.com/projects/c3p0/#c3p0_conf) if needed. ","true","improvement"
"Enable matching URLs end with slash","Hi. If we make a request to http://localhost:8080/username/, we will receive 404 status code. This PR supports end slash in some urls.  Thank you for good product! ","true","improvement"
"more webhooks and some webapi","Added some webhook events. - [pull_request](https://developer.github.com/v3/activity/events/types/#pullrequestevent) open, closed(merged), reopen - [issues](https://developer.github.com/v3/activity/events/types/#issuesevent) open, closed, reopen - [issue_comment](https://developer.github.com/v3/activity/events/types/#issuecommentevent) created  (Not implementd pull_request synchronized action yet)  And ""X-Github-Event"" header on web hook request.  And some GitHub-WebAPI/v3. - [Users](https://developer.github.com/v3/users/) get-a-single-user - [Issues/Comments](https://developer.github.com/v3/issues/comments/) list-comments-on-an-issue, create-a-comment - [Pull Requests](https://developer.github.com/v3/pulls/) list-pull-request, get-a-single-pull-request, list-commits-on-a-pull-request - [Repositories](https://developer.github.com/v3/repos/) get  ( but Authorizations is not implemented yet)  I want to use jenkins plugin '[github pull request builder](https://wiki.jenkins-ci.org/display/JENKINS/GitHub+pull+request+builder+plugin)'. Final goal is to implement the features that are used in that plugin ( #545 ). ","true","feature"
"(refs #495,#595) Add configuration to set default visibility option to create new repositories.",,"true","feature"
"Repo's Disappear upon user being diabled","Hey, Having an issue where a user was disabled and then when enabled again the repo's disappear entirely.  Is it possible to recover these or have these been deleted forever now?  if so, where can I find them?  thanks ","false","question"
"Compare Revisions page has bad layout/css","1. Create a Wiki 2. Edit the Wiki 3. Navigate to the main page, you should see a ""User has edited the user/repo wiki"" news item. Under this item is a link ""View the diff >>"" 4. Click ""View the diff >>"" 5. The resulting page is titled ""Compare Revisions"" and the layout is   Attached screenshot. The diff view of the contents does not appear appropriately. It's off floating to the right overtop the controls.  ![screen shot 2015-01-14 at 12 31 52 am](https://cloud.githubusercontent.com/assets/1531355/5734517/20abf6c2-9b85-11e4-95f0-d0b05de82181.png) ","false","bug"
"Remove user and group","Is it possible to remove specified user and group? I can not find the entry point.  For the user, one can login and delete the account itself.   I wonder if this can be done by the administrator. ","false","feature"
"Count of issues on side menu contains that of pull requests.",,"false","bug"
"UI usability fix on Issue comment and wiki editor","![home - piko-placeholder 2015-01-12 12-42-16](https://cloud.githubusercontent.com/assets/191260/5702331/ddfc6168-9a58-11e4-9004-412e6e618df6.png) Avoid confusion on the issue page. ![test - issue 1 - piko-placeholder 2015-01-12 12-11-31](https://cloud.githubusercontent.com/assets/191260/5702116/a05c81ec-9a55-11e4-93de-777454731b67.png) ","true","improvement"
"not to make a temporary file when archive","When you archive the repository as ZIP or TAR.GZ, GitBucket makes a temporary file to the temporary directory. But if a repository is big, the request will time out in making a temporary file. So I have changed to stream the archive out. ","true","improvement"
"Make New Repository visibility default option configurable","Hi, i really would like to have the visibility option (public / private) default to private, is there a way to make it configurable?  Thanks Dirk ","false","improvement"
"Easily extended systems as greasemonkey / user scripts.","Administrator set site-script url, and footer of all pages has this url as script src. Site script will work in the same way as Greasmonkey.  Administrator if you have their own repository, it can be used as a script file storage that you can easily manage the history and permissions. ","true","feature"
"Column size of FILE_NAME is too short in COMMIT_COMMENT table","Comment in commit is very nice :+1:  However, this functionality is unavailable if the legnth of the filepath is over 100 :sob: 500 response returns...  ``` org.h2.jdbc.JdbcSQLException: 列 ""FILE_NAME NVARCHAR(100)"" の値が長過ぎます: ""'○○○○' (112)"" Value too long for column ""FILE_NAME NVARCHAR(100)"": ""'○○○○' (112)""; SQL statement: insert into ""COMMIT_COMMENT"" (""USER_NAME"",""REPOSITORY_NAME"",""COMMIT_ID"",""COMMENTED_USER_NAME"",""CONTENT"",""FILE_NAME"",""OLD_LINE_NUMBER"",""NEW_LINE_NUMBER"",""REGISTERED_DATE"",""UPDATED_DATE"",""PULL_REQUEST"")  values (?,?,?,?,?,?,?,?,?,?,?) [22001-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:179)     at org.h2.table.Column.validateConvertUpdateSequence(Column.java:327)     at org.h2.table.Table.validateConvertUpdateSequence(Table.java:725)     at org.h2.command.dml.Insert.insertRows(Insert.java:151)     at org.h2.command.dml.Insert.update(Insert.java:114)     at org.h2.command.CommandContainer.update(CommandContainer.java:78)     at org.h2.command.Command.executeUpdate(Command.java:254)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:157)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:143)     at scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsert$1.apply(JdbcInsertInvokerComponent.scala:183)     at scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsert$1.apply(JdbcInsertInvokerComponent.scala:180)     at scala.slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:198)     at scala.slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:389)     at scala.slick.driver.JdbcInsertInvokerComponent$ReturningInsertInvoker.preparedInsert(JdbcInsertInvokerComponent.scala:301)     at scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.internalInsert(JdbcInsertInvokerComponent.scala:180)     at scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.insert(JdbcInsertInvokerComponent.scala:175)     at service.CommitsService$class.createCommitComment(CommitsService.scala:30)     at app.RepositoryViewerController.createCommitComment(RepositoryViewerController.scala:22)     at app.RepositoryViewerControllerBase$$anonfun$24.apply(RepositoryViewerController.scala:271)     at app.RepositoryViewerControllerBase$$anonfun$24.apply(RepositoryViewerController.scala:269)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1$$anonfun$apply$14.apply(Authenticator.scala:143)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1$$anonfun$apply$14.apply(Authenticator.scala:143)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:150)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:148)     at scala.Option.map(Option.scala:145)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:148)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:147)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.ReadableUsersAuthenticator$class.util$ReadableUsersAuthenticator$$authenticate(Authenticator.scala:147)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1.apply(Authenticator.scala:143)     at app.ControllerBase$$anonfun$ajaxPost$2.apply(ControllerBase.scala:100)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$ajaxPost$1.apply(ClientSideValidationFormSupport.scala:45)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745)  ``` ","false","improvement"
"can i upload a image to a wiki  page","just like that in issues UI. ","false","duplicate,question"
"(refs #274) Add option to deny anonymous (i.e. unauthorized) access","Basic auth on reverse proxy doesn't integrate well with session support, specifically sign out functionality. ","true","feature"
"Allow LDAPS connections instead of only allowing TLS enabled connections","I wanted to try out gitbucket today, since I am evaluating such tools for our company. My first task is always to connect my test subjects to our LDAP system (which only allows SSL connections). Since gitbucket only allows TLS connections this was an early showstopper.  Using the TLS option also freezes authentication when used incorrectly.  My pull request will teach gitbucket to work properly with ""real"" SSL connections.   Regards, Mario ","true","improvement"
"Add checkbox to toggle inline notes.","![2015-01-06 23 33 25](https://cloud.githubusercontent.com/assets/6421289/5629946/773abe12-95fc-11e4-8791-4bcc6dc7c5c0.png) ","true","feature"
"Unable to download the file","http://gitbucket.vicp.net/thok-mc/readme/blob/master/设计规范/.NET设计规范.pdf?raw=true  this request retrun http 500 err. ","false","duplicate,question"
"(refs #564) Comment for side-by-side diff available",,"true","feature"
"add icon on each diff header","Add delete/add icon on each diff header. Because it is difficult to be discriminated binary file has been added or deleted. ![5d34e6c0dccc58f91bec83d61b33fb1c](https://cloud.githubusercontent.com/assets/18655/5594912/8b5d9102-92a6-11e4-8146-78c8176b7b0e.png)  ↓  ![b2c0ff385bbd30bf9c4dccda869732cb](https://cloud.githubusercontent.com/assets/18655/5594913/8dc64132-92a6-11e4-9790-d71ebfcafa13.png) ","true","improvement"
"Markdown preview doesn't work in a pull request view.","In a pull request view, markdown preview of the inline form doesn't work. ","false","bug"
"The activity of commenting to pull request is incorrect.","It was shown as commenting to commit. ","false","bug"
"Updating 2.6 to 2.7 on tomcat7: works only if servlet container restarts.","I had a working 2.6 installation. After substitution of the war file on the tomcat7 container the servlet failed to start.  I downgraded back to 2.6 but got the same error.  So I upgraded again to the 2.7, the servlet works only after ""service tomcat7 stop"" + ""service tomcat7 start"". Without the stop+start, the release 2.7 fails to start (just as a further test I tried the 2.6 and the behaviour is the same: it starts only after a container stop+start); this is the catalina.out:  > SLF4J: Class path contains multiple SLF4J bindings. > SLF4J: Found binding in [jar:file:/var/lib/tomcat7/webapps/gitbucket/WEB-INF/lib/logback-classic-1.0.13.jar!/org/slf4j/impl/StaticLoggerBinder.class] > SLF4J: Found binding in [jar:file:/var/lib/tomcat7/webapps/gitbucket/WEB-INF/lib/slf4j-jdk14-1.6.4.jar!/org/slf4j/impl/StaticLoggerBinder.class] > SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. > SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] > 04:33:12.245 [http-bio-8080-exec-101] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor > 04:33:12.251 [http-bio-8080-exec-101] INFO  org.quartz.simpl.SimpleThreadPool - Job execution threads will use class loader of thread: http-bio-8080-exec-101 > 04:33:12.268 [http-bio-8080-exec-101] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl > 04:33:12.268 [http-bio-8080-exec-101] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.2.1 created. > 04:33:12.269 [http-bio-8080-exec-101] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized. > 04:33:12.270 [http-bio-8080-exec-101] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED' >   Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally. >   NOT STARTED. >   Currently in standby mode. >   Number of jobs executed: 0 >   Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads. >   Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered. >  > 04:33:12.270 [http-bio-8080-exec-101] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties' > 04:33:12.270 [http-bio-8080-exec-101] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.2.1 > 04:33:12.551 [http-bio-8080-exec-101] INFO  o.scalatra.servlet.ScalatraListener - The cycle class name from the config: ScalatraBootstrap > 04:33:12.591 [http-bio-8080-exec-101] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap > Dec 30, 2014 4:33:13 AM org.apache.catalina.core.StandardContext startInternal > SEVERE: Error listenerStart > Dec 30, 2014 4:33:13 AM org.apache.catalina.core.StandardContext startInternal > SEVERE: Context [/gitbucket] startup failed due to previous errors > 04:33:13.357 [http-bio-8080-exec-101] INFO  o.scalatra.servlet.ScalatraListener - Destroying life cycle class: ScalatraBootstrap > 04:33:13.357 [http-bio-8080-exec-101] INFO  org.quartz.core.QuartzScheduler - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down. > 04:33:13.358 [http-bio-8080-exec-101] INFO  org.quartz.core.QuartzScheduler - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused. > 04:33:13.358 [http-bio-8080-exec-101] INFO  org.quartz.core.QuartzScheduler - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc > SEVERE: The web application [/gitbucket] registered the JDBC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-1] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-2] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-3] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-4] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-5] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-6] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-7] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-8] but has failed to stop it. This is very likely to create a memory leak. > Dec 30, 2014 4:33:13 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads > SEVERE: The webSLF4J: Class path contains multiple SLF4J bindings. ","false",
"Show information message on singin view.","![83ed4679ce8d9aa492f98a03ae95e467](https://cloud.githubusercontent.com/assets/18655/5568095/2783cba6-8f95-11e4-86c2-45ec6c1772e0.png) ","true","feature"
"Fix bug on showing inline comments in Pull Request.","Change to show inline comments for only a latest commit in Pull Request. ","true","bug"
"Fix a few issues detected by static analysis","I used Linter and a few custom regexes to find these issues. Nothing serious, but the code is a bit cleaner and faster. ","true","improvement"
"fix repo editor fails to preview","Editing and previewing text files on Web UI  causes an exception below and fails to preview.  ``` java.util.NoSuchElementException: key not found: enableTaskList ```  `_preview` seems to require `enableTaskList` param but js in editor.html does not include it. ","true","bug"
"Fork count not updated on delete of parent repo","- If another user forks my repo. -- fork count is now 1 - Then I delete my repo. -- The fork count is 1, but should be 0 - Then I fork his repo.  -- The fork count is now 2, when it should be 1. - I delete my repo again -- The fork count is 1, but should be 0 ","false","bug"
"Issue及びPull RequestでXSS","Pull RequestのコメントとしてHTMLタグを含む文を登録したところ、参考画像1のような状態になりました(コメント欄やMerge Pull Requestボタンが消えている)。 参考画像2の301行目、「削除画面は〜」の文に開始タグのみを入れたため、それ以降が全てタグ内に含まれてしまい、コメントの編集や削除などJavaScriptを用いた操作もできなくなっています。 Issueの登録時やコメント時も同様の現象が発生することを確認しています。  ちなみにGithubでは、一部のタグ(h1等)以外はタグだけが自動的に消され、残されるタグに関しては、 - 開始タグがない場合: 終了タグを削除 - 終了タグがない場合: 自動的に付加   という実装になっているようです。 ### 動作環境 - サーバー   - CentOS 6.5   - Tomcat 7.0.50   - GitBucket 2.6 - クライアント   - OS X 10.9   - Google Chrome 39 / Safari 7.1.2  ![2014-12-17 18 51 46](https://cloud.githubusercontent.com/assets/4133756/5469944/43cc5892-8625-11e4-9435-1737e6817b71.png) 参考画像1  ![2014-12-17 18 57 01](https://cloud.githubusercontent.com/assets/4133756/5469864/2b0418d2-8624-11e4-9f94-56ec5f3e7dcd.png) 参考画像2  (画像は一部加工しています) ","false","bug"
"Documentation about GitBucket plugins?","Is there any documentation about how to start with an code GitBucket plug-ins? e.g. how to access the different stuff the plugin allows to ""extend""?  tnx. ","false","question"
"Add backup functionality from the admin UI","Please add backup 'trigger' functionality from the GUI. H2 has the command:  `backup to 'backup-h2-datexxx.zip'` that can be executed while the DB is running. The same thing would be needed for the part of GitBucket specific files, e.g. everything required to a  zip.  tnx. ","false","feature"
"Add fork to group options",,"true","feature"
"Old dependency","I installed gitbucket on openshift.com but I get a NotClassFoundException issue with /com/sun/net/ssl/internal/ssl/Provider. I resolved putting the jar com.sun.net.ssl.jar inside the WAR file manually Maybe is time to upgrade this dep. Nice work takezoe :-) ","false","duplicate"
"Issues view is extremely slow compared to others","Hello,  Thank you for developing GitBucket!  I needed some git web-based face server and GitBucket turned out to be the easiest to setup and run. My server platform is limited in resources (2 ARM cores, 2 Gb RAM) but everything seems to be working with acceptable speed. Only Issues view is extremelly slow. Other views are opening much faster. Even single issue view is pretty fast.  Do you see any particular reason why this view is slower then others? I could help it to fix though I will need some leading hints where to look at...  You can see  performance here: http://device.test123.syncloud.it:10001 with root user and root password. Please don't hack me :) ","false","improvement"
"Notification fails w/ ""session closed"" for comments containing at-mentions","Presumably this will also fail for `issue:` mentions.  ``` 10:15:54.638 [ForkJoinPool-1-worker-1] ERROR util.Mailer - Notifications Failed. org.h2.jdbc.JdbcSQLException: Connection is broken: ""session closed"" [90067-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.180.jar:1.4.180]     at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.180.jar:1.4.180]     at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.180.jar:1.4.180]     at org.h2.engine.Session.prepareLocal(Session.java:424) ~[h2-1.4.180.jar:1.4.180]     at org.h2.engine.Session.prepareCommand(Session.java:388) ~[h2-1.4.180.jar:1.4.180]     at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1189) ~[h2-1.4.180.jar:1.4.180]     at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:72) ~[h2-1.4.180.jar:1.4.180]     at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:666) ~[h2-1.4.180.jar:1.4.180]     at scala.slick.jdbc.JdbcBackend$SessionDef$class.prepareStatement(JdbcBackend.scala:152) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.JdbcBackend$BaseSession.prepareStatement(JdbcBackend.scala:389) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:32) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:64) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.Invoker$class.firstOption(Invoker.scala:29) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.StatementInvoker.firstOption(StatementInvoker.scala:16) ~[slick_2.11-2.1.0.jar:na]     at service.AccountService$class.getAccountByUserName(AccountService.scala:78) ~[classes/:na]     at view.GitBucketHtmlSerializer.service$RequestCache$$super$getAccountByUserName(Markdown.scala:88) ~[classes/:na]     at service.RequestCache$$anonfun$getAccountByUserName$1.apply(RequestCache.scala:27) ~[classes/:na]     at service.RequestCache$$anonfun$getAccountByUserName$1.apply(RequestCache.scala:27) ~[classes/:na]     at app.Context$$anonfun$cache$1$$anonfun$apply$1.apply(ControllerBase.scala:158) ~[classes/:na]     at scala.Option.getOrElse(Option.scala:120) ~[scala-library-2.11.2.jar:na]     at app.Context$$anonfun$cache$1.apply(ControllerBase.scala:157) ~[classes/:na]     at app.Context$$anonfun$cache$1.apply(ControllerBase.scala:156) ~[classes/:na]     at util.ControlUtil$.defining(ControlUtil.scala:14) ~[classes/:na]     at app.Context.cache(ControllerBase.scala:156) ~[classes/:na]     at service.RequestCache$class.getAccountByUserName(RequestCache.scala:26) ~[classes/:na]     at view.GitBucketHtmlSerializer.getAccountByUserName(Markdown.scala:88) ~[classes/:na]     at view.LinkConverter$$anonfun$convertRefsLinks$2.apply(LinkConverter.scala:27) ~[classes/:na]     at view.LinkConverter$$anonfun$convertRefsLinks$2.apply(LinkConverter.scala:26) ~[classes/:na]     at util.Implicits$RichString$$anonfun$replaceBy$1.apply(Implicits.scala:40) ~[classes/:na]     at util.Implicits$RichString$$anonfun$replaceBy$1.apply(Implicits.scala:37) ~[classes/:na]     at scala.collection.Iterator$class.foreach(Iterator.scala:743) ~[scala-library-2.11.2.jar:na]     at scala.collection.AbstractIterator.foreach(Iterator.scala:1177) ~[scala-library-2.11.2.jar:na]     at util.Implicits$RichString.replaceBy(Implicits.scala:37) ~[classes/:na]     at view.LinkConverter$class.convertRefsLinks(LinkConverter.scala:26) ~[classes/:na]     at view.GitBucketHtmlSerializer.convertRefsLinks(Markdown.scala:88) ~[classes/:na]     at view.GitBucketHtmlSerializer.visit(Markdown.scala:155) ~[classes/:na]     at org.pegdown.ast.TextNode.accept(TextNode.java:51) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.visitChildren(ToHtmlSerializer.java:365) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.visit(ToHtmlSerializer.java:348) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ast.SuperNode.accept(SuperNode.java:43) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.visitChildren(ToHtmlSerializer.java:365) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.printTag(ToHtmlSerializer.java:377) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.visit(ToHtmlSerializer.java:162) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ast.ParaNode.accept(ParaNode.java:35) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.visitChildren(ToHtmlSerializer.java:365) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.visit(ToHtmlSerializer.java:91) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ast.RootNode.accept(RootNode.java:51) ~[pegdown-1.4.1.jar:1.4.1]     at org.pegdown.ToHtmlSerializer.toHtml(ToHtmlSerializer.java:72) ~[pegdown-1.4.1.jar:1.4.1]     at view.Markdown$.toHtml(Markdown.scala:38) ~[classes/:na]     at util.Mailer$$anonfun$1$$anonfun$apply$4$$anonfun$apply$5.apply(Notifier.scala:77) ~[classes/:na]     at util.Mailer$$anonfun$1$$anonfun$apply$4$$anonfun$apply$5.apply(Notifier.scala:74) ~[classes/:na]     at scala.Option.foreach(Option.scala:245) ~[scala-library-2.11.2.jar:na]     at util.Mailer$$anonfun$1$$anonfun$apply$4.apply(Notifier.scala:74) ~[classes/:na]     at util.Mailer$$anonfun$1$$anonfun$apply$4.apply(Notifier.scala:73) ~[classes/:na]     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34) ~[slick_2.11-2.1.0.jar:na]     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61) ~[slick_2.11-2.1.0.jar:na]     at util.Mailer$$anonfun$1.apply(Notifier.scala:73) ~[classes/:na]     at util.Mailer$$anonfun$1.apply(Notifier.scala:72) ~[classes/:na]     at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[scala-library-2.11.2.jar:na]     at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24) ~[scala-library-2.11.2.jar:na]     at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121) ~[scala-library-2.11.2.jar:na]     at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) ~[scala-library-2.11.2.jar:na]     at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) ~[scala-library-2.11.2.jar:na]     at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [scala-library-2.11.2.jar:na]     at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [scala-library-2.11.2.jar:na] ``` ","false","bug"
"Error on 'run' on sbt console.","I'm using Windows PowerShell on Windows 7. I tried sbt.bat and got `compile` done well. But when I tried `run`, I got an error: `[error] (run-main-0) java.lang.NoClassDefFoundError: org/eclipse/jetty/server/Connector`.  Do I need to install additional package or something?  Following is the full output:  ``` PS D:\src\gitbucket> .\sbt.bat  D:\src\gitbucket>set SCRIPT_DIR=D:\src\gitbucket\  D:\src\gitbucket>java -Dsbt.log.noformat=true -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M -Xdebug  -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 -jar ""D:\src\gitbucket\\sbt-launch-0.13.5.jar"" Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0 Listening for transport dt_socket at address: 5005 [info] Loading project definition from D:\src\gitbucket\project [info] Compiling 1 Scala source to D:\src\gitbucket\project\target\scala-2.10\sbt-0.13\classes... [info] Set current project to gitbucket (in build file:/D:/src/gitbucket/) > compile [info] Generating D:\src\gitbucket\target\scala-2.11\resource_managed\main\rebel.xml. [info] Compiling 180 Scala sources and 2 Java sources to D:\src\gitbucket\target\scala-2.11\classes... [warn] there were two feature warnings; re-run with -feature for details [warn] one warning found [warn] 警告: [options] ブートストラップ・クラスパスが-source 1.7と一緒に設定されていません [warn] 警告1個 [success] Total time: 52 s, completed 2014/12/09 12:08:36 > > run [info] Generating D:\src\gitbucket\target\scala-2.11\resource_managed\main\rebel.xml. [info] Running JettyLauncher [error] (run-main-0) java.lang.NoClassDefFoundError: org/eclipse/jetty/server/Connector java.lang.NoClassDefFoundError: org/eclipse/jetty/server/Connector         at java.lang.Class.forName0(Native Method)         at java.lang.Class.forName(Unknown Source) Caused by: java.lang.ClassNotFoundException: org.eclipse.jetty.server.Connector         at java.net.URLClassLoader$1.run(Unknown Source)         at java.net.URLClassLoader$1.run(Unknown Source)         at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(Unknown Source)         at java.lang.ClassLoader.loadClass(Unknown Source)         at java.lang.ClassLoader.loadClass(Unknown Source)         at java.lang.Class.forName0(Native Method)         at java.lang.Class.forName(Unknown Source) [trace] Stack trace suppressed: run 'last compile:run' for the full output. java.lang.RuntimeException: Nonzero exit code: 1         at scala.sys.package$.error(package.scala:27) [trace] Stack trace suppressed: run 'last compile:run' for the full output. [error] (compile:run) Nonzero exit code: 1 [error] Total time: 0 s, completed 2014/12/09 12:08:40 ```  Thanks in advance! ","false","question"
"Search Wiki contents","As far as I can see (still on v2.0) search function only covers ""Code"" and ""Issues""  I believe ""Wiki"" tab/index should also be added. This should be easy enough given it is just another repo. ","false","duplicate"
"autocompletion for # or @ in issues","![2014-12-03 20 33 16](https://cloud.githubusercontent.com/assets/7676046/5279786/ba954a6a-7b2b-11e4-891b-ab79d3a0baea.png) ![2014-12-03 20 33 28](https://cloud.githubusercontent.com/assets/7676046/5279787/bab7dd0a-7b2b-11e4-834b-44b66b252e0d.png)  添付画像のように、githubでは、#や@を入力した際に表示される autocomplete（suggest）機能は未実装でしょうか？ ","false","feature,plugin"
"""Search this repository"" reports issues from all repositories","When using the search box, issue results are displayed from all repositories, not just the one you are searching from (possibly related to #554?) ","false","bug"
"Stacktrace when clicking on commit id","With build from latest HEAD I get the following stacktrace when clicking on a commit id (from commit list, for example):  ``` org.h2.jdbc.JdbcSQLException: Table ""COMMIT_COMMENT"" not found; SQL statement: select x2.""USER_NAME"", x2.""REPOSITORY_NAME"", x2.""COMMIT_ID"", x2.""COMMENT_ID"", x2.""COMMENTED_USER_NAME"", x2.""CONTENT"", x2.""FILE_NAME"", x2.""OLD_LINE_NUMBER"", x2.""NEW_LINE_NUMBER"", x2.""REGISTERED_DATE"", x2.""UPDATED_DATE"" from ""COMMIT_COMMENT"" x2 where ((x2.""USER_NAME"" = ?) and (x2.""REPOSITORY_NAME"" = ?)) and (x2.""COMMIT_ID"" = '75d7e3d5d70d3b6cdf38a7eff75c37735caba5ed') [42102-180]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)     at org.h2.message.DbException.get(DbException.java:179)     at org.h2.message.DbException.get(DbException.java:155)     at org.h2.command.Parser.readTableOrView(Parser.java:5212)     at org.h2.command.Parser.readTableFilter(Parser.java:1219)     at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1858)     at org.h2.command.Parser.parseSelectSimple(Parser.java:1967)     at org.h2.command.Parser.parseSelectSub(Parser.java:1852)     at org.h2.command.Parser.parseSelectUnion(Parser.java:1673)     at org.h2.command.Parser.parseSelect(Parser.java:1661)     at org.h2.command.Parser.parsePrepared(Parser.java:433)     at org.h2.command.Parser.parse(Parser.java:305)     at org.h2.command.Parser.parse(Parser.java:277)     at org.h2.command.Parser.prepareCommand(Parser.java:242)     at org.h2.engine.Session.prepareLocal(Session.java:446)     at org.h2.engine.Session.prepareCommand(Session.java:388)     at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1189)     at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:72)     at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:666)     at scala.slick.jdbc.JdbcBackend$SessionDef$class.prepareStatement(JdbcBackend.scala:152)     at scala.slick.jdbc.JdbcBackend$BaseSession.prepareStatement(JdbcBackend.scala:389)     at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:32)     at scala.slick.jdbc.StatementInvoker.iteratorTo(StatementInvoker.scala:22)     at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:64)     at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.build(Invoker.scala:47)     at scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:16)     at scala.slick.jdbc.Invoker$class.list(Invoker.scala:39)     at scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:16) ``` ","false","question"
"GitBucket 2.5 and 2.6 Profile Image Error","CentOS 6.5 x64, WildFly 8.1.0, JDK 1.7u72  When attempting to upload an image to a profile I get the following:  java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:322)     at scala.None$.get(Option.scala:320)     at app.AccountManagementControllerBase$$anonfun$updateImage$3.apply(ControllerBase.scala:180)     at app.AccountManagementControllerBase$$anonfun$updateImage$3.apply(ControllerBase.scala:179)     at scala.Option.map(Option.scala:145)     at app.AccountManagementControllerBase$class.updateImage(ControllerBase.scala:179)     at app.AccountController.updateImage(AccountController.scala:18)     at app.AccountControllerBase$$anonfun$13$$anonfun$apply$14.apply(AccountController.scala:156)     at app.AccountControllerBase$$anonfun$13$$anonfun$apply$14.apply(AccountController.scala:149)     at scala.Option.map(Option.scala:145)     at app.AccountControllerBase$$anonfun$13.apply(AccountController.scala:149)     at app.AccountControllerBase$$anonfun$13.apply(AccountController.scala:147)     at util.OneselfAuthenticator$$anonfun$oneselfOnly$1$$anonfun$apply$1.apply(Authenticator.scala:14)     at util.OneselfAuthenticator$$anonfun$util$OneselfAuthenticator$$authenticate$1.apply(Authenticator.scala:21)     at util.OneselfAuthenticator$$anonfun$util$OneselfAuthenticator$$authenticate$1.apply(Authenticator.scala:18)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.OneselfAuthenticator$class.util$OneselfAuthenticator$$authenticate(Authenticator.scala:18)     at util.OneselfAuthenticator$$anonfun$oneselfOnly$1.apply(Authenticator.scala:14)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:60)     at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:132)     at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:85)     at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:61)     at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)     at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25)     at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:113)     at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:56)     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25)     at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:45)     at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:61)     at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:58)     at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:70)     at io.undertow.security.handlers.SecurityInitialHandler.handleRequest(SecurityInitialHandler.java:76)     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25)     at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25)     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25)     at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:240)     at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:227)     at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:73)     at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:146)     at io.undertow.server.Connectors.executeRootHandler(Connectors.java:177)     at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:727)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) ","false",
"(refs #9) Comments for commit and diff","Implemented.  ![2014-11-26 22 53 24](https://cloud.githubusercontent.com/assets/6421289/5202359/baceb806-75c0-11e4-88ce-27d07674b5c0.png)  Only for unified diff is available.   I will apply this to side-by-side later. ","true","feature"
"LDAP authentication for multiple domains","What can be multiple domains set in the LDAP authentication? （If the domain name is different.） ","false","LDAP/SSO,feature"
"Constant OverlappingFileLockException on code change","When I'm trying to run gitbucket with `~ ;copy-resources;aux-compile` I getting OverlappingFileLockException after several code changes. It's really annoying to restart container after each change. I've found one [solution](http://stackoverflow.com/questions/8545783/auto-reloading-files-in-scala-lift-sbt-11), but despite it reloading automatically it still need a lot of time. ","false","waiting 4 user feedback"
"Enable contrib init file and RPM's spec file to run on RHEL 6/CentOS 6 a...","It is happy if I can use a gitbucket RPM package on RHEL 6/CentOS 6, and can run a gitbucket process as non root user.  Current gitbucket repository have a minimum feature RPM spec file: contrib/linux/redhat/gitbucket.spec, init script file: contrib/gitbucket.ini.  The gitbucket.spec file and gitbucket.init file enable the gitbucket process to run as root user. And the current gitbucket.init script file cannot run on RHEL 6/CentOS 6 by error. So, I modified the gitbucket.spec file, and created gitbucket.init script file for only RHEL 6/CentOS 6. ","true",
"Move to TravisCI from Buildhive",,"false","task"
"Merged from message is wrong","GitBucket 2.5:  When a user merged PR using `Merge pull request` button, merged message seems to be wrong. - Expected: merged commit ... into `foo:master` **from** `bar:branch` - Actual: merged commit ... into `foo:master` **to** `bar:branch`  ![gitbucket](https://cloud.githubusercontent.com/assets/4208984/5136112/d05ddeae-7165-11e4-9a7b-4db655b388bc.png)  Thanks ","false","bug"
"Java heap space error while pushing 4GB repo","I'm facing some problem with Gitbucket 2.4. I've migrated codebase of my app from SVN to Git and now I'm trying (without success) to push it to GitBucket. Command crashes as shown below:  ``` $ git push -u origin master Counting objects: 75943, done. Delta compression using up to 2 threads. Compressing objects: 100% (21792/21792), done. Writing objects: 100% (75943/75943), 4.09 GiB | 35.76 MiB/s, done. Total 75943 (delta 60272), reused 67810 (delta 53298) error: unpack failed: error Java heap space To http://server/git/some-repo.git ! [remote rejected] master -> master (n/a (unpacker error)) error: failed to push some refs to 'http://server/git/some-repo.git' ```  My GitBucket is hosted on Tomcat on Windows machine with 4GB of RAM.  I've already tried to: 1. put `""set CATALINA_OPTS=-Xms1g -Xmx2g""` in catalina.bat 2. set following properties in gitconfig on machine when GitBucket is installed:  ```     [pack]     windowMemory=100m     packSizeLimit=200m ```  but I'm still receiving the same error.  How can I fix this issue? Or, is there any way to push sources without packing/compressing? - because it looks like unpacking causes the problem.  I would really appreciate any help! Thanks. ","false",
"LDAPS auth doesn't work. ","The issue has been discussed in Questions #239 and #284, both are closed. However this problem still exists. As soon as the LDAP is switched to TLS the login doesn't work. After the user tries to login the corresponding response times out without any information left in the logs.   The Keystore was given correctly through the admin GUI. My setup is a Tomcat7 with openjdk7. LDAP without TLS works properly.  ","false",
"Add SSH clone url option when enabled SSH access","I just added an option on guide page and make the repo url accessable after enabled SSH access. Any ideas to improve this patch? ","true","improvement"
"Gists","I was wondering if you had planned a Gists feature for a future release? That would be awesome!  > Gist is a simple way to share snippets and pastes with others.  > All gists are Git repositories, so they are automatically versioned, forkable and usable from Git. ","false","feature"
"New search box returns issues from all projects","In my local gitbucket installation I own several projects (either directly or via an organization): since the latest pull few hours ago, when opening any project's issues page, the list of all open issues from all projects is returned instead of the open issues from the current project.  Thx for your amazing work, anyway! ","false","bug"
"Using RSA SSH keys instead of DSA keys","I thought I submitted this issue yesterday, but now there is no issue...  I created a new user and wanted to add my local ssh key to my account on my gitbucket instance, but it wasn't accepted. So I read a few tutorials and they all had ssh-dss keys, so I created a new key using the DSA algorithm instead of RSA and it worked. But, all my keys are created using RSA and I'd like to use them for gitbucket.  Is this my fault and RSA is supported or is only DSA supported? And if only DSA is supported: Are there any plans on supporting RSA? Would be great. ","false","feature"
"fine grained group access control","currently, when someone is added to a group, he has access to all of the group repositories. group sounds like Organization (as is stated in README).  users access should be controlled at repository level, i.e. developers of a repository should may not necessarily needs access to another sibling repository. ","false","feature"
"Adjust wiki buttons","Adjust wiki buttons according to recent GitHub UI:  ![wiki_buttons](https://cloud.githubusercontent.com/assets/1094760/5066437/7d51a688-6e76-11e4-9ff7-34eb892a095f.png) ","false","improvement"
"wiki ""view page"" silently loses changes","Hi,  Gitbucket v2.3 running with Apache Tomcat under Windows 7 Enterprise, IE9 browser  If I edit the wiki and I press ""View Page"" I silently lose my edits (unless I save them first). It would be nicer if View Page automatically saved the edits (like with e.g. Concluence).  Best wishes, Albert-Jan ","false",
"selectig code in commit diff selects linenumbers too","as the issue title says. if you try to select multiple lines on a commit diff, it also selects the linenumbers. that is pretty annoying. :( ","false","feature"
"(refs #508)WIP: Add search filter box to issues and pullreq",,"true","feature"
"Change Bootstrap's default color pink for code tags to match github's color","Also fixed the bulleted list in `contrib/README.md` ","true","improvement"
"Add repository's link to issue and pull request list on dashboard","Add repository's link to issue and pull request list on dashboard like Github dashboard. ","true","improvement"
"github pull request builder pluing","I want to use jenkins github pull request builder pluing. https://wiki.jenkins-ci.org/display/JENKINS/GitHub+pull+request+builder+plugin https://github.com/janinko/ghprb  Maybe it is necessary to implement the following features.. - more web hook events.   - pull_request     - action=opened/reopened/synchronize   - issue_comment - API v3   - Pull Requests https://developer.github.com/v3/pulls     - Get a single pull request     - Update a pull request ( state to close )   - Issues/Comments https://developer.github.com/v3/issues/comments/     - Create a comment   - Repositories/Statuses https://developer.github.com/v3/repos/statuses/     - Create a Status   - Repositories/Webhooks https://developer.github.com/v3/repos/hooks/     - List hooks     - Create a hook     - (If the user is registered manually, you may not need to implement this function) ","false","feature"
"IOException caused by repository deletion","1. リポジトリ作成 2. ローカルにclone 3. 編集してpush 4. リポジトリ削除  1度もpushしていないリポジトリは削除できるようです リポジトリの削除はSettingsのDanger Zoneからリポジトリを削除です  編集についてはver2.5ではReadMe.mdをGitBucket上で編集した場合は問題なく削除できます 2.5以外のバージョンについてはGitBucket上での編集については確認していません  発生バージョン：2.3、2.4、2.4.1、2.5 ※ 2.3より以前は確認してません ","false","bug"
"Update _config.yml","http base url will lead main.css load via http protocol, and some browsers may give user warning, cause the page will be redirected to use https protocol, but loading resource via http will make it not safe. ","true",
"Wiki page return internal error in Gitbucket 2.5","When I use Gitbucket 2.5 Wiki top page in certain project return internal error, though same markdown is displayed correctly in Gitbucket 2.4.1.  My gitbucket is running on Tomcat7, and I've checked tomcat7 roughly. But I couldn't find any particular gitbucket error message there.  Is there a good way to investigate this problem? Unfortunately I cannot share the wiki page content itself since it's confidential one. ","false",
"Fix pull request's view on dashboard","The PR links (Created, Assigned and Mentioned) are going to Issues pages, so this pull request fix this issue. Besides that, I added another tab called ""All"" to pull request view, using that we can see all pull requests without filters. ","true","bug"
"add current user to notifications","Add the message's author and improve a little bit the notification content to be more informative. :) ","true","improvement"
"Markdown makes extra paragraphs","The GitHub and BitBucket markdown processor only creates a new paragraph after a blank line. However, gitbucket makes a new paragraph after every newline. For example, imagine that the following lines were not surrounded by quad-quotes; GitHub and BitBucket would display these as one paragraph:  ``` This should be one paragraph ``` ","false","improvement"
"Always show version 2.2 in header","Here is the environment: - Windows 7 32-bit - Apache Tomcat 7.0.50 - GitBucket 2.5 (for now)  Actually the server is running GitBucket 2.5, since the dashboard changes. But the header in browser is always show ""GitBucket 2.2"", like below.  ![2](https://cloud.githubusercontent.com/assets/746874/4893145/314d10d8-63bd-11e4-8a5b-bfd612935e17.PNG)  Some time ago I had found this after upgrading to version 2.3. Today I download version 2.5, delete `webapps\gitbucket` directory, move `gitbucket.war` to `webapps/`, and then restart Tomcat, but the header version is still 2.2.  Was I do something incorrect or missing something?  ","false","question"
"About the Source Code of AmaterasERD","Hello,I have a project about draw a table of Database.And I find the jar of AmaterasERD on SourceForge. It has the perfect function of my project. So I want to ask about if the AmaterasERD is an open project. If it is, can you contribute to the github, so we can make more contribution about the Open world.   Thanks  for your repply. ","false",
"Commits view on directory","github's ""Browse commits for this branch"" button  ![fcb70126bea3515fd4580c2b95f3bca9](https://cloud.githubusercontent.com/assets/18655/4839218/f680b3d0-5ffa-11e4-8968-63672fc0bc1c.png) ","false","feature"
"Performance is bad when navigating a large project in the dashboard page","Hey guys, our company have launched a gitbucket service with version 2.1, i found that there is a performance problem in gitbucket 2.1, whenever i navigate a large project in the dashboard page, it takes a very long time to finish loading the corresponding directory page, have you done anything about this performance issue since 2.1? or else, do you have any plan to improve it? thank you very much! ","false","question"
"Failed to view binary files","I can't view binary files whose size exceed 1MB such as pdf or mp4 on repository viewer. The following error occurs.  I found the following source code that checks wheter the file size is over 1MB.  https://github.com/takezoe/gitbucket/blob/master/src/main/scala/util/FileUtil.scala#L31  I want to change that limit size with system setting or any other way. Any plan?  Here is the error message.  ``` java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:322)     at scala.None$.get(Option.scala:320)     at app.RepositoryViewerControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23$$anonfun$apply$24.apply(RepositoryViewerController.scala:198)     at app.RepositoryViewerControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23$$anonfun$apply$24.apply(RepositoryViewerController.scala:195)     at scala.Option.map(Option.scala:145)     at app.RepositoryViewerControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23.apply(RepositoryViewerController.scala:195)     at app.RepositoryViewerControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23.apply(RepositoryViewerController.scala:192)     at util.ControlUtil$.using(ControlUtil.scala:26)     at app.RepositoryViewerControllerBase$$anonfun$16$$anonfun$apply$22.apply(RepositoryViewerController.scala:192)     at app.RepositoryViewerControllerBase$$anonfun$16$$anonfun$apply$22.apply(RepositoryViewerController.scala:188)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     at scala.Option.map(Option.scala:145)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.ReferrerAuthenticator$class.util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     at util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     at app.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:22)     at app.RepositoryViewerControllerBase$$anonfun$16.apply(RepositoryViewerController.scala:188)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)  ... ``` ","false","improvement"
"Last one administrator can be removed","上記でユーザを消してしまった時に、何か復旧方法があれば教えて頂ければと思います。 ","false","bug"
"Link over image embedding (like 'badge') is rendered incorrectly. ","A.k.a. build status badge, link to CI over image embedding ( i.e. `[![alt](image url)](url to CI)` ) rendered as HTML incorrect.  This sample markdown link:  ``` [![placeimg](https://placeimg.com/200/200/tech)](https://placeimg.com/) ```  is rendered as below:  ``` <p>   <a href=""https://placeimg.com/""></a>   <a target=""_blank"" href=""https://placeimg.com/200/200/tech"">     <img src=""https://placeimg.com/200/200/tech"" alt=""placeimg"">   </a> </p> ```  on GitBucket 2.4.1  Here, Github rendering sample. [![placeimg](https://placeimg.com/200/200/tech)](https://placeimg.com/) ","false","bug"
"How do I execute a post-receive hook on Windows ","I have the following code in repositories\testgit\testgit.git\hooks directory in the hook post-receive  ``` #!/bin/sh  echo ""execute "" >> out.txt ```  Unfortunately it doesn't seem to work. ","false","question"
"リポジトリ名を変更するとそのリポジトリのこれまでのイベント全てが最新のものとして News Feed に表示される","例えば alice の tea リポジトリの名前を ice-tea にした場合、News Feed が以下のように変化します。  変更前  ![](http://i.gyazo.com/d35704fd292842ae97b5d328d92eff51.png)  変更後  ![](http://i.gyazo.com/5567fa322eec1a8b299578eb8a68986c.png)  期待した動作は、News Feed 中に名前を変更したリポジトリのイベントがあれば、その名前だけが変更されているというものです。  どういう挙動が正しいのでしょうか？ ## 環境 - Debian 7.6 - Tomcat 7 - GitBucket 2.4.1 ","false","bug"
"Apply new Issues and PullReq UI to dashboard",,"false","improvement"
"Attachments: ""... or pasting from the clipboard""","Github allows you to attach images by pasting them from the clipboard. To me, this is a significant feature since it simplifies attaching screenshots. Could you please support this in Gitbucket as well? Thanks!  ![image](https://cloud.githubusercontent.com/assets/1677414/4692198/f5b51d08-5751-11e4-976f-e55d052a1576.png) ","false",
"Gitbucket-master: Left part of the dashboard shows ""strange"" numbers after clicking on ""Assigned to you""","Please note: This is a follow-up to #522. Basically, ""Assigned to you"" seems to work OK now, the issue list gets updated as expected - thanks.  Here is my dashboard:  ![image](https://cloud.githubusercontent.com/assets/1677414/4692155/c6992296-574f-11e4-8aa2-f22e2316a0c5.png)  Here is the dashboard after clicking on ""Assigned to you"":  ![image](https://cloud.githubusercontent.com/assets/1677414/4692158/168c29e2-5750-11e4-8dea-151183a950ae.png) - Expected: The numbers in the upper part don't change - Got: The numbers are reduced, seems that only those ""Assigned to me"" are counting  Please note that these are my personal expectations. Not sure if this is what you intended to implement. To me, this is a very minor issue... ","false",
"(ref #519) Change datetime formats",,"true","improvement"
"Enhance LDAP support so repo-by-repo authorization is supported","The current LDAP implementation provides all-or-no access to a GitBucket instance. It would be useful to add the ability to associate an LDAP user or a subset of an LDAP organization hierarchy with one or more git repos. For example, a department or a site might be granted read-only or read-write access to a git repo, or several related git repos. For this to work, git repos would need to follow some sort of naming convention, however the naming convention would be up to the people who create the GitBucket repos.  GitBucket admins would specify a set of rules in the GitBucket LDAP admin page that would be parsed when users login to determine the repos that a user was authorized to view or update. Each rule would contain 3 fields:  - an indication of read/read-write authorization. Values are ""read"" or ""read-write"". - a regular expression similar to an LDAP filter that would be compared against LDAP user entries. - a regular expression that would be compared against available repos to determine user eligibility.   A rule's LDAP filter regex might look like this:  ``` ou=location2,dc=bigco,dc=com ```  A more general LDAP filter regex might look like this:  ``` ou=(location2|usa|china),dc=bigco,dc=com ```  The same rule's repo name regex might look like this:  ``` course_(one|two) ```  Stretch goal: include start and end timestamps for each rule, so authorization would automatically begin and end accordingly. ","false","LDAP/SSO"
"LDAP User Activation by Admin","LDAP-Domains are sometimes very large. As an admin you want to be able to control access to the gitbucket instance. This is already possible if no LDAP-Auth is used, so the admin has to create the accounts. The same feature would be nice for LDAP-Users. At the moment all LDAP-Users just can log in and the account is created without any interaction of the admin.   Implementation proposal:  It would be nice to have a ""is LDAP account"" check mark beside the password field when creating a user. Which, for logical reasons, at the same time forces the password field to be empty.   The same check mark would alse make sence to be present when the admin clicks on ""user edit"". I believe this would at the same time solve the issue#523.   Can't help you out with a pull request, since I have no idea of Scala :( thx in advance ","false","LDAP/SSO"
"Error on LDAP-Login when user existed before locally ","When the same username existed before locally and LDAP ist attached afterwards the user can't login in. This issue exists even when the local user is  deleted. Since the user is still somehow in the DB (since you can see him with ""Include removed users"" check mark) I assume this is due the same login name or more likely the email address already exists.   Trace can be found here: http://pastebin.com/brd3Ytvr ","false","LDAP/SSO"
"Gitbucket-2.4.1: ""Assigned to you"" shows all tickets","I think this used to work on 2.3. - Login as ""root"" - Create a new repository - Create an issue and assign it to ""root"" - Create another issue and leave it unassigned - Click on the top left gitbucket headline - Click on ""Assigned to you"" - Expected: One issue appears in the list - Got: All the issues appear in the list  ![gitbucket-2 4 1](https://cloud.githubusercontent.com/assets/1677414/4658206/20236478-54fa-11e4-94f5-a0e07f8b652e.png)  There is a work around for the issue: Modify the url and append ""&assigned=root"":  ![gitbucket-2 4 1-url-modified](https://cloud.githubusercontent.com/assets/1677414/4658239/8715f37e-550b-11e4-8711-07dad44dce5d.png) ","false","bug"
"New issue comment creation fails silently","- According to our gitbucket administrator when asked if attemps to create new comments in an existing issue are failing fetched the reply gitbucket is failing silently. - If there is a limit on the number of comments per issue it is not evident that creating a new issue comment once the limit has been reached is in itself an issue. - Issue tracker comments should be unlimited or at least extendable or minimally some type of failure notification. ","false","question"
"Read-only private forks?","So I want to share a project with a bunch of students which they fork so that they can make their own modifications.  I don't want the students to see each other's forks (to prevent plagiarism of assessed work), and they also should not be allowed to push back to the original project (so they don't corrupt the original project).  I can think of two ways of doing this, but GitBucket allows neither: - Make the shared repo public, and get the students to create a fork, which they then make private.  Currently GitBucket does not allow the fork to be made private.  Is there any technical reason for this? - Make the shared repo private, and add the students as read-only contributors.  They can then create a fork (which would be private by default).  Currently GitBucket does not have read/pull-only collaborator support.  Are there any technical reasons for preventing forks of public repos from being made private? ","false",
"Update the ""last change"" text","I'd like to suggest to change the last change timestamp shown in the file tree to a ""x hours/days/month/years ago"" like on github. this allows faster recigniton of when something changed. and if one wants to see the detailed change date (like it is currently shown), show it on mouse over - again, like github.  thanks :) ","false","improvement"
"Compile for Java7","GitBucket now built on Scalatra 2.3 and it requires Java 7. So GitBucket comilation target should be changed to Java 7. ","false","task"
"add classpath to sbt runtime and ResourceDirectories for run ""sbt run"" in root directory",,"true",
"Why not display minor version?","I use Gitbucket 2.4.1. But 2.4 is displayed in header. ","false","question"
"(refs #514) Fix problems of renaming repository.","Fixed. ","true","bug"
"Cannot rename Repository name","NG: ver 2.4 - 2.4.1 No　Problem : ver 2.3  used Chrome 38.0.2125.101 jre ver 7.0.670.1  Operation 1. Create Repository 2. Setting -> Options 3. Change Repository Name 4. Apply changes  ``` org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: C:\Users\honma\Desktop\GitBucket\Data.GitBucket2.4\repositories\root\test3.git     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:575)     at org.eclipse.jgit.api.Git.open(Git.java:113)     at org.eclipse.jgit.api.Git.open(Git.java:97)     at app.RepositorySettingsControllerBase$$anonfun$7.apply(RepositorySettingsController.scala:97)     at app.RepositorySettingsControllerBase$$anonfun$7.apply(RepositorySettingsController.scala:72)     at util.OwnerAuthenticator$$anonfun$ownerOnly$1$$anonfun$apply$2.apply(Authenticator.scala:34)     at util.OwnerAuthenticator$$anonfun$ownerOnly$1$$anonfun$apply$2.apply(Authenticator.scala:34)     at util.OwnerAuthenticator$$anonfun$util$OwnerAuthenticator$$authenticate$1$$anonfun$apply$3.apply(Authenticator.scala:41)     at util.OwnerAuthenticator$$anonfun$util$OwnerAuthenticator$$authenticate$1$$anonfun$apply$3.apply(Authenticator.scala:39)     at scala.Option.map(Option.scala:145)     at util.OwnerAuthenticator$$anonfun$util$OwnerAuthenticator$$authenticate$1.apply(Authenticator.scala:39)     at util.OwnerAuthenticator$$anonfun$util$OwnerAuthenticator$$authenticate$1.apply(Authenticator.scala:38)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.OwnerAuthenticator$class.util$OwnerAuthenticator$$authenticate(Authenticator.scala:38)     at util.OwnerAuthenticator$$anonfun$ownerOnly$1.apply(Authenticator.scala:34)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Unknown Source) ``` ","false","bug"
"Gitbucket-2.4.1: Pull Request title is missing in detail page","Title is missing in gitbucket PR detail page like 'http://example.com/gitbucket/sample/repos/pull/123'.  This problem may be caused by UI update.  And user cannot edit pull request title. ","false","duplicate"
"(refs #394) Create branch from Web UI","Implemented. ![2014-10-08 2 19 32](https://cloud.githubusercontent.com/assets/6421289/4546737/53282472-4e46-11e4-8211-832d8fa006d4.png) ","true","feature"
"Gitbucket-2.4.1: Cannot create new labels","The ""color"" widget seems to be inactive, I cannot click on it after ""New label"".  This used to work with 2.3. For 2.4, I didn't check. ","false","bug"
"Presentation problem in Issues and Pull requests",,"false","bug"
"Wiki link is broken in GitBucket 2.4",,"false","bug"
"Filter box at Issues and Pull requests",,"false","feature"
"Apply new Issues UI to Pull requests",,"false","improvement"
"Relative image path in Wiki",,"false","improvement"
"Disable plugin system in default","Currently, plugin system is an experimental feature, so it should be disabled in default. It's possible to be enabled by changing configuration. ","false","improvement"
"Misplaced ""Pages"" table in wiki pages","With Chromium under Linux the ""Pages"" table in all wiki pages - is there an option to remove it, BTW? - is not placed correctly, as shown by this screenshot:  ![image](https://cloud.githubusercontent.com/assets/1064664/4454287/4d2805a8-486d-11e4-863d-618dd7e5866e.png) ","false","improvement"
"Failed login gives no error message","No hint on whether user does not exist, is suspended or password is wrong. This would be **very** helpful. ","false","feature"
"named branch was $,other page error","## I named branch was $,but other page error  ```  java.lang.IllegalArgumentException: Illegal group reference ``` ","false",
"Fix some mixed content problems","These problems manifest themselves with HTTPS Everywhere installed, and will become much more obvious when GitHub turns on SSL for GitHub Pages by default (assuming they do so). ","true",
"Modify styles of split diff.","Split diff styles are not same as inline diff, so I modified. ","true","improvement"
"gitbucket doesn't log failed login attempts by default","By default, when run with java -jar or within an external jetty container, gitbucket does not appear to log failed login attempts, even if the log level is set to ALL.  This would be a nice feature to have to monitor malicious login attempts, or to use something like fail2ban to block malicious people or bots. ","false","improvement"
"User can see pull requests events in the feed page even if he don't have the accesss right","[How to reproduce] 1. create private repository 2. create new branch and create pull requests 3. Check feed page (http://example.com/gitbucket/dashboard/pulls) in the user setting who don't have access right to the private repository  [Expectations]  Events happening in the repository that user cannot access should not be displayed.  ---  ログイン後のPull request一覧タブにアクセス権がないリポジトリの情報まで表示されます。 ","false","bug"
"With new plugin support gitbucket should support accessing the internet using a proxy","Running gitbucket gives the following error on command line :   org.eclipse.jgit.api.errors.TransportException: https://github.com/takezoe/gitbucket_plugins.git: cannot open git-upload-pack         at org.eclipse.jgit.api.FetchCommand.call(FetchCommand.java:139) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.api.CloneCommand.fetch(CloneCommand.java:178) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.api.CloneCommand.call(CloneCommand.java:125) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at plugin.PluginUpdateJob$$anonfun$execute$1.apply(PluginUpdateJob.scala:36) ~[classes/:na]         at plugin.PluginUpdateJob$$anonfun$execute$1.apply(PluginUpdateJob.scala:27) ~[classes/:na]         at scala.collection.immutable.List.foreach(List.scala:381) ~[scala-library-2.11.2.jar:na]         at plugin.PluginUpdateJob.execute(PluginUpdateJob.scala:27) ~[classes/:na]         at org.quartz.core.JobRunShell.run(JobRunShell.java:202) [quartz-2.2.1.jar:na]         at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573) [quartz-2.2.1.jar:na] Caused by: org.eclipse.jgit.errors.TransportException: https://github.com/takezoe/gitbucket_plugins.git: cannot open git-upload-pack         at org.eclipse.jgit.transport.TransportHttp.connect(TransportHttp.java:521) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.transport.TransportHttp.openFetch(TransportHttp.java:309) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.transport.FetchProcess.executeImp(FetchProcess.java:136) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.transport.FetchProcess.execute(FetchProcess.java:122) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.transport.Transport.fetch(Transport.java:1111) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.api.FetchCommand.call(FetchCommand.java:130) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         ... 8 common frames omitted Caused by: java.net.ConnectException: Connection timed out github.com         at org.eclipse.jgit.util.HttpSupport.response(HttpSupport.java:175) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         at org.eclipse.jgit.transport.TransportHttp.connect(TransportHttp.java:475) ~[org.eclipse.jgit-3.4.1.201406201815-r.jar:3.4.1.201406201815-r]         ... 13 common frames omitted  I tried running with the following command :  $GITBUCKET_DIR/jre_linux_x64/bin/java -jar $GITBUCKET_DIR/gitbucket.war -DproxySet=true  -DproxyHost=proxy.example.com -DproxyPort=8080 --port=8081 --gitbucket.home=$GITBUCKET_DIR/data  Still shows the same error. ","false","improvement"
"Add repository selector to the header","![repository_selector](https://cloud.githubusercontent.com/assets/1094760/4266725/70753b0a-3c85-11e4-9485-82df7fe8b6ed.png) ","false","feature,invalid"
"Option to create private repositories by default","I would like to see an option that allows me to set the default visibility of a new repo to private instead of public. ","false","feature"
"Exception when closing an issue with 2.3","I hope this helps.  ``` java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:322)     at scala.None$.get(Option.scala:320)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$74$$anonfun$33.apply(IssuesController.scala:335)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$74$$anonfun$33.apply(IssuesController.scala:335)     at scala.Option.getOrElse(Option.scala:120)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$74.apply(IssuesController.scala:335)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1$$anonfun$apply$74.apply(IssuesController.scala:318)     at scala.Option.map(Option.scala:145)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1.apply(IssuesController.scala:318)     at app.IssuesControllerBase$$anonfun$app$IssuesControllerBase$$handleComment$1.apply(IssuesController.scala:315)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at app.IssuesControllerBase$class.app$IssuesControllerBase$$handleComment(IssuesController.scala:315)     at app.IssuesControllerBase$$anonfun$14.apply(IssuesController.scala:152)     at app.IssuesControllerBase$$anonfun$14.apply(IssuesController.scala:151)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1$$anonfun$apply$14.apply(Authenticator.scala:143)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1$$anonfun$apply$14.apply(Authenticator.scala:143)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:150)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:148)     at scala.Option.map(Option.scala:145)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:148)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:147)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.ReadableUsersAuthenticator$class.util$ReadableUsersAuthenticator$$authenticate(Authenticator.scala:147)     at util.ReadableUsersAuthenticator$$anonfun$readableUsersOnly$1.apply(Authenticator.scala:143)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraBase$$anonfun$2$$anonfun$apply$4.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:309)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) ``` ","false","invalid"
"data.h2.db file locked when upgrading from Gitbucket 2.2 to 2.3","I am running the following:  ``` Gitbucket: 2.2.1 OS: Windows 7 64bit Java: OpenJDK 1.7.0-67 Java Web Container: Jetty 8.1.9 ```  To upgrade, 1. Download the latest gitbucket.war 2.3 release 2. Stop existing jetty process 3. Run jetty process with command line pointing to gitbucket.war v2.3  When I access GitBucket, I see error 500. Running jetty manually produce the following error  ``` org.h2.message.DbException: IO Exception: ""java.io.IOException: The process cann ot access the file because another process has locked a portion of the file""; ""C :/Users/ep/.gitbucket/data.h2.db"" [90031-180] ```  Full stack trace available at https://gist.github.com/anonymous/26b52aee04d7fa214f7f  This is odd because I have terminated all java.exe (Jetty) processes, before starting up Jetty again with the upgraded Gitbucket war. I manage to replicate the error when I stop and start the process. The error mysteriously went away just when I fire up `ProcMon` to try to identify what is locking the H2 database file.  ","false",
"ダウンロードしたZIP内の日本語ファイル名が文字化けする","Windows環境なのですが、「Download ZIP」で落としてきたZIPの中の日本語のファイル名が文字化けしてしまいます。git cloneでリポジトリを取ってくると大丈夫なのですが。  「Download ZIP」でも日本語ファイル名が文字化けしないように出来ますでしょうか。 ","false","question"
"Change to show a shortcut path of the directory whose ancestors have only one child directory.","Change to show a shortcut path of the directory whose ancestors have only one child directory like GitHub. Now, we can be able to access files in deep Java and Scala package. ","true","feature"
"branch master should not be required to exist","When I create a repo in gitbucket that has one single branch, with other name than `master`, it causes problems during clone:  ``` $ git clone http://myrepo:8080/git/mygroup/catalog.git Cloning into 'catalog'... remote: Counting objects: 397358, done remote: Finding sources: 100% (397358/397358) remote: Getting sizes: 100% (179684/179684) remote: Total 397358 (delta 198041), reused 397358 (delta 198041) Receiving objects: 100% (397358/397358), 82.85 MiB | 26.77 MiB/s, done. Resolving deltas: 100% (198041/198041), done. Checking connectivity... done. warning: remote HEAD refers to nonexistent ref, unable to checkout. ```  It seems that all data arrive, only the checkout fails. So the workarround is simple:  ``` git checkout anExistingBranch ```  I suppose that this can be caused by failing to set `HEAD` to the first branch that arrives into repo; I suspect that gitbucket currently assumes it is always named `master`. ","false","bug"
"indentation lost in code when displayed after clicking commit message","When I click a commit message, the the code is shown, but the indentation is lost. This makes code harder to read or even invalid (Python).  ","false",
"New issue UI",,"false","improvement"
"Split, side by side diffs","Hi,  Would love to have this in gitbucket: https://github.com/blog/1884-introducing-split-diffs  Any chance? ","false","feature"
"New Feature: Use Virtual File System with S3 Driver for Heroku Persistance ","It looks like it should be pretty easy to modify all `java.io.File` references to be created from [org.apache.commons.vfs2.FileObject](http://commons.apache.org/proper/commons-vfs/apidocs/index.html?org/apache/commons/vfs2/FileObject.html) instances, and thereby gain the ability to run GitBucket on Heroku with persistence provided by AWS S3.  vfs-s3 - [Amazon S3 driver for VFS](http://code.google.com/p/vfs-s3/) &ndash; in concert with [Apache Commons Virtual File System](http://commons.apache.org/proper/commons-vfs/) ","false","feature"
"can't start v2.3 on tomcat7/8","i deployed gitbucket v2.3 on tomcat 8 (debian wheezy-backports package). i just can't start it. catalina log is like this:  ``` 04-Sep-2014 10:45:45.747 INFO [http-nio-8080-exec-18] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time. 04-Sep-2014 10:45:49.199 SEVERE [http-nio-8080-exec-18] org.apache.catalina.core.StandardContext.startInternal Error listenerStart 04-Sep-2014 10:45:49.200 SEVERE [http-nio-8080-exec-18] org.apache.catalina.core.StandardContext.startInternal Context [/gitbucket] startup failed due to previous errors 04-Sep-2014 10:45:49.224 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesJdbc The web application [/gitbucket] registered the JDBC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. 04-Sep-2014 10:45:49.225 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.228 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.229 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.230 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.232 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.233 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.234 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.236 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.237 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-9] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) 04-Sep-2014 10:45:49.239 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-10] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Object.wait(Native Method)  org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:568) ```  i have no success with tomcat 7 too:  ``` Sep 04, 2014 10:58:27 AM org.apache.catalina.core.StandardContext startInternal SEVERE: Error listenerStart Sep 04, 2014 10:58:28 AM org.apache.catalina.core.StandardContext startInternal SEVERE: Context [/gitbucket] startup failed due to previous errors Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc SEVERE: The web application [/gitbucket] registered the JDBC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-1] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-2] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-3] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-4] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-5] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-6] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-7] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-8] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-9] but has failed to stop it. This is very likely to create a memory leak. Sep 04, 2014 10:58:28 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads SEVERE: The web application [/gitbucket] appears to have started a thread named [DefaultQuartzScheduler_Worker-10] but has failed to stop it. This is very likely to create a memory leak.  ``` ","false","question"
"Use a shebang (#!/bin/sh) to run sbt.sh","If no shebang provided in a shell file, it will be executed by default shell.  However this script is not compatible with Fish Shell, so use sh to execute it. ","true","improvement"
"リポジトリトップに表示されるREADME.mdにて、同一リポジトリ内*.mdファイルへのリンクがNot Foundになる","README.md内に次のように同一リポジトリ内の*.mdファイルへのリンクを記述します。  ``` [description](description.md) ```  このとき、リポジトリトップに表示されるREADME.mdでは、そのリンク先が「Not Found」になります。 README.mdファイルを開いた状態では上記リンクは問題なく開けます。  GitHubではそのようなことがないので、同じ動作になって欲しいです。  例） masaru-b-cl/introduction-to-vcs https://github.com/masaru-b-cl/introduction-to-vcs ","false","improvement"
"Gitbucket can't remove people from an exsisted group ?","When I remove people from an exsisted group, it did not work.  version: 2.3 ","false","question"
"RSS feed items have pointless titles","Looking at the RSS-feed of the dashboard I see entries such as ""push"", ""push"", ""close_issue"", ""open_pullreq"".  These entries should be named like the items on the dashboard: - userX pushed to master at userX/projectfoo - userX opened pull request userY/projectbar#1  Maybe the messages should be shortened a bit, though. For me Firefox is able to display around 50+ characters of the title before replacing the rest with ellipses.  ","false","improvement"
"Refactored the title of feed.","I was refactoring title format of feed. I hope that merge to your master branch. ","true","improvement"
"Apach proxy error occured, when existing big diff between branches.","GitBucket2.2.1 is running on Tomcat8 via Apache2.2.15 on CentOS6.5.  I want to create new pull request. But Apach proxy error occured when opening diff page. I thought that the cause is existing too many (about 1500) commit between branches.  browser say  ``` Proxy Error The proxy server received an invalid response from an upstream server. Reason: Error reading from remote server ``` ","false","duplicate,improvement"
"Localization and mysql system support","This project is cool and thanks everyone,Here are some of my wishes for the project: 1) use mysql system:All settings can be saved in DB and  can  set password username port DBname on the administrator  panel 2) set the project path which one we uploaded ------- now if in Windows all projects in C:\users\xxxx I want to can set path in panel because sometimes system partition pace is getting smaller and easier to lose. 3)Globalization Support: String on the site can support global languages ​​such as Chinese Japanese and so on. ","false","duplicate"
"Branch access controll","I want branch access control feature like Gitolite on gitbucket. I'm glad if you'll consider it. thank you. ","false","feature,plugin"
"Jetty tmp files getting deleted","If Gitbucket is run for a significant time with embedded Jetty at some point UI fails to load web resources because they get deleted by standard linux /tmp cleanup job. It takes Gitbucket restart to make it function normally which does not seem like the right behavior.  Note, similar issues are reported / discussed by other projects using Jetty - http://www.rudder-project.org/redmine/issues/4473  Perhaps the right solution would be to change the directory for extracting Jetty resources? Seems like it could be reasonable to use a subdir in Gitbucket home directory... ","false","improvement"
"option to make (generated) html available in wiki","Hi,  It would be great if generated documentation from tools like Doxygen, Roxygen or Sphinx could be made available in the wiki. This seems to be possible in Github [1, 2]. Can it be done with Gitbucket too?  Thanks and keep up the good work!!  Albert-Jan  [1] http://blog.transifex.com/post/31979487717/hosting-sphinx-on-github [2] http://daler.github.io/sphinxdoc-test/includeme.html ","false","feature"
"Will GitBucket support deploy keys?","Can I setting the read-only deploy keys for a project? So I can pull the repo from a server. ","false","feature"
"java.lang.NoClassDefFoundError: com/sun/net/ssl/internal/ssl/Provider","GitBucket tries to access to the JDK implementation specific internal class com/sun/net/ssl/internal/ssl/Provider which is not available everywhere and causes NoClassDefFoundError. It should be guarded and disable this functionality if it's not available. ","false","improvement"
"Some buttons are not responding","In Firefox (where I do have some privacy plugins like Ghostery, Noscript, AdBlock installed but they should be disabled on my site), the following buttons do not respond: - ""Click to create a pull request for this comparison"" has never worked (it's working in Chromium) - ""Edit"" to select branches for new pull request has only worked once or twice (works in Chromium) - the login button on the front page (next to the news list) doesn't work in Firefox, nor in Chromium  Does anyone know why the buttons on the pull-request page are that problematic?  With my limited JS knowledge, I was able to locate the following code  ```   $('#show-form').click(function(){     $(this).hide();     $('#pull-request-form').show();   }); ```  When I execute in the JS console `$('#show-form')`, I retrieve the button for creating the pull request. When I execute `$('#pull-request-form').show()`, then the form is shown (which doesn't happen when clicking it). It appears, that somehow the code to install this handler is never executed.  I noticed that the JS code inside the HTML file is after the closing `</body></html>` tag. Is this legal? ","false","improvement"
"Show the copy button only when flash is available","refs #470   If flash is not available, should not show the copy button like GitHub. ","false","improvement"
"Why is flash required?","When I browse to a repository page, Firefox asks me whether I want to enable flash plugin for the page. Why is Flash required? Is there a way to disable it? ","false","question"
"Not able to login persistently on Firefox","In a local instance, I am able to login correctly using Chromium version 36.  But I am not able to login using Firefox 31.0. The password gets accepted and lasts for one-screen. But as soon the second page is navigated to, it asks for the sign-in form again.  Are the login cookies being set through some funky mechanism? I am using NoScript in Firefox. I am also using HTTPSwitchBoard in Chromium. ","false","question"
"Pushing via SSH results in commit listed by wrong user","I created two users for testing (A and B). Then I used ssh access to checkout a repo of user B. I added my local ssh key to user B. Then I did some modifications and pushed using ssh. The commit ended up being displayed coming from user A (who even shouldn't have access to the repo of user B).  What is maybe causing the problem is that the account on my machine has username that is the same as A (since that is my normal user name, and B is a dummy).  I checked that the remote of the local repository is `ssh://B@...`. ","false",
"Released tags should be sorted by taged time desc","![tags](https://lh4.googleusercontent.com/KA_zgB80wzQEbP17JVJozWAkFBlBOgqwJGXHb1fZbBKj4SDGm31Z7Ua7VJtRoY9T2N28n33gMhA=w1892-h843)  I am using gitbucket 2.1 ~ ","false","improvement"
"Icons' load time is slow.","Every little icon (for example: ""assets/common/images/file.png"") needs 1-2 s to load completely. The whole page's load time is severely slowdown by those little icons! ","false","task"
"Support Desktop in Clone","Support for `Desktop in Clone` by `github-windows://` and `github-mac://` protocol  (ssh & http)  ![clone in desktop](https://cloud.githubusercontent.com/assets/1309468/3890451/abb9de36-221e-11e4-9ca6-795391e645eb.png) ","true","feature"
"Scala based plugin system",,"false","feature"
"gitbucket have serious performance problems. ","gitbucket have serious performance problems.   Local to patch the connection pool #460 , on-line connection is not enough occurrence   Later positioning code, gitbucket achieve similar hibernate in the Open Session in View mode, the db session in the servlet filter.   While coding convenient, but there are a lot of internal and mixed use git, but git projects particularly when jgit read very slowly (5 ~ 10s +), then the database session will not be released, more than one person will use a full . .   Also: h2 can not do more monitoring, since the use of slick, it should choose more database support, such as support for mysql  Data:  project number: 150  Maximum commit: 13000 ","false","improvement"
"Search is very slow","The search function takes a long time to retrieve results. Is anyone else experiencing this? Should there be an indexing of some sort?  I'm running Gitbucket 2.2 on JRE 7 as a Win7 service (java -jar gitbucket.war) ","false","improvement"
"activities.atom displays the wrong datetime","There is a differenece  between an actually event time and published/updated time in gitbucket's feed.  (e.g.)  [GitBucket Top page(New Feed tab)] `root created root/test 2014-08-07 21:13:03`  [activities.atom]  ``` [...] <published>2014-08-07T09:13:03Z</published> <updated>2014-08-07T09:13:03Z</updated> [...] ```  publised and updated elements are defiend as `@datetimeRFC3339(activity.activityDate).` https://github.com/takezoe/gitbucket/blob/2.2-update/src/main/twirl/helper/feed.scala.xml#L16-L17  ``` <published>@datetimeRFC3339(activity.activityDate)</published> <updated>@datetimeRFC3339(activity.activityDate)</updated> ```  And, datetimeRFC3339 is defined in `helpers.scala`  https://github.com/takezoe/gitbucket/blob/2.2-update/src/main/scala/view/helpers.scala#L21  ``` def datetimeRFC3339(date: Date): String = new SimpleDateFormat(""yyyy-MM-dd'T'hh:mm:ss'Z'"").format(date).replaceAll(""(\\d\\d)(\\d\\d)$"",""$1:$2"") ```  It is should be `new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ssZ"")` ? - hh -> HH - 'Z' -> Z ","false","bug"
"Loss of response, applications don't crash, restart recovery","Jstack content is too large,   click on the Dropbox link https://www.dropbox.com/s/0324hfqcc2q9e33/7131.txt  Looks like database lock problem, TransactionFilter.scala code:  ``` scala Database(req.getServletContext) withTransaction { session => ```  Used in this way, Is it right? Didn't use connection pool? ","false","improvement"
"A click of a logo will generate an error.","# Target version  2.2 # Reappearance(repro)  Logo click. # StackTrace  java.lang.StringIndexOutOfBoundsException: String index out of range: 40     at java.lang.String.substring(String.java:1907)     at helper.html.activities$$anonfun$apply$1$$anonfun$apply$2.apply(activities.template.scala:83)     at helper.html.activities$$anonfun$apply$1$$anonfun$apply$2.apply(activities.template.scala:77)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)     at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)     at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186)     at helper.html.activities$$anonfun$apply$1.apply(activities.template.scala:77)     at helper.html.activities$$anonfun$apply$1.apply(activities.template.scala:60)     at scala.collection.immutable.List.map(List.scala:276)     at helper.html.activities$.apply(activities.template.scala:60)     at html.index$.apply(index.template.scala:26)     at app.IndexControllerBase$$anonfun$2.apply(IndexController.scala:35)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:724) ","false","duplicate"
"2.2 is hang-up after login","Although I tried the update to 2.2 from 2.1, but hung-up after login.   OS : CentOS release 6.4 (Final) JRE : /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java  Error:  java.lang.StringIndexOutOfBoundsException: String index out of range: 40     at java.lang.String.substring(String.java:1907)     at helper.html.activities$$anonfun$apply$1$$anonfun$apply$2.apply(activities.template.scala:83)     at helper.html.activities$$anonfun$apply$1$$anonfun$apply$2.apply(activities.template.scala:77)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)     at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)     at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)     at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186)     at helper.html.activities$$anonfun$apply$1.apply(activities.template.scala:77)     at helper.html.activities$$anonfun$apply$1.apply(activities.template.scala:60)     at scala.collection.immutable.List.map(List.scala:272)     at helper.html.activities$.apply(activities.template.scala:60)     at html.index$.apply(index.template.scala:26)     at app.IndexControllerBase$$anonfun$2.apply(IndexController.scala:35)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:270)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:265)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:264)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:74)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:68)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:178)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:68)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:240)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$8.apply(ScalatraBase.scala:238)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:238)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:237)     at scala.collection.immutable.Stream.flatMap(Stream.scala:462)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:237)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:193)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:55)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:26)     at servlet.PluginActionInvokeFilter$$anonfun$doFilter$1.apply(PluginActionInvokeFilter.scala:23)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.PluginActionInvokeFilter.doFilter(PluginActionInvokeFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:27)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:24)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1$$anonfun$apply$1.apply(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$$anonfun$withTransaction$1.apply(DatabaseComponent.scala:54)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)     at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withTransaction(DatabaseComponent.scala:54)     at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withTransaction(JdbcBackend.scala:61)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:24)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:745) ","false","bug"
"branch is merged into the master without permission when a file of branch has edit by online editor","1. create branch from master ( git co master; git co -b test1 ) 2. git push origin test1 3. edit file on test1 branch by online editor, and push 'commit change' button.  Then, when you check the file of the master, it has been changed. ","false","bug"
"Audit functionality?","Is there any audit functionality in GitBucket, or is it at least planned?  Unfortunately we are not allowed to install GitBucket without such audit support, and the Tomcat access logs are not considered useful. ","false","duplicate"
"Add tar.gz achive download function.","related to #421. ","true","feature"
"Remotely create repository","Hello, Is it possible to somehow create a repository from a remote machine? Perhaps with some well placed curl commands or similar? ","false","question"
"Position of the 'Test hook' button is misleading.","I thought the ""Test hook"" button to work like this: like this. 1. I enter url-1 in the text field, and I press the ""Test hook"" button. 2. Gitbucket send request to url-1. Gitbucket does not send request to URLs that already added . 3. I will return to the Service hook setting screen, and a value of text-field is url-1.  However Gitbucket work actually look like this:. 1. Gitbucket send request to URLs that already added . 2. Gitbucket does not send request to the URL entered in the text field. 3. Gitbucket discards the URL entered in the text field.  This misunderstanding has been caused by the position of the 'Test hook' button. I would expect that to the operations relating to the text field to some right next to the text field button. And rather than to change the position of the button, I hope that the operation is changed. Because, I think that is more easy to trial and error. ","false","improvement"
"Enhanced install script so it works under Ubuntu and Mac OS/X","See the README under contrib/.  If you like the install script, why not make it more visible, instead of buried under contrib/? ","true","task"
"ios fullscreen web app support","please add the following tag:  `< meta name=""apple-mobile-web-app-capable"" content=""yes"" >` So that it can be viewed as a web app and full screen on ipad ","false","feature"
"Notification on issue assignment","Github has started to send notification to those who are just assigned to an issue.  > You'll get a notification if an issue is assigned to you.  Source: https://github.com/blog/1866-the-new-github-issues ","false","improvement"
"Change blob view's table-layout property.","Fixed #423 ","true","bug"
"Can't close a issue via web commit.","I tried some commits online using close #1 fix #1 , but all failed! The issue number link is effective, but not close the corresponding issue.  Tried both on my own server(2.1) and the demo site ","false","question"
"Add a local file to repository","Currently, I can add a brant new file to repository. And edit it online. But sometime I need add a local file to repository via web interface. ","false","feature"
"add run script",,"true",
"new-line-code of file is changed to CRLF when I edit in online editor.","1. I commit README.md file. new-line-code is LF. and push to gitbucket 2. I edit README.md in gitbucket's online editer 3. I pull from gitbucket 4. new-line-code of README.md is CRLF  I want to keep new-line-code when i edit file in online editor. ","false","improvement"
"Dashboard pull requests count is wrong","![png](https://cloud.githubusercontent.com/assets/18655/3683718/f93361ba-12eb-11e4-961c-f6ccde412e76.png) ","false","bug"
"Command line Gitbucket displays correct?","probably..  STEP1  ``` git checkout -b ${pullreq.requestUserName}-${pullreq.requestBranch} ${pullreq.requestBranch}  ↓  git checkout -b ${pullreq.requestUserName}-${pullreq.requestBranch} ${pullreq.branch} ```  STEP2 is correct  ``` git pull ${requestRepositoryUrl} ${pullreq.requestBranch} ```  STEP3  ``` git checkout master git merge ${pullreq.requestUserName}-${pullreq.branch} git push origin ${pullreq.branch}  ↓  git checkout ${pullreq.branch} git merge ${pullreq.requestUserName}-${pullreq.requestBranch} git push origin ${pullreq.branch} ``` ","false","bug"
"show compare/pull request link near branch link.","it is very useful.  on branches page ![branches](http://i.gyazo.com/e3e0c296c9368899a4a46368d81767bd.png)  on tree page ![branch select](https://cloud.githubusercontent.com/assets/18655/3672090/816c3fb8-1259-11e4-8f95-5441d8ba2543.png) ![pull request](http://i.gyazo.com/1da03cf143ae39838f29fcac21913db1.png) ","false","improvement"
"gitbucket is slow","We throw gitbucket.war into tomcat on one of our servers. This app is obviously slower than others in the same tomcat instance, every click seems cost 1+ second to respond.    ","false","improvement"
"Why is commit count limited to 10001?","Just wondering why this, seemingly arbitrary number, is the limit for the commit count.  Thanks. ","false","question"
"Fix IE copy not working","on IE ZeroClipboard.min.js throws about 'Object doesn't support this property or method' error. looks this fixed in https://github.com/zeroclipboard/zeroclipboard/issues/204  I updated ZeroClipboard lib to v1.3.5 and tested in IE8, it looks good. ","true","improvement"
"Error happen when transferring repository","I've encountered following error when transferring repository ownership in setting screen.  https://gist.github.com/tune/45c9a2fcd01c8ce03987 ","false","bug"
"Show author as main commit user","When a committer is not a author, A github treats a author as a main commit user.  Large view type is ![large](https://cloud.githubusercontent.com/assets/18655/3611413/76e92d26-0d9a-11e4-817b-c0d5f4b55f9a.png) https://github.com/felixge/node-formidable/commit/0a0b150668daa3c6f01626d2565b898e5da12392  Small view type is  ![small](https://cloud.githubusercontent.com/assets/18655/3611410/6f286e94-0d9a-11e4-8d49-cbef14220d43.png) https://github.com/felixge/node-formidable/compare/v1.0.2...master ","false","improvement"
"Don't work delete branch button when branch name include '#'","need url escape?  ![png](https://cloud.githubusercontent.com/assets/18655/3597257/a7ab1d32-0ccf-11e4-8a16-d77aa6b74493.png) ","false","bug"
"include branch name on pull request merge message.","Gitbucket's pull request commit message is   ``` Merge pull request #${issueId} from ${pullreq.requestUserName}/${pullreq.requestRepositoryName} ```  https://github.com/takezoe/gitbucket/blob/master/src/main/scala/app/PullRequestsController.scala#L159  But github commit message is probably,  ``` Merge pull request #${issueId} from ${pullreq.requestUserName}/${pullreq.branch} ```  For example https://github.com/takezoe/gitbucket/commit/33378c6464afccf1c436172e10b67d01471652f3  ``` Merge pull request #425 from okapies/fix-ldap-filter Filter by username explicitly ```  ( fix-ldap-filter is branch name )  Some tool expect merge message include branch name. For example https://github.com/mikoto20000/redmine_git_branch_hook ","false","bug"
"show only last changing commit in file view","i wonder if it is possible to only show the last commit that changed the particular file if a file viewed.  eg: lookling at src/main/java/HelloWorld.java should show ""12.07.2014 fix typo in HelloWorld"" instead of ""15.07.2014 change something in file xyz"" (the last commit to the repo but without touching HelloWorld.java).  thanks :) ","false","improvement"
"gitbucket in wrapper","i will run gitbucket in wrapper (http://wrapper.tanukisoftware.com/doc/english/download.jsp) it need a  gitbucket's mainclass (wrapper.java.mainclass=) could you tell me the mainclass's name ?  i try ""JettyLauncher"" ,but it not right. ","false","question"
"Information message from administrator",,"false","feature"
"Anchor position is off the correct position",,"false","bug"
"HTTP basic authentication","I recently used a script to get `curl` to create a whole bunch of GitBucket repositories (for a large class of students).  GitBucket is fairly easy to drive with curl, but authentication is annoying since we need to snag the session ID for a live session and submit it as a cookie.  Adding HTTP basic auth would make GitBucket more script-friendly.  Falling back to checking (and validating) the `Authorization` header after the existing session-based authentication checks should be enough. ","false","LDAP/SSO"
"Contributors on the repository viewer header",,"false","feature"
"Register Asciidoc-Renderer as a Plugin","How can I hook an additional AsciiDoc renderer associated with the `.adoc` and `.asciidoc` file extensions (like the one added and later removed in #288) with the new plugin system? ","false","feature"
"About how to backup data","I know in wiki and it says To upgrade GitBucket, only replace gitbucket.war. All GitBucket data is stored in HOME/.gitbucket………… but i can't understand HOME/.gitbucket I use xampp so it has tomcat 7.x and i install it in E:\ and i start tomcat and use it manger (http://192.168.1.100:8080/manager/) and add a new war is gitbucket.war upload it and use it very well and so cool but i don't know data save in where(my respository data)? who can help me because i can't understand “HOME/.gitbucket” and I want to know the clear path ,for example:E:\tomcat\  thanks and the Project is cool! ","false",
"Doesn't listen for http requests after a restart once ssh is enabled","It doesn't work with `ssh=true` and `ssh.port=29418` in gitbucket.conf. When I delete those two lines and restart it works again. Ssh does seem to work if I enable it through the web interface, but only until next restart.  I am using the latest gitbucket release and the following jvm:  ``` $ java -version openjdk version ""1.8.0_05"" OpenJDK Runtime Environment (build 1.8.0_05-b13) OpenJDK 64-Bit Server VM (build 25.5-b02, mixed mode) ``` ","false","question"
"Filter by username explicitly","Use filter when retrieve full name or mail address from LDAP server. Some LDAP instances require the user name filter explicitly. ","true","improvement"
"Unable to fork projects","After selected the fork action, the project won't get forked, instead nothing happens, and was forcing me to return back to the project index. GitBucket Version: 2.0.0 ","false","question"
"Broken markdown layout in blob view","![2014-07-02 23 53 00](https://cloud.githubusercontent.com/assets/748569/3457495/46bcfbe8-01f9-11e4-8d4b-06436c16b71f.png) ","false","bug"
"Make markdown looks like more GitHub","Before :   ![2014-06-28 1 07 03](https://cloud.githubusercontent.com/assets/748569/3433275/d4ad6dd4-007d-11e4-8ddc-8bc185ce24b0.png)  After :   ![2014-06-28 1 07 27](https://cloud.githubusercontent.com/assets/748569/3433278/dbeb8d2e-007d-11e4-8f97-e204fef6a41b.png) ","true","improvement"
"Propose a link to .tar.gz, not only .zip","Because [npm](https://www.npmjs.org/) can install packages (for nodejs) directly using a tarball file URL, it would be useful that a tarball URL could be alternative to the zip file.  See: [npm install](https://www.npmjs.org/doc/cli/npm-install.html)  ``` npm install <tarball url> ``` ","false","feature"
"Error occured when issue selected.","1 issue exists both opening list and closed list. I can watch issue in closed list. But error occured when issue in opening selected.  ``` java.util.NoSuchElementException: head of empty list     scala.collection.immutable.Nil$.head(List.scala:337)     scala.collection.immutable.Nil$.head(List.scala:334)     pulls.html.pullreq$$anonfun$apply$1.apply(pullreq.template.scala:63)     pulls.html.pullreq$$anonfun$apply$1.apply(pullreq.template.scala:31)     twirl.api.TemplateMagic$.defining(TemplateMagic.scala:23)     pulls.html.pullreq$.apply(pullreq.template.scala:31)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8.apply(PullRequestsController.scala:79)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8.apply(PullRequestsController.scala:75)     util.ControlUtil$.using(ControlUtil.scala:26)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7.apply(PullRequestsController.scala:75)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7.apply(PullRequestsController.scala:74)     scala.Option.map(Option.scala:145)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5$$anonfun$apply$6.apply(PullRequestsController.scala:74)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5$$anonfun$apply$6.apply(PullRequestsController.scala:71)     scala.Option.flatMap(Option.scala:170)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5.apply(PullRequestsController.scala:71)     app.PullRequestsControllerBase$$anonfun$5$$anonfun$apply$5.apply(PullRequestsController.scala:70)     util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:123)     util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$12.apply(Authenticator.scala:121)     scala.Option.map(Option.scala:145)     util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:121)     util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:120)     util.ControlUtil$.defining(ControlUtil.scala:14)     util.ReferrerAuthenticator$class.util$ReferrerAuthenticator$$authenticate(Authenticator.scala:120)     util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:115)     app.PullRequestsController.referrersOnly(PullRequestsController.scala:23)     app.PullRequestsControllerBase$$anonfun$5.apply(PullRequestsController.scala:70)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     app.ControllerBase.invoke(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     scala.Option.flatMap(Option.scala:170)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     scala.collection.immutable.Stream.flatMap(Stream.scala:446)     org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     app.ControllerBase.runRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:21)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:21)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:21)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:21)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:54)     servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     scala.slick.session.BaseSession.withTransaction(Session.scala:236)     scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database.withSession(Database.scala:38)     scala.slick.session.Database.withSession(Database.scala:46)     scala.slick.session.Database.withTransaction(Database.scala:58)     servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ``` ","false","question"
"Reverting a pull request","Implement feature similar to Gthub's revert pull request  https://help.github.com/articles/reverting-a-pull-request ","false","feature"
" Login error response 500","Detailed error:  ``` java HTTP ERROR 500 Problem accessing /signin. Reason:     Timeout trying to lock table ; SQL statement: update ""ACCOUNT"" set ""PASSWORD"" = ?, ""FULL_NAME"" = ?, ""MAIL_ADDRESS"" = ?, ""ADMINISTRATOR"" = ?, ""URL"" = ?, ""REGISTERED_DATE"" = ?, ""UPDATED_DATE"" = ?, ""LAST_LOGIN_DATE"" = ?, ""REMOVED"" = ? where ""ACCOUNT"".""USER_NAME"" = ? [50200-173] Caused by:  org.h2.jdbc.JdbcSQLException: Timeout trying to lock table ; SQL statement: update ""ACCOUNT"" set ""PASSWORD"" = ?, ""FULL_NAME"" = ?, ""MAIL_ADDRESS"" = ?, ""ADMINISTRATOR"" = ?, ""URL"" = ?, ""REGISTERED_DATE"" = ?, ""UPDATED_DATE"" = ?, ""LAST_LOGIN_DATE"" = ?, ""REMOVED"" = ? where ""ACCOUNT"".""USER_NAME"" = ? [50200-173]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     at org.h2.message.DbException.get(DbException.java:160)     at org.h2.command.Command.filterConcurrentUpdate(Command.java:281)     at org.h2.command.Command.executeUpdate(Command.java:237)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)     at scala.slick.driver.BasicInvokerComponent$UpdateInvoker$$anonfun$update$1.apply(BasicInvokerComponent.scala:244)     at scala.slick.driver.BasicInvokerComponent$UpdateInvoker$$anonfun$update$1.apply(BasicInvokerComponent.scala:239)     at scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)     at scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)     at scala.slick.driver.BasicInvokerComponent$UpdateInvoker.update(BasicInvokerComponent.scala:239)     at service.AccountService$class.updateAccount(AccountService.scala:105)     at app.IndexController.updateAccount(IndexController.scala:7)     at service.AccountService$class.ldapAuthentication(AccountService.scala:43)     at service.AccountService$class.authenticate(AccountService.scala:20)     at app.IndexController.authenticate(IndexController.scala:7)     at app.IndexControllerBase$$anonfun$5.apply(IndexController.scala:38)     at app.IndexControllerBase$$anonfun$5.apply(IndexController.scala:37)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:442)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:662) Caused by: org.h2.jdbc.JdbcSQLException: Concurrent update in table ""ACCOUNT"": another transaction has updated or deleted the same row [90131-173]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     at org.h2.message.DbException.get(DbException.java:171)     at org.h2.message.DbException.get(DbException.java:148)     at org.h2.table.RegularTable.removeRow(RegularTable.java:364)     at org.h2.table.Table.updateRows(Table.java:438)     at org.h2.command.dml.Update.update(Update.java:144)     at org.h2.command.CommandContainer.update(CommandContainer.java:79)     at org.h2.command.Command.executeUpdate(Command.java:235)     ... 111 more Caused by:  org.h2.jdbc.JdbcSQLException: Concurrent update in table ""ACCOUNT"": another transaction has updated or deleted the same row [90131-173]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     at org.h2.message.DbException.get(DbException.java:171)     at org.h2.message.DbException.get(DbException.java:148)     at org.h2.table.RegularTable.removeRow(RegularTable.java:364)     at org.h2.table.Table.updateRows(Table.java:438)     at org.h2.command.dml.Update.update(Update.java:144)     at org.h2.command.CommandContainer.update(CommandContainer.java:79)     at org.h2.command.Command.executeUpdate(Command.java:235)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)     at scala.slick.driver.BasicInvokerComponent$UpdateInvoker$$anonfun$update$1.apply(BasicInvokerComponent.scala:244)     at scala.slick.driver.BasicInvokerComponent$UpdateInvoker$$anonfun$update$1.apply(BasicInvokerComponent.scala:239)     at scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)     at scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)     at scala.slick.driver.BasicInvokerComponent$UpdateInvoker.update(BasicInvokerComponent.scala:239)     at service.AccountService$class.updateAccount(AccountService.scala:105)     at app.IndexController.updateAccount(IndexController.scala:7)     at service.AccountService$class.ldapAuthentication(AccountService.scala:43)     at service.AccountService$class.authenticate(AccountService.scala:20)     at app.IndexController.authenticate(IndexController.scala:7)     at app.IndexControllerBase$$anonfun$5.apply(IndexController.scala:38)     at app.IndexControllerBase$$anonfun$5.apply(IndexController.scala:37)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:442)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:662) Powered by Jetty://                 ``` ","false","question"
"Wiki doesn't clone using the button of a clipboard.","ver2.0 using  1.go on Wiki page 2.[copy to clipboard]     push the button of a clipboard  3.messaged [copied!] 4.paste the path 5.path is not wiki repository    return the own repository path.    http://servername:8080/user/repository.git  ex)output html src/main/twirl/wiki/page.scala.html  [Clone this wiki locally] read only path is  right. id[repository-url] http://servername:8080/user/repository.wiki.git   id [repository-url-copy] http://servername:8080/user/repository.git ","false","bug"
"HTTPS issue","there seems to be a major issue, the server hangs with  ``` 2014-06-24 04:08:16.658:INFO:oejs.Server:jetty-8.y.z-SNAPSHOT 2014-06-24 04:08:16.710:INFO:oejw.WebInfConfiguration:Extract jar:file:/gitbucket/gitbucket.war!/ to /tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp 2014-06-24 04:08:22.406:INFO:oejw.StandardDescriptorProcessor:NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/WEB-INF/lib/slf4j-jdk14-1.6.4.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/WEB-INF/lib/logback-classic-1.0.13.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory] Null identity service, trying login service: null Finding identity service: null 2014-06-24 04:08:22.794:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/gitbucket/gitbucket.war 2014-06-24 04:08:22.795:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/gitbucket/gitbucket.war 2014-06-24 04:08:24.761:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/gitbucket/gitbucket.war Jun 24, 2014 4:08:25 AM grizzled.slf4j.Logger info INFO: Initializing life cycle class: ScalatraBootstrap 2014-06-24 04:08:25.959:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/gitbucket/gitbucket.war 2014-06-24 04:08:25.963:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/gitbucket/gitbucket.war 2014-06-24 04:08:26.012:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8080 Jun 24, 2014 4:09:19 AM org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration run INFO: Trying to register BouncyCastle as a JCE provider Jun 24, 2014 4:09:19 AM org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration run INFO: Registration succeeded ```  If I set my base URL to https:// This just started to happen in 2.0 ","false","question"
"A member is not assigned at the time of issue registration.","## Environment ### Client  Windows7 Pro SP1 64bit Chrome Version 35.0.1916.153 m IE11 Version 11.0.9600.17126 ### Server  CentOS release 6.4 (Final) java version 1.7.0_25 OpenJDK Runtime Environment (rhel-2.3.10.4.el6_4-x86_64) OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)  nginx version: nginx/1.4.4 apache-tomcat-7.0.42 ## Reappearance procedure  1.Open New Isses view. ![1](https://cloud.githubusercontent.com/assets/2434805/3365950/f037937a-fb39-11e3-90ca-5018e0023d62.png)  2.Input content & select assigned 3.Click ""Submit new issue"" ![2](https://cloud.githubusercontent.com/assets/2434805/3365953/0a43164a-fb3a-11e3-9362-05be87fbcb40.png)  4.The member who assigned is cleared.![3](https://cloud.githubusercontent.com/assets/2434805/3365960/34e9ac56-fb3a-11e3-8dcb-e37d90f5457c.png)  5.It is the same even if it returns to a list. ![4](https://cloud.githubusercontent.com/assets/2434805/3365990/f669d018-fb3a-11e3-9667-ead4e9548788.png)  *Selection of Milestone is not related. ","false","bug"
"Show news feed of a private repository to members","Fixes #401 . ","true","improvement"
"Can't deploy with gitbucket.war(v2.0)","When deploy gitbucket.war (v2.0) in tomcat7 get ""error in opening zip file"" but it's OK for v1.13, maybe there are some problems when packaging this war file for v2.0. ","false","question"
"Error deleting repository","I am using GitBucket 2.0 and tried to delete a repository. Results in an HTTP 500 error  ```     Unable to delete file: C:\Users\ep\.gitbucket\repositories\user1\hanxue-debug.git\objects\pack\pack-77a7330a1fa2e4d7c170dd144cd3987185ebc9ae.pack ```  When I check on the server, the file's permission looks normal. Gitbucket is run using the account ""ep"", which has Administrative access on the server.   ![screen shot 2014-06-20 at 5 55 17 pm](https://cloud.githubusercontent.com/assets/760008/3338809/05e59be4-f861-11e3-8b7d-f27c5bebd4a0.png)  When I check the GitBucket account again, the repository still exist but content is empty.   ![screen shot 2014-06-20 at 5 57 05 pm](https://cloud.githubusercontent.com/assets/760008/3338949/2bf80fa4-f863-11e3-8d67-e7558ffd85cb.png) #### GItBucket server details  Gitbucket version: 2.0 Java version:  ""1.7.0-u45-unofficial"" OpenJDK Runtime Environment (IcedTea 2.4.3) (Debian build 1.7.0-u45-unofficial-b 31) OpenJDK 64-Bit Server VM (build 24.45-b08, mixed mode) Jetty: 8.1.9.v20130131 (Jetty-runner) OS: Windows 7 Professional SP1 (x64) ","false","bug"
"Move thirdparty JavaScript into vendors/","Because linguist ignores `vendors/*`. ","false","task"
"Remove deprecated Ant 'rename' task.",,"true","improvement"
"Use Octicons in gitbucket","[Octicons](http://octicons.github.com/) is now released by Github, it would be cool to  use them in gitbucket. ","false","improvement"
"Home page open very slowly","The upgraded version 2.0 ( previous versions are also slower ) Home page opened very slowly, I think it is a problem loading feed . .  We actually use a lot of users and projects. . Many people use 3s above reaction load Home page  Will throw an error concurrent large :  ``` java HTTP ERROR 500  Problem accessing /. Reason:      repository not found: /root/.gitbucket/repositories/of1009/qm.git Caused by:  org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: /root/.gitbucket/repositories/of1009/qm.git     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:575)     at org.eclipse.jgit.api.Git.open(Git.java:113)     at org.eclipse.jgit.api.Git.open(Git.java:97)     at util.JGitUtil$.getRepositoryInfo(JGitUtil.scala:138)     at service.RepositoryService$$anonfun$getVisibleRepositories$5.apply(RepositoryService.scala:198)     at service.RepositoryService$$anonfun$getVisibleRepositories$5.apply(RepositoryService.scala:196)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     at scala.collection.immutable.List.foreach(List.scala:318)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)     at scala.collection.AbstractTraversable.map(Traversable.scala:105)     at service.RepositoryService$class.getVisibleRepositories(RepositoryService.scala:196)     at app.IndexController.getVisibleRepositories(IndexController.scala:7)     at app.IndexControllerBase$$anonfun$3.apply(IndexController.scala:24)     at app.IndexControllerBase$$anonfun$3.apply(IndexController.scala:20)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250) at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21) at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:662) ``` ","false","improvement"
"Home page open very slowly","The upgraded version 2.0 ( previous versions are also slower ) Home page opened very slowly, I think it is a problem loading feed . .  We actually use a lot of users and projects. . Many people use 3s above reaction load Home page  Will throw an error concurrent large :  ``` java HTTP ERROR 500  Problem accessing /. Reason:      repository not found: /root/.gitbucket/repositories/of1009/qm.git Caused by:  org.eclipse.jgit.errors.RepositoryNotFoundException: repository not found: /root/.gitbucket/repositories/of1009/qm.git     at org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:575)     at org.eclipse.jgit.api.Git.open(Git.java:113)     at org.eclipse.jgit.api.Git.open(Git.java:97)     at util.JGitUtil$.getRepositoryInfo(JGitUtil.scala:138)     at service.RepositoryService$$anonfun$getVisibleRepositories$5.apply(RepositoryService.scala:198)     at service.RepositoryService$$anonfun$getVisibleRepositories$5.apply(RepositoryService.scala:196)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     at scala.collection.immutable.List.foreach(List.scala:318)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)     at scala.collection.AbstractTraversable.map(Traversable.scala:105)     at service.RepositoryService$class.getVisibleRepositories(RepositoryService.scala:196)     at app.IndexController.getVisibleRepositories(IndexController.scala:7)     at app.IndexControllerBase$$anonfun$3.apply(IndexController.scala:24)     at app.IndexControllerBase$$anonfun$3.apply(IndexController.scala:20)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250) at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21) at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:662) ``` ","false",
"2.0 pull requests yous count number display error","The upgraded 2.0 version , I pull requests have two open, but yours count shows zero:  ![pullrequests](https://cloud.githubusercontent.com/assets/75619/3280588/f6622896-f46d-11e3-82fd-68dceee8bc6e.jpg) ","false","bug"
"2.0 My Page , styles overlap","The upgraded 2.0 version:   ![2014-06-14 4 37 46](https://cloud.githubusercontent.com/assets/75619/3280569/be515e96-f46c-11e3-9ccf-d9a5c9134498.png) ","false","improvement"
"Pull request for empty commit",,"false","improvement,invalid"
"Run Error: Invalid or corrupt jarfile gitbucket.war","Startup Error 1.12 version is good. Upgrade 1.13 and 2.0 java-jar gitbucket.war will throw an error : Invalid or corrupt jarfile gitbucket.war  What is the reason . . ","false","question"
"Launch GitBucket blog using Jekyll on Github Pages",,"false","task"
"News feed of a private repository is not shown to a member","News feed of a private repository is not shown to a member, this would make what happened in a private repository less visible to members. ","false","improvement"
"More conditions for searching issues","Like in https://help.github.com/articles/searching-issues . Personally needed most is searching by assignee, to better review everyone's work.  I would possibly create a PR for it if it's OK. ","false","feature"
"BaseURL will not allow port to be specified","When turning on SSH access for an internal project, I needed to also specify baseURL, this field does not allow ports to be specified so the system attempts to access pages at [baseurl]/admin for example. This is occuring when running gitbucket with default settings, only turning on SSH and setting baseURL to be the IP:PORT ","false","question"
"Bad html layout in mobile browser","![screenshot_2014-06-08-23-17-47](https://cloud.githubusercontent.com/assets/4344879/3211565/4f55dfae-ef20-11e3-82dd-fa27ee1b17c4.png)  Umm...self-explainatory? ","false","feature"
"[OpenShift] Weird problems after rebooting OpenShit instance","I'm trying to deploy GitBucket to my little free OpenShift account, everything worked fine until I decided to reboot my instance -- it will redirect me to my to the home directory of GitBucket like this: ![ss 2014-06-08 at 06 29 51](https://cloud.githubusercontent.com/assets/4344879/3211009/0d428fcc-eef8-11e3-9921-0ee3ba2a5004.png)  Here is my repo, which is only runnable in DIY cartridge: http://puu.sh/9k6cB/e324730878.zip  Can someone really help me out? I really wanted to run GitBucket on Heroku or OpenShift.... ","false","question"
"Syntax highlight does not apply when update comment","![2014-06-06 22 06 16](https://cloud.githubusercontent.com/assets/748569/3200361/7dc0e5ec-ed7b-11e3-9ca6-ae253d5c283e.png) ![2014-06-06 22 06 25](https://cloud.githubusercontent.com/assets/748569/3200362/7dc3297e-ed7b-11e3-8313-067a509e1e5d.png) ![2014-06-06 22 06 35](https://cloud.githubusercontent.com/assets/748569/3200363/7dc42fea-ed7b-11e3-9e15-552f9b832d40.png) ","false","bug"
"Code search omits some important results","It appears that the search functionality does not include all relevant results.  Steps to reproduce the problem - 1. Pick some string composed of letters `some_string` 2. Create a file that includes it both ""as is"" (`some_string`) and as a part of a URL (`www.example.com/some_string`) 3. Try searching for two versions of the string (`some_string` and `/some_string`) 4. Observe that the string ""as is"" is not getting found within URLs, while the second version (with leading `/`) is found  This is just one example of missing search results, but I can imagine there would be more based on the similar root cause. Missing results make the search dangerous to rely on. ","false","improvement"
"Create branch from Web UI","In Github, we can create a new branch from the search box in the branch selector.  ![2014-06-06 0 38 26](https://cloud.githubusercontent.com/assets/1094760/3189793/863b1ddc-ecc7-11e3-88dc-ff13ca7f2203.png) ","false","feature"
"Disregard this issue","Sorry! Please disregard! ","false","invalid"
"GitHub Compare View","It would be excellent to have a feature similar to what GitHub offers - https://github.com/blog/612-introducing-github-compare-view  Additionally it would be nice to be able to compare a file with an entirely different file (not just a different version). This could be helpful for projects that include multiple versions of the same file, e.g used as various config templates, etc. ","false","feature"
"rename and delete user","I want to correspond to the misspelling at the time of registration. ","false","improvement"
"Fix nested tags.","ナビゲーションバーとフォームのタグがネストしていたので修正しました。 ","true","bug"
"Submodules & symbolic links need better UI","We are using Gitbucket to manage several interdependent projects.  Some projects are added to others as submodules with commands like this `git submodule add ssh://<gitbucket_url>.git sub_name` . After that, top-level modules ""import"" submodule code by using symbolic links to directories, e.g `../../interfaces`  The problem is with how these submodules and symlinks are seen via the UI, specifically - 1. **Submodules**: SSH URLs are dumped ""as is"", making them not clickable. Instead they should be converted into properly clickable HTTP URLs, at the very least for local projects hosted in the same Gitbucket instance. 2. **Symlinks**: Symlink files are treated like plain text files that simply show their path when clicked. Instead, the symlinks to directories should be displayed as directories, clicking which should traverse the path and land in the correct folder (which could be within either a submodule or the main project).  Current code works fine for command line git operations, however the UI does not represent the repository content very intuitively and ought to be improved. ","false","improvement"
"Line selecting bugs","1. It causes text selection with the shift click.        ![ekran grnts 2014 05 31 11_21_11](https://cloud.githubusercontent.com/assets/844008/3138574/96b7a772-e89c-11e3-8a57-2f3f61c01318.png) 2. Pressing high number first doesn't work. 3. Pressing the number shouldn't move the viewport to there. I.e. no automatic scroll should happen.  P.S. I'm using firefox. ","false","bug,wontfix"
"Tab expansion","Right now tab character in the source code (e.g. Java) is being expanded to 8 spaces in the code view screen. This seems quite excessive, especially if the code has a mix of tabs characters and spaces (corresponding to 4 spaces per tab).  It should be possible to configure the number of spaces to expand the tabs to or at least have a more sensible default (1 tab = 4 spaces). ","false","improvement"
"Small cleanup using static analysis",,"true","improvement"
"Running behind Lighttpd causes error 411","Do you know if there is any way to fix this? I have been working for some time to see if there is a fix and I could not find anything. ","false","question"
"Can't access to GItBucket in spite of being alive Tomcat.","1. GitBucket1.13 is running on Tomcat8 via Apache2.2 on CentOS6.5. 2. GitBucket is runnning for several months without any problems.  3. Today, Apache returned 502 Proxy Error. 4. Tomcat's process was alive in server, but I can't access to GitBucket directly. 5. I try to kick Tomcat's `shutdown.sh`, but ConnectionError occurred. 6. So I kill Tomcat's process forcefully, and  start Tomcat, GitBucket is runnning now.  Is there a cause something? ","false","question"
"'New Issue' button behavior after start writing a new issue","I wish.. once start writing a new issue [New Issue] button turn into DISABLE or Linkto(#) like GitHub. I often lost written issues carelessly by clicking [New Issue] button instead of [Submit new issue] button. ( MacBook Air 11"" + Chrome, [Submit new issue] button hidden half ) ","false","improvement"
"Closing issues via commit messages - duplicate references from multiple branches","Now I'm not _completely_ sure if that's a bug or if I just missed a configuration step. Feel free to correct me if it's my fault somehow. 1. Create a repo with two branches, e.g. `master/development`. The `master` is the default branch. 2. Create an issue. 3. Close the issue in `development` branch with commit message. 4. Merge the `development` into `master` (and push to the gitbucket repo). 5. The issue will be closed, but it will also have duplicate reference messages attached to it. Looks like messages from both branches are included instead only from the default one...?  --- ### Edit:  Apparently, it only happens if you push two branches at once. If you push `development` first, you'll get the first commit reference attached to the issue. Then, if you wait a moment, merge it to `master` and then push `master` branch, the issue will only be automatically closed without another reference. ","false","bug"
"Transferring a private repository to a group","Is it already reported that, if you transferred your private repository to a group, the repository gets invisible to anyone.  With the root authority, you can find the repository has no collaborators. Even root cannot append a collaborator, so you can only delete the repository. ","false",
"Returns ""500 Too many open files"" when using H2 console","Starting H2 console or some operation on H2 console causes ""500 Too many open files"". So many `.gitbucket/gitbucket.conf` is opened by java process on error happening.  管理画面からH2コンソールを呼び出して操作していると上記ファイルオープンが大量発生してファイルディスクリプタがいっぱいになっているようです。 ","false","bug"
"Notification Email is not sent to user that registered issue.","I want GitBucket to send Notification Email to all user contain user that registered issue. ","false","question"
"Unable to re-open an accidentally-closed issue or pull request","## Steps to reproduce 1. Open an issue (such as a pull request). 2. Someone clicks the `Close` button accidentally. ## Expected results  There's a `Re-open` button. ## Actual results  There's no `Re-open` button, nor is the `Merge pull request` button available anymore.  A new issue/pull request must be opened. ","false","improvement"
"How to support multi-language?","I want to use the local language, but there seems to be no this setting.How to set up?Or provides an extensible function of language pack? ","false","duplicate"
"Improvement for repository viewer performance","too heavy, when many files are in a current directory. I'm using https://github.com/git/git for testing. ","false","improvement"
"Show merge commit detail","GitBucket commit viewer shows only commit message and author in case of merge commit. It's not github like behavior. ","false","improvement"
"Scala 2.11.0","- [ ] scalatra 2.3.0 http://notes.implicit.ly/post/88530357729/scalatra-2-3-0   - [ ] scalatra 2.3.x requires servlet 3.1 (tomcat 8.x and jetty9.x ?) - [ ] slick 2.1.0-M2 ( https://oss.sonatype.org/content/repositories/releases/com/typesafe/slick/slick_2.11/ ) - [x] scalatra-forms for Scala 2.11 https://github.com/takezoe/scalatra-forms ","false","task"
"Markdown preview in AceEditor",,"false","feature"
"Select lines by clicking line number in blob view",,"false","improvement"
"how do I turn on logging?","Hi,  First off: compliments for Gitbucket. Really great job! Yesterday we were configuring LDAP so we wanted to turn on logging (and possibly set the logging level). How can this be done, and where are the logs written?  Thanks a lot!  Albert-Jan Netherlands ","false","question"
"there is an attached number on the page (latest version 1.13)","![screenshot from 2014-05-15 15 18 47](https://cloud.githubusercontent.com/assets/1203912/2981270/f3b35e04-dc02-11e3-81cc-1c7b1b5ce343.png)  after setup the latest version gitbucket 1.13, I find there an attached number on front page, as I marked on the above picture. Please check.  I settup with bellow command:  <code> java -jar ./gitbucket.war --gitbucket.home=/home/hiler/Desktop/gitbucket/</code> ","false","bug"
"I hope support i18n.","I hope support i18n. Want to use the web services such as [Crowdin](https://crowdin.net/) ?  (\* I'm aware for #88.) Regards. ","false","improvement"
"Is webhook working correctly?","I've prepared simple web application that will dump webhook like [this](http://www.xmisao.com/2013/04/20/github-post-receive-webhook.html).  When I try to test gitbucket webhook, it display that 'Test payload deployed!' but there's no access log from gitbucket actually. Is webhook working correctly? If this is my fault, how can I trace the bug? ","false","question"
"Exception is thrown collaborator tries to fork.","I belong to the 'TestGroup' group. I tried to fork, exception is thrown.  HTTP ERROR 500 Problem accessing /gitbucket/TestGroup/test-repo/fork. Reason:  ``` Server Error ```  Caused by:  ``` org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: ""PRIMARY_KEY_8E ON PUBLIC.REPOSITORY(USER_NAME, REPOSITORY_NAME) VALUES ( /* key:459 */ 'teaplanet', 'test-repo', null, null, null, null, null, null, null, null, null, null)""; SQL statement: INSERT INTO ""REPOSITORY"" (""USER_NAME"",""REPOSITORY_NAME"",""PRIVATE"",""DESCRIPTION"",""DEFAULT_BRANCH"",""REGISTERED_DATE"",""UPDATED_DATE"",""LAST_ACTIVITY_DATE"",""ORIGIN_USER_NAME"",""ORIGIN_REPOSITORY_NAME"",""PARENT_USER_NAME"",""PARENT_REPOSITORY_NAME"") VALUES (?,?,?,?,?,?,?,?,?,?,?,?) [23505-173]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     at org.h2.message.DbException.get(DbException.java:171)     at org.h2.message.DbException.get(DbException.java:148)     at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:101)     at org.h2.index.PageBtree.find(PageBtree.java:121)     at org.h2.index.PageBtreeLeaf.addRow(PageBtreeLeaf.java:148)     at org.h2.index.PageBtreeLeaf.addRowTry(PageBtreeLeaf.java:101)     at org.h2.index.PageBtreeIndex.addRow(PageBtreeIndex.java:95)     at org.h2.index.PageBtreeIndex.add(PageBtreeIndex.java:86)     at org.h2.index.MultiVersionIndex.add(MultiVersionIndex.java:52)     at org.h2.table.RegularTable.addRow(RegularTable.java:125)     at org.h2.command.dml.Insert.insertRows(Insert.java:127)     at org.h2.command.dml.Insert.update(Insert.java:86)     at org.h2.command.CommandContainer.update(CommandContainer.java:79)     at org.h2.command.Command.executeUpdate(Command.java:235)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:87)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:84)     at scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)     at scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker.prepared(BasicInvokerComponent.scala:81)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker.insert(BasicInvokerComponent.scala:84)     at service.RepositoryService$class.createRepository(RepositoryService.scala:24)     at app.AccountController.createRepository(AccountController.scala:17)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37$$anonfun$apply$5$$anonfun$apply$mcV$sp$1.apply$mcV$sp(AccountController.scala:370)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37$$anonfun$apply$5$$anonfun$apply$mcV$sp$1.apply(AccountController.scala:365)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37$$anonfun$apply$5$$anonfun$apply$mcV$sp$1.apply(AccountController.scala:365)     at scala.Option.getOrElse(Option.scala:120)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37$$anonfun$apply$5.apply$mcV$sp(AccountController.scala:365)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37$$anonfun$apply$5.apply(AccountController.scala:358)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37$$anonfun$apply$5.apply(AccountController.scala:358)     at util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:30)     at util.LockUtil$$anonfun$lock$1.apply(LockUtil.scala:27)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.LockUtil$.lock(LockUtil.scala:27)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37.apply(AccountController.scala:357)     at app.AccountControllerBase$$anonfun$29$$anonfun$apply$37.apply(AccountController.scala:353)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:151)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1$$anonfun$apply$15.apply(Authenticator.scala:148)     at scala.Option.map(Option.scala:145)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:148)     at util.ReadableUsersAuthenticator$$anonfun$util$ReadableUsersAuthenticator$$authenticate$1.apply(Authenticator.scala:147)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.ReadableUsersAuthenticator$class.util$ReadableUsersAuthenticator$$authenticate(Authenticator.scala:147)     at util.ReadableUsersAuthenticator$class.readableUsersOnly(Authenticator.scala:142)     at app.AccountController.readableUsersOnly(AccountController.scala:17)     at app.AccountControllerBase$$anonfun$29.apply(AccountController.scala:353)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:442)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1486)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:540)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)     at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:201)     at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:317)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.eclipse.jetty.server.Server.handle(Server.java:445)     at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:268)     at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:229)     at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)     at java.lang.Thread.run(Thread.java:744) Powered by Jetty:// ``` ","false","bug,invalid"
"BugsEverywhere integration?","I use [BugsEverywhere](http://www.bugseverywhere.org/) for distributed issue tracking and I'm close to completing a Java interface to the underlying system.  It appears that issue tracking within GitBucket is broadly compatible with the BugsEverywhere format ... would anyone else be interested in seeing the database issue tracking replaced by distributed issue tracking?  What about a pluggable system where you could choose between back-end issue tracking systems? ","false","question"
"Update the features list in README.md","The version 1.12 release note announces the addition of the SSH protocol for repository access, but the feature list still states ""Public / Private Git repository (http access only)"". ","true",
"Anchors in wiki pages","Raw anchors in wikis doesn't stay raw when converting to HTML.  For example,  ``` [text](#header-here) ```  becomes something like this in the final document:  ``` http://bla.bla.bla.bla#header-here ```  The `http://bla.bla.bla.bla` points to a wrong URL.  Markdown converter should keep this anchors unmodified. They are useful for TOC. ","false","bug"
"failed upgrade 1.10 - 1.13","I just redeployed gitbucket to a tomcat 7.0.50 server. with the latest war (was on 1.10 which worked fine, deploying 1.13).  My service data is mapped by configuration (not the default) in my init.d service script:  ``` JAVA_HOME=/usr/java/jdk1.7.0_51 export JAVA_HOME PATH=$JAVA_HOME/bin:$PATH export PATH export CATALINA_HOME=/home/tomcat/servers/apache-tomcat-7.0.50 export CATALINA_OPTS=""-server -Xms4g -Xmx8g -XX:MaxPermSize=512m"" export JENKINS_HOME=/home/tomcat/service_data/jenkins export GITBUCKET_HOME=/home/tomcat/service_data/gitbucket export ARTIFACTORY_HOME=/home/tomcat/service_data/artifiactory export FINDBUGS_HOME=/usr/local/libexec/findbugs ```  It fails without really saying why.  Is this version expected to work in tomcat 7?  ``` May 06, 2014 1:43:57 PM org.apache.catalina.startup.HostConfig deployWAR INFO: Deploying web application archive /home/tomcat/servers/apache-tomcat-7.0.50/webapps/gitbucket.war SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/home/tomcat/servers/apache-tomcat-7.0.50/webapps/gitbucket/WEB-INF/lib/logback-classic-1.0.13.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/home/tomcat/servers/apache-tomcat-7.0.50/webapps/gitbucket/WEB-INF/lib/slf4j-jdk14-1.6.4.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] 13:44:03.371 [localhost-startStop-2] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap May 06, 2014 1:44:03 PM org.apache.catalina.core.StandardContext startInternal SEVERE: Error listenerStart May 06, 2014 1:44:03 PM org.apache.catalina.core.StandardContext startInternal SEVERE: Context [/gitbucket] startup failed due to previous errors 13:44:03.699 [localhost-startStop-2] INFO  o.scalatra.servlet.ScalatraListener - Destroying life cycle class: ScalatraBootstrap May 06, 2014 1:44:03 PM org.apache.catalina.loader.WebappClassLoader clearReferencesJdbc SEVERE: The web application [/gitbucket] registered the JDBC driver [org.h2.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. ``` ","false","question"
"Error with empty atom feed: java.lang.UnsupportedOperationException: empty.max","To reproduce:  1) java -jar gitbucket.war 2) open localhost:8080 3) click the feed icon  Java.lang.UnsupportedOperationException: empty.max     at scala.collection.TraversableOnce$class.max(TraversableOnce.scala:216)     at scala.collection.AbstractTraversable.max(Traversable.scala:105)     at helper.xml.feed$.header$1(feed.template.scala:26)     at helper.xml.feed$.apply(feed.template.scala:43)     at app.IndexControllerBase$$anonfun$6.apply(IndexController.scala:51) ","false","duplicate"
"AceEditor themes / syntax highlighting","Could it be possible to pick a different theme for AceEditor or perhaps customize it?  I am more used to light background palettes and the current default looks quite jarring. Even speaking of defaults, if Gitbucket is aims to closely replicate Github perhaps it should use Github AceEditor theme as the default...  Ideally, it should be possible to let users/admins customize Ace themes / syntax highlighters, per their instructions: http://ace.c9.io/tool/mode_creator.html ","false","improvement"
"hide ""Create new account"" button when user not login.","I want to prevent creating account by non admin user. So, I want to hide ""Create new account"" button when user not login. I want GitBucket to be able to choose whether to display or hide ""Create new account"" button. ","false","question"
"Private items in the news feed","Currently, GitBucket provides a news feed that displays only public repo events. That is OK for nonauthenticated users. But when the users logs in, the news feed should include events from private repos, too (private repos that the user has access to).  Once this is implemented, I think news feed atom (not user profile atom) can work in similar way, too. ","false","duplicate,improvement"
"java.lang.UnsupportedOperationException: empty.max","### step 1. setup gitbucket 2. click the atom button of index page ( http://gitbucket.herokuapp.com/activities.atom ) ### environment - version 1.13  ``` java.lang.UnsupportedOperationException: empty.max     at scala.collection.TraversableOnce$class.max(TraversableOnce.scala:216)     at scala.collection.AbstractTraversable.max(Traversable.scala:105)     at helper.xml.feed$.header$1(feed.template.scala:26)     at helper.xml.feed$.apply(feed.template.scala:43)     at app.IndexControllerBase$$anonfun$6.apply(IndexController.scala:51)     at app.IndexControllerBase$$anonfun$6.apply(IndexController.scala:49)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:21)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:21)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:21)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:21)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:21)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:21)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:744) ``` ","false","bug"
"./sbt.sh package error Error: Could not find or load main class JettyLauncher","When I build gitbucket using `./sbt.sh package`, and then run the resulting war file `java -jar gitbucket.war`, I get this error  `Error: Could not find or load main class JettyLauncher` ","false","question"
"Display SSH URLs at first","The availability to access repositories by SSH is a fine feature. But in some pages, gitbucket displays HTTP's URL only or at first. Maybe, users who enable SSH access prefer web pages to display SSH URLs. ","true","improvement"
"Error occurred while sending notification email when 'BASE Url' is empty in System Settings","<--- Steps to reproduce --->  -- In System Settings - 'BASE Url' is empty. - In Notification email,    Check to Send notificasions and set all items appropriately.  -- Actions - Create a Issue by account A. - Comment to the issue by account B.  -- Results - An email is not sent from gitbucket system. - Logged Error message in Tomcat7's log file 'catalina.out' - After this error, I wrote 'BASE Url' and commented to the issue, the notification email was sent.  -- Log file 'catalina.out' below  18:54:25.927 [ForkJoinPool-1-worker-11] ERROR util.Mailer - Notifications Failed. java.lang.NullPointerException: null         at org.apache.catalina.connector.Request.getServletContext(Request.java:1662) ~[catalina-7.0.39.jar:7.0.39]         at org.apache.catalina.connector.RequestFacade.getServletContext(RequestFacade.java:1017) ~[catalina-7.0.39.jar:7.0.39]         at app.Context$$anonfun$path$1.apply(ControllerBase.scala:142) ~[Context$$anonfun$path$1.class:na]         at app.Context$$anonfun$path$1.apply(ControllerBase.scala:142) ~[Context$$anonfun$path$1.class:na]         at scala.Option.getOrElse(Option.scala:120) ~[scala-library.jar:na]         at app.Context.path$lzycompute(ControllerBase.scala:142) ~[Context.class:na]         at app.Context.path(ControllerBase.scala:142) ~[Context.class:na]         at view.LinkConverter$class.convertRefsLinks(LinkConverter.scala:32) ~[LinkConverter$class.class:na]         at view.GitBucketHtmlSerializer.convertRefsLinks(Markdown.scala:81) ~[GitBucketHtmlSerializer.class:na]         at view.GitBucketHtmlSerializer.visit(Markdown.scala:132) ~[GitBucketHtmlSerializer.class:na]         at org.pegdown.ast.TextNode.accept(TextNode.java:51) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.visitChildren(ToHtmlSerializer.java:365) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.visit(ToHtmlSerializer.java:348) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ast.SuperNode.accept(SuperNode.java:43) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.visitChildren(ToHtmlSerializer.java:365) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.printTag(ToHtmlSerializer.java:377) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.visit(ToHtmlSerializer.java:162) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ast.ParaNode.accept(ParaNode.java:35) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.visitChildren(ToHtmlSerializer.java:365) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.visit(ToHtmlSerializer.java:91) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ast.RootNode.accept(RootNode.java:51) ~[pegdown-1.4.1.jar:1.4.1]         at org.pegdown.ToHtmlSerializer.toHtml(ToHtmlSerializer.java:72) ~[pegdown-1.4.1.jar:1.4.1]         at view.Markdown$.toHtml(Markdown.scala:31) ~[Markdown$.class:na]         at util.Mailer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(Notifier.scala:77) ~[Mailer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.class:na]         at util.Mailer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(Notifier.scala:74) ~[Mailer$$anonfun$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.class:na]         at scala.Option.foreach(Option.scala:236) ~[scala-library.jar:na]         at util.Mailer$$anonfun$1$$anonfun$apply$1.apply$mcV$sp(Notifier.scala:74) ~[Mailer$$anonfun$1$$anonfun$apply$1.class:na]         at util.Mailer$$anonfun$1$$anonfun$apply$1.apply(Notifier.scala:74) ~[Mailer$$anonfun$1$$anonfun$apply$1.class:na]         at util.Mailer$$anonfun$1$$anonfun$apply$1.apply(Notifier.scala:74) ~[Mailer$$anonfun$1$$anonfun$apply$1.class:na]         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57) ~[scala-library.jar:na]         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46) ~[slick_2.10-1.0.1.jar:1.0.1]         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46) ~[slick_2.10-1.0.1.jar:1.0.1]         at scala.slick.session.Database.withSession(Database.scala:38) ~[slick_2.10-1.0.1.jar:1.0.1]         at scala.slick.session.Database.withSession(Database.scala:46) ~[slick_2.10-1.0.1.jar:1.0.1]         at util.Mailer$$anonfun$1.apply(Notifier.scala:73) ~[Mailer$$anonfun$1.class:na]         at util.Mailer$$anonfun$1.apply(Notifier.scala:71) ~[Mailer$$anonfun$1.class:na]         at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24) ~[scala-library.jar:na]         at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24) ~[scala-library.jar:na]         at scala.concurrent.impl.ExecutionContextImpl$$anon$3.exec(ExecutionContextImpl.scala:107) [scala-library.jar:na]         at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [scala-library.jar:na]         at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) [scala-library.jar:na]         at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [scala-library.jar:na]         at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [scala-library.jar:na] ","false","bug"
"Apache mod_jk?","Does anything say against using mod_jk for a Tomcat (since this is the preferred and efficient connector) installation instead of mod_proxy?  The docs seem to list the later: https://github.com/takezoe/gitbucket/wiki/Reverse-proxy-with-Apache  tnx. ","false","task"
"How to change H2 settings?","How to change the H2 settings?  H2 is quite popular these days, and many applications use it. In order to avoid conflicts, how to change the H2 settings used by GitBucket, to play well with other apps if already running on the machine where GitBucket is supposed to be installed ?  tnx. ","false","question"
"Repo encryption support!","Add support to be able to **encrypt the entire GIT Repo**. https://www.agwa.name/projects/git-crypt/  The main reason is that small teams will more often host the GitBucket application on 3rd party servers so this would be really critical.  Since GitBucket also has H2 DB part, there also a related issue to it: #68  tnx. ","false","help wanted,improvement"
"Fix #308",,"true","bug"
"No documentation for configuration files?","I made a mistake in setting up the URL and SSH settings on my gitbucket, rendering it impossible to access via HTTP. In desperation I deleted the database from my home directory and restarted the service (I am launching the war file with a systemd script in Linux) but this still did not resolve the issue.  Where are the configuration files for gitbucket stored and how can I fix them? It would be a great help if this information was on the wiki or readme. Thank you for your time.   I have found out some more information about what is wrong here. It seems that gitbucket is calling some temporary configuration files that ARE NOT IN THE ~/.gitbucket DIRECTORY and setting up the SSH port I cannot connect to:  ``` 2014-04-26 03:28:15.880:INFO:oejs.Server:jetty-8.y.z-SNAPSHOT 2014-04-26 03:28:16.010:INFO:oejw.WebInfConfiguration:Extract jar:file:/opt/gitbucket/gitbucket.war!/ to /tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp 2014-04-26 03:28:19.079:INFO:oejw.StandardDescriptorProcessor:NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/WEB-INF/lib/slf4j-jdk14-1.6.4.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/WEB-INF/lib/logback-classic-1.0.13.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory] Null identity service, trying login service: null Finding identity service: null 2014-04-26 03:28:19.210:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/opt/gitbucket/gitbucket.war 2014-04-26 03:28:19.210:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/opt/gitbucket/gitbucket.war 2014-04-26 03:28:19.607:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/opt/gitbucket/gitbucket.war Apr 26, 2014 3:28:19 AM grizzled.slf4j.Logger info INFO: Initializing life cycle class: ScalatraBootstrap 2014-04-26 03:28:19.891:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/opt/gitbucket/gitbucket.war Apr 26, 2014 3:28:19 AM org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration run INFO: Trying to register BouncyCastle as a JCE provider Apr 26, 2014 3:28:20 AM org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration run INFO: Registration succeeded Apr 26, 2014 3:28:20 AM ssh.SshServer$ start INFO: Start SSH Server Listen on 29418 2014-04-26 03:28:20.394:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/tmp/jetty-0.0.0.0-8080-gitbucket.war-_-any-/webapp/},file:/opt/gitbucket/gitbucket.war 2014-04-26 03:28:20.532:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8080 ```  Even after deleting the jetty files in my /tmp folder this problem persists. I haven't the slightest clue where the offending configuration files are that are setting up the SSH Server automatically and preventing me from connecting. Please help if you have any idea where they could be so that I can create a fresh install. ","false",
"Fix #308",,"true",
"plink/putty problem","TortoiseGit can not clone  ssh repository with error message: ""Disconnecting: Protocol error: expected packet 34, got 30"".  MINA SSHD 0.11.0 may fix this problem. see https://issues.apache.org/jira/browse/SSHD-296 ","false","bug"
"Permission system?","Just installed GitBucket, really like it so far and considering its use for primary Git hosting  One thing that makes me quite concerned is what looks like insufficient (as far as I can see) controls for managing permissions of user accounts. This is very important in a team environment where we may have short-term/temporary contract developers we are not yet ready to trust fully and have to manage carefully.  Specific concerns we see with non-Admin users - 1. They can always create repos (cluttering the system) 2. They can make their repos public (risking public exposure of code) 3. Disabling a user erases all their repos (which do not get restored when user is re-enabled) 4. User could self-erase their account (completely removing all record of their work) 5. User could erase their repos (to the same effect) 6. Removing and disabling users seems to do exactly same thing (losing repos)  Are there plans to address such issues in the near future, especially related to protection from data loss and unauthorized exposure of private repos?  EDIT: Here is GitLab permission system for comparison/reference (behind demo login) http://demo.gitlabhq.com/help/permissions ","false","feature"
"Collaborators not remove and can't edit after Transfer Ownership",,"false","bug"
"I had error on push from SourceTree.","I pushed gitbucket from SourceTree on Windows. SourceTree is displaying ""Pushing"" progress bar. Exception is displayed in the log file. (The version is after 1.12, I compiled from source.)  Next, I press ""cancel"" button retry push, looks like no problem. Nothing to output to the log.  ``` 2014-04-15 17:47:12.692:WARN:gitbucket:qtp855546794-720: Internal error during receive-pack org.h2.jdbc.JdbcSQLException: Referential integrity constraint violation: ""IDX_ACTIVITY_FK1: PUBLIC.ACTIVITY FOREIGN KEY (ACTIVITY_USER_NAME) REFERENCES PUBLIC.ACCOUNT(USER_NAME) ('ken@example.jp')""; SQL statement:|INSERT INTO ""A CTIVITY"" (""USER_NAME"",""REPOSITORY_NAME"",""ACTIVITY_USER_NAME"",""ACTIVITY_TYPE"",""MESSAGE"",""ADDITIONAL_INFO"",""ACTIVITY_DATE"" ) VALUES (?,?,?,?,?,?,?) [23506-173]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)         at org.h2.message.DbException.get(DbException.java:171)         at org.h2.message.DbException.get(DbException.java:148)         at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:368)         at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:310)         at org.h2.table.Table.fireConstraints(Table.java:880)         at org.h2.table.Table.fireAfterRow(Table.java:897)         at org.h2.command.dml.Insert.insertRows(Insert.java:129)         at org.h2.command.dml.Insert.update(Insert.java:86)         at org.h2.command.CommandContainer.update(CommandContainer.java:79)         at org.h2.command.Command.executeUpdate(Command.java:235)         at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)         at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140) ``` ","false","bug"
"H2 concole page's css links occur 404 error with nignx","First I deploy gitbucket.war to tomcat7 using port 8080,and bind a sub domain,git.mydomain.com,to tomcat,so I can access gitbucket with http://git.mydomain.com:8080,it's good with no errors. Then reverse proxy with nignx using port 80,so http://git.mydomain.com is ready to use. The problem is that when I login as admin,and access the ""h2 concole"" page with http://git.mydomain.com,the css link returns 404 error.But when using port 8080 to access,it can become normal. And if I mkdir console & touch stylesheet.css in my tomcat web root,it can also become normal. Please help,Thanks a lot ![qq20140414-1](https://cloud.githubusercontent.com/assets/1503843/2689976/d419d206-c327-11e3-81e2-227454b2c765.png) ","false","question"
"Remove COMMIT_LOG table",,"false","improvement"
"Implement ""Task List"" in markdown","""Task List"" is in GitHub Flavored Markdown.  '- [ ]' is converted not checked checkbox forms. '- [x] ' is converted checked checkbox forms.  if we check ""Task List"" checkbox, then markdown content is updated.  <br> example in GitHub. - [ ] sample - [ ] sample2 ","true","feature"
"Upgrade to Slick 2.0.x",,"false","task"
"status 500 None.get error when going to SSH Keys page.","User setting -> ""Edit Your Profile"" -> ""SSH Keys"" Then following exception has occurred. So, I can't go ssh key registraion page.  ``` java.util.NoSuchElementException: None.get     scala.None$.get(Option.scala:313)     scala.None$.get(Option.scala:311)     ssh.SshUtil$.fingerPrint(SshUtil.scala:31)     account.html.ssh$$anonfun$apply$1.apply(ssh.template.scala:35)     account.html.ssh$$anonfun$apply$1.apply(ssh.template.scala:31)     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     scala.collection.immutable.List.foreach(List.scala:318)     scala.collection.TraversableLike$class.map(TraversableLike.scala:244)     scala.collection.AbstractTraversable.map(Traversable.scala:105)     account.html.ssh$.apply(ssh.template.scala:31)     app.AccountControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23.apply(AccountController.scala:179)     app.AccountControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23.apply(AccountController.scala:178)     scala.Option.map(Option.scala:145)     app.AccountControllerBase$$anonfun$16$$anonfun$apply$22.apply(AccountController.scala:178)     util.OneselfAuthenticator$$anonfun$util$OneselfAuthenticator$$authenticate$1.apply(Authenticator.scala:20)     util.OneselfAuthenticator$$anonfun$util$OneselfAuthenticator$$authenticate$1.apply(Authenticator.scala:18)     util.ControlUtil$.defining(ControlUtil.scala:14)     util.OneselfAuthenticator$class.util$OneselfAuthenticator$$authenticate(Authenticator.scala:18)     util.OneselfAuthenticator$class.oneselfOnly(Authenticator.scala:13)     app.AccountController.oneselfOnly(AccountController.scala:16)     app.AccountControllerBase$$anonfun$16.apply(AccountController.scala:176)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     app.ControllerBase.invoke(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     scala.Option.flatMap(Option.scala:170)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     scala.collection.immutable.Stream.flatMap(Stream.scala:446)     org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     app.ControllerBase.runRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     scala.slick.session.BaseSession.withTransaction(Session.scala:236)     scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database.withSession(Database.scala:38)     scala.slick.session.Database.withSession(Database.scala:46)     scala.slick.session.Database.withTransaction(Database.scala:58)     servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ``` ","false","bug"
"status 500 error when setting SSH access.","Administation -> System settings -> SSH access  I checked  ""Enable SSH access to git repository"", and pushed ""Apply changes"" button. Then following exception has occurred.  java.net.SocketException: 許可がありません     sun.nio.ch.Net.bind0(Native Method)     sun.nio.ch.Net.bind(Net.java:444)     sun.nio.ch.Net.bind(Net.java:436)     sun.nio.ch.AsynchronousServerSocketChannelImpl.bind(AsynchronousServerSocketChannelImpl.java:162)     org.apache.sshd.common.io.nio2.Nio2Acceptor.bind(Nio2Acceptor.java:59)     org.apache.sshd.SshServer.start(SshServer.java:349)     ssh.SshServer$.start(SshServerListener.scala:26)     app.SystemSettingsControllerBase$$anonfun$6.apply(SystemSettingsController.scala:59)     app.SystemSettingsControllerBase$$anonfun$6.apply(SystemSettingsController.scala:55)     util.AdminAuthenticator$$anonfun$adminOnly$1$$anonfun$apply$7.apply(Authenticator.scala:76)     util.AdminAuthenticator$class.util$AdminAuthenticator$$authenticate(Authenticator.scala:81)     util.AdminAuthenticator$$anonfun$adminOnly$1.apply(Authenticator.scala:76)     jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:21)     jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     app.ControllerBase.invoke(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     scala.Option.flatMap(Option.scala:170)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     scala.collection.immutable.Stream.flatMap(Stream.scala:442)     org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     app.ControllerBase.runRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     scala.slick.session.BaseSession.withTransaction(Session.scala:236)     scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database.withSession(Database.scala:38)     scala.slick.session.Database.withSession(Database.scala:46)     scala.slick.session.Database.withTransaction(Database.scala:58)     servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ","false","question"
"Make avatar align left and bigger font","Avatar in center looks so strange. ","true","improvement"
"HTTP Status 500 - Invalid Request when validation error","500 status is returned in the validation error when you sign in with a non-input state. The same is true, such as group creation. I am using JBOSS EAP 6.1 on CentOS. I have works fine in GlassFish 3.1.2 on Windows. Is it a problem of the environment?  ``` java.lang.RuntimeException: Invalid Request     jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:23)     jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     app.ControllerBase.invoke(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     scala.Option.flatMap(Option.scala:170)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     scala.collection.immutable.Stream.flatMap(Stream.scala:442)     org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     app.ControllerBase.runRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     scala.slick.session.BaseSession.withTransaction(Session.scala:236)     scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database.withSession(Database.scala:38)     scala.slick.session.Database.withSession(Database.scala:46)     scala.slick.session.Database.withTransaction(Database.scala:58)     servlet.TransactionFilter.doFilter(TransactionFilter.scala:23) ``` ","false","bug"
"Always use ""display name"" in the front end instead ""username"" for better ldap integration","I suggest to always use the filed ""full name"" instead ""username"" in the interface, this has some advantages: - user can customize it - better coherence in the front end, a user is always called with the same name - it offers a better integration with ldap (username is connected with ldap uid filed and in some company this filed is a serial number, news feed become useless...)  As of today, the news feed use the filed ""username"", but wiki recent changes use ""full name"" ","false","LDAP/SSO,improvement"
"Error with ldap auth and uid field with email address","I attached the uid field to ldap email address, I can login, but I can't create a repository. I think the problem is connected with the ""@"" char in the username. ","false","bug"
"Error when same email gitbucket and LDAP","I got error when same email, gitbucket and LDAP. I have gitbucket account and LDAP account. Those are same address.  My friend has only LDAP account, no problem.  ``` HTTP ERROR 500  Problem accessing /gitbucket/signin. Reason:      Server Error Caused by:  org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: ""IDX_ACCOUNT_1_INDEX_A ON PUBLIC.ACCOUNT(MAIL_ADDRESS) VALUES ( /* 56 */ 'ken@example.jp' )""; SQL statement: INSERT INTO ""ACCOUNT"" (""USER_NAME"",""FULL_NAME"",""MAIL_ADDRESS"",""PASSWORD"",""ADMINISTRATOR"",""URL"",""REGISTERED_DATE"",""UPDATED_DATE"",""LAST_LOGIN_DATE"",""IMAGE"",""GROUP_ACCOUNT"",""REMOVED"") VALUES (?,?,?,?,?,?,?,?,?,?,?,?) [23505-173]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     at org.h2.message.DbException.get(DbException.java:171)     at org.h2.message.DbException.get(DbException.java:148) ``` ","false","bug"
"[AddFeature] New Branch","Add feature 'Make New Branch from web interface' ","true",
"Update README.md","Adding Mac homebrew installation instructions ","true",
"SSH port change is not applied without rebooting GitBucket",,"false","bug"
"""SSH keys"" setting page return 500 error because ""SSH_KEY"" table is missing","I've got following error message when accessing ""SSH keys"" setting page. It seems ""SSH_KEY"" table is not defined.  I've upgraded gitbucket from 1.11.1 to 1.12. Do I need to do something?  ``` 例外  javax.servlet.ServletException: フィルタの実行により例外を投げました     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     scala.slick.session.BaseSession.withTransaction(Session.scala:236)     scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database.withSession(Database.scala:38)     scala.slick.session.Database.withSession(Database.scala:46)     scala.slick.session.Database.withTransaction(Database.scala:58)     servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) 原因  org.h2.jdbc.JdbcSQLException: テーブル ""SSH_KEY"" が見つかりません Table ""SSH_KEY"" not found; SQL statement: select x2.""USER_NAME"", x2.""SSH_KEY_ID"", x2.""TITLE"", x2.""PUBLIC_KEY"" from ""SSH_KEY"" x2 where x2.""USER_NAME"" = ? order by x2.""SSH_KEY_ID"" [42102-173]     org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     org.h2.message.DbException.get(DbException.java:171)     org.h2.message.DbException.get(DbException.java:148)     org.h2.command.Parser.readTableOrView(Parser.java:4864)     org.h2.command.Parser.readTableFilter(Parser.java:1107)     org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1713)     org.h2.command.Parser.parseSelectSimple(Parser.java:1821)     org.h2.command.Parser.parseSelectSub(Parser.java:1707)     org.h2.command.Parser.parseSelectUnion(Parser.java:1550)     org.h2.command.Parser.parseSelect(Parser.java:1538)     org.h2.command.Parser.parsePrepared(Parser.java:405)     org.h2.command.Parser.parse(Parser.java:279)     org.h2.command.Parser.parse(Parser.java:251)     org.h2.command.Parser.prepareCommand(Parser.java:218)     org.h2.engine.Session.prepareLocal(Session.java:428)     org.h2.engine.Session.prepareCommand(Session.java:377)     org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1138)     org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:70)     org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:644)     scala.slick.session.Session$class.prepareStatement(Session.scala:29)     scala.slick.session.BaseSession.prepareStatement(Session.scala:201)     scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:29)     scala.slick.jdbc.StatementInvoker.elementsTo(StatementInvoker.scala:17)     scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:90)     scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:10)     scala.slick.jdbc.Invoker$class.build(Invoker.scala:66)     scala.slick.jdbc.StatementInvoker.build(StatementInvoker.scala:10)     scala.slick.jdbc.Invoker$class.list(Invoker.scala:56)     scala.slick.jdbc.StatementInvoker.list(StatementInvoker.scala:10)     scala.slick.jdbc.UnitInvoker$class.list(Invoker.scala:150)     scala.slick.driver.BasicInvokerComponent$QueryInvoker.list(BasicInvokerComponent.scala:19)     service.SshKeyService$class.getPublicKeys(SshKeyService.scala:13)     app.AccountController.getPublicKeys(AccountController.scala:16)     app.AccountControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23.apply(AccountController.scala:179)     app.AccountControllerBase$$anonfun$16$$anonfun$apply$22$$anonfun$apply$23.apply(AccountController.scala:178)     scala.Option.map(Option.scala:145)     app.AccountControllerBase$$anonfun$16$$anonfun$apply$22.apply(AccountController.scala:178)     util.OneselfAuthenticator$$anonfun$util$OneselfAuthenticator$$authenticate$1.apply(Authenticator.scala:20)     util.OneselfAuthenticator$$anonfun$util$OneselfAuthenticator$$authenticate$1.apply(Authenticator.scala:18)     util.ControlUtil$.defining(ControlUtil.scala:14)     util.OneselfAuthenticator$class.util$OneselfAuthenticator$$authenticate(Authenticator.scala:18)     util.OneselfAuthenticator$class.oneselfOnly(Authenticator.scala:13)     app.AccountController.oneselfOnly(AccountController.scala:16)     app.AccountControllerBase$$anonfun$16.apply(AccountController.scala:176)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     app.ControllerBase.invoke(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     scala.Option.flatMap(Option.scala:170)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     scala.collection.immutable.Stream.flatMap(Stream.scala:446)     org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     app.ControllerBase.runRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     scala.Option.getOrElse(Option.scala:120)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:55)     servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     scala.slick.session.BaseSession.withTransaction(Session.scala:236)     scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     scala.slick.session.Database.withSession(Database.scala:38)     scala.slick.session.Database.withSession(Database.scala:46)     scala.slick.session.Database.withTransaction(Database.scala:58)     servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ``` ","false","question"
"README typo fix.",,"true",
"Cannot change repository access when repository is empty","### How to reproduce 1. Create private(or public) empty repository 2. Go to setting page 3. Change access setting to the other (=public or private) ### Symptom  Cannot change access setting because ""default branch"" field is empty. ","false","bug"
"Implement atom feeds","Implement Atom feed of activities.  ![gitbucket](https://f.cloud.github.com/assets/1453749/2499417/14498736-b356-11e3-8766-cbc2e8cac7c9.png)  Get feed link icon 'feed.png' from takezoe's nicocale project. [ニコニコカレンダー Project Top Page - SourceForge.JP](http://en.sourceforge.jp/projects/nikocale/) ","true","feature"
"Permission denied (publickey)","I decided to pull the latest source and noticed an issue with SSH key access. When testing on localhost everything worked perfectly fine. However, when I deployed my built version gitbucket to a VPS, it kept denying my public key with `Permission denied (publickey)`.  Are public keys not ready yet? Because it's really the only feature holding me back from using it.  Thanks ","false","improvement"
"Hide closed milestones from milestone chooser",,"false","bug"
"Pull Request contents is not updated correctly after force push","### Reproduce Step 1. create branch from master. add some modification to branch(commit A) and send pull request to master. 2. add new commit to master(commit B) before merge pull request. 3. rebase pull request branch and push with ""--force"" option  ``` $ git checkout -b new-pull-request  // add some modification  $ git commit -a -m ""commit A"" $ git push origin new-pull-request  // create new pull-request in gitbucket  $ git checkout master  // add some modification  $ git commit -a -m ""commit B"" $ git push origin master  $ git checkout new-pull-request $ git rebase master $ git push -f origin new-pull-request ``` ### Symptom - gitbucket displays 2 commits (commit B -> commit A) - github.com displays only 1 commits (commit B)  It seems that gitbucket refer old master always. ","false","bug"
"Documentation Change for Large file Sizes","Ran into this issue today.  Added to documentation to let other users know about it. ","true",
"Init script","I made an init script intended to be used with debian or ubuntu (with the servlet running by the integrated jetty server). It'd be cool if this were in the wiki.  ``` bash #! /bin/sh ### BEGIN INIT INFO # Provides:          gitbucket # Required-Start:    $remote_fs $syslog # Required-Stop:     $remote_fs $syslog # Default-Start:     2 3 4 5 # Default-Stop:      0 1 6 # Short-Description: Gitbucket initscript # Description:       Starts and stops gitbucket running as a standalone servlet. ### END INIT INFO  # Author: Alex Schneider  # Do NOT ""set -e""  # PATH should only include /usr/* if it runs after the mountnfs.sh script PATH=/sbin:/usr/sbin:/bin:/usr/bin DESC=""Gitbucket git hosting"" USERNAME=gitbucket NAME=gitbucket # Location to java executable DAEMON=""/usr/bin/java"" # Include JVM arguments and all other arguments. DAEMON_ARGS=""-jar /srv/gitbucket/gitbucket.war --host=localhost --https=true"" PIDFILE=/var/run/$NAME.pid SCRIPTNAME=/etc/init.d/$NAME  # Read configuration variable file if it is present [ -r /etc/default/$NAME ] && . /etc/default/$NAME  # Load the VERBOSE setting and other rcS variables . /lib/init/vars.sh  # Define LSB log_* functions. # Depend on lsb-base (>= 3.2-14) to ensure that this file is present # and status_of_proc is working. . /lib/lsb/init-functions  # # Function that starts the daemon/service # do_start() {     # Return     #   0 if daemon has been started     #   1 if daemon was already running     #   2 if daemon could not be started     start-stop-daemon --start --quiet --background --chuid $USERNAME --make-pidfile --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \         || return 1     start-stop-daemon --start --background --chuid $USERNAME --make-pidfile --quiet --pidfile $PIDFILE --exec $DAEMON -- \         $DAEMON_ARGS \         || return 2     # Add code here, if necessary, that waits for the process to be ready     # to handle requests from services started subsequently which depend     # on this one.  As a last resort, sleep for some time. }  # # Function that stops the daemon/service # do_stop() {     # Return     #   0 if daemon has been stopped     #   1 if daemon was already stopped     #   2 if daemon could not be stopped     #   other if a failure occurred     start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME     RETVAL=""$?""     [ ""$RETVAL"" = 2 ] && return 2     # Wait for children to finish too if this is a daemon that forks     # and if the daemon is only ever run from this initscript.     # If the above conditions are not satisfied then add some other code     # that waits for the process to drop all resources that could be     # needed by services started subsequently.  A last resort is to     # sleep for some time.     start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON     [ ""$?"" = 2 ] && return 2     # Many daemons don't delete their pidfiles when they exit.     rm -f $PIDFILE     return ""$RETVAL"" }  # # Function that sends a SIGHUP to the daemon/service # do_reload() {     #     # If the daemon can reload its configuration without     # restarting (for example, when it is sent a SIGHUP),     # then implement that here.     #     start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME     return 0 }  case ""$1"" in   start)     [ ""$VERBOSE"" != no ] && log_daemon_msg ""Starting $DESC"" ""$NAME""     do_start     case ""$?"" in         0|1) [ ""$VERBOSE"" != no ] && log_end_msg 0 ;;         2) [ ""$VERBOSE"" != no ] && log_end_msg 1 ;;     esac     ;;   stop)     [ ""$VERBOSE"" != no ] && log_daemon_msg ""Stopping $DESC"" ""$NAME""     do_stop     case ""$?"" in         0|1) [ ""$VERBOSE"" != no ] && log_end_msg 0 ;;         2) [ ""$VERBOSE"" != no ] && log_end_msg 1 ;;     esac     ;;   status)     status_of_proc ""$DAEMON"" ""$NAME"" && exit 0 || exit $?     ;;   #reload|force-reload)     #     # If do_reload() is not implemented then leave this commented out     # and leave 'force-reload' as an alias for 'restart'.     #     #log_daemon_msg ""Reloading $DESC"" ""$NAME""     #do_reload     #log_end_msg $?     #;;   restart|force-reload)     #     # If the ""reload"" option is implemented then remove the     # 'force-reload' alias     #     log_daemon_msg ""Restarting $DESC"" ""$NAME""     do_stop     case ""$?"" in       0|1)         do_start         case ""$?"" in             0) log_end_msg 0 ;;             1) log_end_msg 1 ;; # Old process is still running             *) log_end_msg 1 ;; # Failed to start         esac         ;;       *)         # Failed to stop         log_end_msg 1         ;;     esac     ;;   *)     #echo ""Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}"" >&2     echo ""Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}"" >&2     exit 3     ;; esac  : ``` ","false","task,waiting 4 user feedback"
"sbt 0.13","http://notes.implicit.ly/post/79876338280/twirl-0-7-0  twirl 0.7.0 released yesterday(2014-03-17) ","true","improvement"
"Fix #247 servlet.CommitLogHook.onPostReceive takes minutes","When pushing tags, command.getOldId value is “0000000000000000000000000000000000000000”. So, can not get commit logs. ","true","bug"
"Trim LF of version file","If manually edit the version file with vim or other editors， it saved with eol need to be removed. ","true","improvement"
"When will notification email be sent?","I want to get notification email, but I can't. I want to know when notification email be sent. ","false","duplicate,question"
"Allow non-members to create issues without access to source code.","I think this would be a handy feature. This would allow public feedback without giving everyone access to the source code. ","false","duplicate,improvement"
"How to translate gitbucket","Dear,  English is not often used in my country, so I want to ask how to translate it to other languages...  Please help me and thanks.  : ) ","false","question"
"Documentation shortcomings","From the README:  ``` The default administrator account is root and password is root.  or you can start GitBucket by java -jar gitbucket.war without servlet container. In this case, GitBucket URL is http://[hostname]:8080/. You can specify following options.  --port=[NUMBER] --prefix=[CONTEXTPATH] --host=[HOSTNAME] --gitbucket.home=[DATA_DIR] ```  What is the CONTEXTPATH? ","false","question"
"zip export return 404 when branch name contains ""/""",,"false","bug"
"Some files are missing from zip archive","It seems that some files are not included when I download them via zip archive link. I've found this problem in master (49bf88f7a7b63008361e4dd852888fc13bb18ea2).  What I've confirmed are 1. download 'takezoe/gitbucket' master zip archive from github.com    - 288 files are included. 2. clone 'takezoe/gitbucket' repository to my local and push them to my intra gitbucket. 3. download master zip archive from intra gitbucket    - 287 files are included.  Missing file is ""sbt.sh"". I have no idea why such symptom happen.    ","false","bug"
"http://example.com/gitbucket/git/root/sample.git/info/refs?service=git-upload-pack return ""Not Found"" message","After update to 2d0f59b6f29e2f0ff39277f3136c35874639c48f, my Jenkins raises following error that indicates failed to connect git repository.  ``` Failed to connect to repository : org.eclipse.jgit.errors.NoRemoteRepositoryException: http://example.com/gitbucket/git/root/sample.git: http://example.com/gitbucket/git/root/sample.git/info/refs?service=git-upload-pack not found ```  When I access to second url, URLs is redirected to ""http://example.com/gitbucket/info/refs"" and ""Not Found"" message is displayed. ","false","bug"
"Can I use webhook other than at POST method?","I want to use GET method at webhook. Because I want to use REST api at webhook. ","false","question"
"Some files have CRLF endings","There are source files with both LF endings and CRLF endings.  ``` $ find src | xargs grep -I `printf '\r\n'` 2>/dev/null | cut -d ':' -f 1 | uniq src/main/resources/update/1_0.sql src/main/scala/app/DashboardController.scala src/main/scala/app/IndexController.scala src/main/scala/app/IssuesController.scala src/main/scala/app/RepositorySettingsController.scala src/main/scala/model/Account.scala src/main/scala/model/BasicTemplate.scala src/main/scala/model/Issue.scala src/main/scala/model/IssueComment.scala src/main/scala/model/package.scala src/main/scala/service/IssuesService.scala src/main/scala/service/SystemSettingsService.scala src/main/scala/service/WikiService.scala src/main/scala/servlet/AutoUpdateListener.scala src/main/scala/servlet/TransactionFilter.scala src/main/scala/util/Notifier.scala src/main/twirl/admin/users/list.scala.html src/main/twirl/admin/users/user.scala.html src/main/twirl/header.scala.html src/main/twirl/helper/activities.scala.html src/main/twirl/helper/diff.scala.html src/main/twirl/index.scala.html src/main/twirl/issues/create.scala.html src/main/twirl/pulls/commits.scala.html src/main/twirl/repo/tags.scala.html src/main/twirl/search/menu.scala.html src/main/twirl/settings/collaborators.scala.html src/main/twirl/settings/menu.scala.html src/main/twirl/settings/options.scala.html src/main/twirl/signin.scala.html src/main/twirl/wiki/compare.scala.html src/main/webapp/assets/common/js/gitbucket.js ``` ","false","task"
"Questions for improving code (WIP ssh and git access)","Hi.  I did first more/less working ssh access (https://github.com/btd/gitbucket/commit/0592d7892c1780e690a76163b0e978992dfefc91) but in current code everything is bind to http filters/servlets etc. Db transactions in filter, in repository case class http urls, well it is wide field for refactoring. I need to move configuration from web.xml to separate config (i think to take typesafe condig, are you ok?), because sshd working out of http server. Also to make you know your current TransactionFilter wrap every requests to transactions, it is awful from DB point of view (at least for posgresql i can explain why, i hope you do not want to use only h2), need to use transactions only for insert/update (and even not always). Another question is connection pool - slick by default do not have any, i usually use bonecp as it is one of the best (by personal observations). ","false","question"
"Branch deletion before merge pull request causes NotMergedException","``` org.eclipse.jgit.api.errors.NotMergedException: Branch was not deleted as it has not been merged yet; use the force option to delete it anyway     at org.eclipse.jgit.api.DeleteBranchCommand.call(DeleteBranchCommand.java:122)     at app.RepositoryViewerControllerBase$$anonfun$14$$anonfun$apply$19$$anonfun$apply$20.apply(RepositoryViewerController.scala:167)     at app.RepositoryViewerControllerBase$$anonfun$14$$anonfun$apply$19$$anonfun$apply$20.apply(RepositoryViewerController.scala:166)     at util.ControlUtil$.using(ControlUtil.scala:26)     at app.RepositoryViewerControllerBase$$anonfun$14$$anonfun$apply$19.apply(RepositoryViewerController.scala:166)     at app.RepositoryViewerControllerBase$$anonfun$14$$anonfun$apply$19.apply(RepositoryViewerController.scala:162) ``` ","false","bug"
"delete branch link return 404 when branch name includes ""/""","### How to reproduce 1. download 1.11.1 2. exec with `java -jar gitbucket.war` 3. create root/test1 repository 4. create branch with ""foo/bar"" branch name 5. push ""foo/bar"" branch to gitbucket 6. click ""delete branch"" link in the browser. ### Problem  Gitbucket shows following error message.  ``` HTTP ERROR 404  Problem accessing /root/test1/delete/foo/bar. Reason:      Not Found Powered by Jetty:// ```  At that time, URL was `http://localhost:8080/root/test1/delete/foo/bar` ","false","bug"
"Display user's full name in header link","We're recording users' full names but aren't showing it to them in the header.  This pull request remedies this. ## Manual testing 1. Sign in as **root** 2. Edit the profile and set the ""Full Name"" field to **I am root** 3. Sign out. 4. Sign in as **root** again. 5. Look in the header: ![i am root](https://f.cloud.github.com/assets/297515/2348259/c611fe58-a555-11e3-8a2f-5792fcc92d00.png)  Mission accomplished! ","true","improvement"
"After Upgrade to 1.11 Options do not work anymore","After Transition from 1.10 to 1.11 the options for my project are not accessible anymore. When clicking from  $URL/$USER/$PROJECT/branches -> Settings I get the message: Not Found When directly trying to access $URL/$USER/$PROJECT/settings I get the same result.  A downgrade to 1.10 resolves the issue. Another upgrade shows the same behaviour. ","false",
"Can't pull requests on fork?","Dear,  I crated ""Fork"", and then clone it. I updated any file and push to ""fork repo"", but i can not pull request to ""origin repo"". (Page show ""not fount"")  Pl help me. ","false","question"
"Links to submodule raise 500 Internal Error.","I've got Internal Error with following step. 1. download ver 1.11 and start with `java -jar gitbucket.war` 2. create 2 repository under root account, `root/test1` and `root/test2` 3. add `root/test2` as submodule to `root/test1` with following command    - `$ git clone http://localhost:8080/git/root/test1.git`    - `$ cd test1`    - `$ git submodule add http://localhost:8080/git/root/test2.git` 4. push modification of test1 repository 5. Open http://localhost:8080/root/test1 and click links to test2 submodule in file page.  ---  Error message  ``` HTTP ERROR 500  Problem accessing /root/test1/blob/master/test2. Reason:      Missing unknown 97df47821d09fc3c0804917afaad7ac23af522f7 Caused by:  org.eclipse.jgit.errors.MissingObjectException: Missing unknown 97df47821d09fc3c0804917afaad7ac23af522f7     at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:148)     at org.eclipse.jgit.lib.ObjectDatabase.open(ObjectDatabase.java:176)     at org.eclipse.jgit.lib.ObjectDatabase.open(ObjectDatabase.java:147)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:104)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:81)     at util.ControlUtil$.using(ControlUtil.scala:26)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8.apply(RepositoryViewerController.scala:81)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8.apply(RepositoryViewerController.scala:77)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$11.apply(Authenticator.scala:120)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$11.apply(Authenticator.scala:118)     at scala.Option.map(Option.scala:145)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:118)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:117)     at util.ControlUtil$.defining(ControlUtil.scala:14)     at util.ReferrerAuthenticator$class.util$ReferrerAuthenticator$$authenticate(Authenticator.scala:117)     at util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:112)     at app.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:17)     at app.RepositoryViewerControllerBase$$anonfun$8.apply(RepositoryViewerController.scala:77)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.org$scalatra$FlashMapSupport$$super$handle(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:744) Powered by Jetty:// ``` ","false","improvement"
"No sample files, under ""hooks"" directory.","I create a new repository by gitbucket. But hooks directory is empty.  If I want to use git hook (example ""post-update""), should I make file named ""post-commit"" under hooks directory? ","false","question"
"Support multiple database driver","### Objective  Make database driver configurable, other than default [H2Driver](http://slick.typesafe.com/doc/2.0.0/api/scala/slick/driver/H2Driver.html), to support other databases such as [MySQL](http://slick.typesafe.com/doc/2.0.0/api/scala/slick/driver/MySQLDriver.html) and [PostgreSQL](http://slick.typesafe.com/doc/2.0.0/api/scala/slick/driver/PostgresDriver.html) in the future. ### Design  Note: I have implemented it with reference to [slick-examples](https://github.com/slick/slick-examples/blob/master/src/main/scala/com/typesafe/slick/examples/lifted/MultiDBCakeExample.scala).  Add `Profile` trait to combine it with `Table`.  ``` trait Profile {   val profile: ExtendedProfile } ```  Import `Profile.profile.simple._` instead of `scala.slick.driver.H2Driver.simple._` directly in the table definition:  ``` trait AccountComponent { self: Profile =>   import profile.simple._   object Accounts extends Table[Account](""ACCOUNT"") {     def userName = column[String](""USER_NAME"", O PrimaryKey)     ... ```  Services include corresponding `Component` to import the `Table` object.  ``` trait AccountService extends AccountComponent { self: Profile =>   def getAccountByUserName(userName: String, includeRemoved: Boolean = false): Option[Account] =     Query(Accounts) filter(t => (t.userName is userName.bind) && (t.removed is false.bind, !includeRemoved)) firstOption   ... } ```  Now almost every controller requires an `ExtendedProfile` instance to inject into the services, combined with `Profile`.  ``` class AccountController(override val profile: ExtendedProfile) extends AccountControllerBase   with AccountService with RepositoryService with ActivityService with OneselfAuthenticator with Profile ```  ``` class ScalatraBootstrap extends LifeCycle {   override def init(context: ServletContext) {     val driver = Database.driver(context)     context.mount(new IndexController(driver), ""/"")     context.mount(new SearchController(driver), ""/"")     ... ``` ","true","feature"
"MatchError when viewing missing files in blob view.","An Error is displayed when accessing a not existing file via the blob view. E.g. the attempt to show the non existing file `missing.txt` with this URL: `http://localhost:8080/user/testrepo/blob/test-branch/missing.txt` will give the following error (cut):  ``` scala.MatchError: false (of class java.lang.Boolean)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.app$RepositoryViewerControllerBase$class$$anonfun$$anonfun$$anonfun$$getPathObjectId$1(RepositoryViewerController.scala:85)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9$$anonfun$10.apply(RepositoryViewerController.scala:93)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9$$anonfun$10.apply(RepositoryViewerController.scala:90)     at util.ControlUtil$.using(ControlUtil.scala:38)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:90)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:81)     at util.ControlUtil$.using(ControlUtil.scala:26)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8.apply(RepositoryViewerController.scala:81)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8.apply(RepositoryViewerController.scala:77)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$11.apply(Authenticator.scala:120)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$11.apply(Authenticator.scala:118)     at scala.Option.map(Option.scala:145) ``` ","false","bug"
"PullRequest page return 404 in v1.11","I've found that PullRequest page return 404 from v1.11. I also tried 5cf96134, but the result is same. ","false","bug"
"Improve LDAP authentication (Disable mail resolve and Additional filter condition)","## Changes  I added two features to LDAP authentication. 1. Disable mail resolve: No mail attribute check in LDAP authentication. Mail address is set by account settings. (related to issue #253) 2. Additional filter condition: LDAP user search with User name attribute filter and other filter conditions. ## Detail of ""Disable mail resolve"" 1. ~~Add ""Disable mail resolve"" checkbox to ""System Settings"" page.~~ 2. Not check mail attribute in LDAP authentication and not update mail address in ACOUNT table automatically, when ~~""Disable mail resolve"" checkbox is ON.~~ =>  ""Mail address attribute is empty"" 3. Register dummy mail address (e.g. username@ldap-devnull), when ""FIRST"" sign-in. 4. Redirect to ""Account Settings"" page and urge to register the collect mail address, when sign-in with dummy mail address. 5. Remove dummy mail address users from mail recipients list. ","true","improvement"
"一度削除したユーザ名やアドレスが使用できない","一度作成したユーザ名やアドレスを使用すると以下のエラーメッセージが出て、ユーザを作成できません。  Username: User already exists.  Mail Address: Mail address is already registered. ","false","question"
"Links to Setting in project page tab is incorrect","After update to 1.11, links to setting in each project tab is incorrect.  For example, The correct setting URL in the project ""takezoe/gitbucket"" is ""http://gitbucket.example.com/takezoe/gitbucket/settings/options"". But 1.11 generates URL like ""http://gitbucket.example.com/takezoe/gitbucket/settings"". It lacks ""options"". ","false","bug"
"NVM","I was mistaken, sorry.  ","false",
"fix typo","Statics -> Statistics ","true",
"Improve performance of viewing large repositories","Load asynchronously files log.  It's similar to Github. https://github.com/takezoe/gitbucket loads https://github.com/takezoe/gitbucket/file-list/master asynchronously. ","true","improvement"
"Issue paging is invalid if 2 or more labels are applied",,"false","bug"
"hostname nor servname provided ","gitbucket 1.11 after java -jar gitbucket.war, I run into the following problem: WARN:/:unavailable org.h2.message.DbException: IO Exception: ""java.net.UnknownHostException: xxx: xxx: hostname nor servname provided, or not known"" [90028-173]     at org.h2.message.DbException.get(DbException.java:160)     at org.h2.message.DbException.convert(DbException.java:275)     at org.h2.util.NetUtils.getLocalAddress(NetUtils.java:263)     at org.h2.server.web.WebServer.updateURL(WebServer.java:328)     at org.h2.server.web.WebServer.init(WebServer.java:317)     at org.h2.server.web.WebServlet.init(WebServlet.java:54)     at javax.servlet.GenericServlet.init(GenericServlet.java:244)     at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:519) ... Anyone who can help me this is very much appreciate. ","false","question"
"Compare email adresses case-insensitive.",,"true","improvement"
"Show repository description below the name on repository page.",,"true","improvement"
"Support AsciiDoc markup for all files + Plain text Readme's","This patch integrates support to render AsciiDoc files with the extension "".adoc"" or "".asciidoc"".  The AsciidoctorJ project is used, which provides a Java API around the JRuby based Asciidoctor library. It runs completely in the JVM.  This patch also contains the changes from PR #287. ","true","feature,wontfix"
"Show the correct name of the readme file","Show the correct name of the readme file (instead of showing always README.md). ","true","bug"
"Improve code view","Now it's more similar to GitHub ","true","improvement"
"add https param only when the conf is true","compare with the true value because otherwhise it will add the --https=true if $GITBUCKET_HTTPS is set (true or false) ","true","wontfix"
"LDAPS authentication freezes","I tried setting up gitbucket behind a proxy with using ldap. I don't have any problem authenticating through a normal ldap connection, but when trying using TLS with ldap the login doesn't work, as in the connection seems to be taking forever.So there shouldn't be any problem with the Bind DN or anything. I also don't get any further Information from any log, as there is no additional  entries during or after the tried login.  Is there a different port being used for handling the LDAPS connection? which might be dropped due to the proxy?  Also it would be nice if there would be a fallback to local authentication, if the connection to ldap does not work for any reason or times out. ","false","duplicate,question"
"[question] Memory usage","Hello, I have installed [gitlab](http://gitlab.org/) on my 1GB virtual instance, and you can see it at the attached image it costs a half of memory even optimized (tuning configs): ![s20140224_220031](https://f.cloud.github.com/assets/1080269/2250313/74f9a58a-9d8e-11e3-9f85-4bc4a25a44db.png)  Can anyone make some equal screenshot or any numbers, so I can compare memory usage difference between gitlab and gitbucket? ","false","question"
"Finer privilege control","In enterprise settings there's a need for slightly more control over privileges.  Currently we have:  Public - All users and guests can read this repository. - Owner/collaborators can write  Private -Collaborators/Group Members can read  and write.  Needed:  Either, -Private needs to have user by user control over write privileges.  or, have another level:  SemiPrivate -Guests can't read -Logged in members can read -Collaborators/Group Members can read and write. ","false","feature"
"Apply GitHub diff colors","However, jsdifflib is still not a good approach. It requires dumping all the two text to the browser and do the work there. Instead, maybe the diff should be taken from the git itself and highlighting should be applied on that.  OTOH, word level diff would be good when applicable (like GitHub does). ","true","improvement"
"Number of commits is limited to 1000","Hi,  i have just pushed a repo to my gitbucket instance and apparently the repo shows ""1000 commits"" but the number doesn't change when i commit new changes... So, i guess the maximum is 1000 for the display.. ","false","improvement"
"Base URL should be configurable","GitBucket generates URL for redirect, notification email and git repoisitory URL box from request information. But when we put reverse proxy at front of GitBucket, it requires complex configuration to generate correct URL. Therefore it helps us that the base URL is configurable in GitBucket side. ","false","improvement"
"How to push with username + password?","What is the recommended way to specify credential for push? I edited my .git/config file and changed the url part to include username and password  ``` [remote ""origin""]     url = http://username:password@localhost:9000/git/root/reponame.git     fetch = +refs/heads/*:refs/remotes/origin/* ``` ","false","question"
"Commit emails not being sent","It looks like emails are being sent for issues, but not for commits. (at least not for commits to group repositories.) ","false",
"silly question ","How can you delete a repository? I do not find any button on the web interface to do so, and if I remove the dir in the $GITHUB_HOME/repositories/$username/repo\* then jetty stops working.  My apologies for asking such a basic question, but I honestly do not see it. ","false","question"
"backup ","obviously the data in GITBUCKET_HOME, but I see there is a data.h2.db file in there.  Is it ok to take a snapshot (using Netapp snapshots or zfs snapshots) or do I have to use a special tool? I see there is a link to the H2 console when logged in as an adminisrator user but I want to run scheduled backups, obviously, I do not want to have to log in to run the backup.  How can I achieve this? What I mean is: what is the best disaster recovery/backup strategy for this application?  Thanks in advance. ","false","question"
"Require login before seeing any data","Is there a way to make users sign in before they have access to any repositories?   Currently, if I want repositories to be browsable by other users, I make them public but it makes them also available to guests which I don't want to. ","false","question"
"Code syntax highlighting","Hi! It would be great to add syntax highlighting support for languages like `matlab`. And I am also wondering is it possible to change the highlighting style (for example change to `github` style) ? ","false","improvement"
"Fix for #231: Generate headline anchor in Wiki pages","When converting headers from markdown to HTML, insert an empty anchor tag with name and href attributes as the first descendent of the generated header tag. As far as I could tell, this is what GitHub does. The name of the anchor is a normalized version of the header text. I included a few unit tests for generating the anchor name, but more extensive test cases may be useful (i.e. to see how this routine handles non-Latin character sets). ","true","improvement"
"ssh and git protocols support","Hi.  I did similar tool for learning puposes (but it was used in production in several places). [There it is](https://github.com/btd/luna). If you see i implemented ssh and git support (ssh read + write and git read only). If you consider such features i can contribute. If no ok.  What do you think? ","false","duplicate"
"Update new data directory in README.md","Seems the change in 1.10 didn't make it into the installation instructions ","true",
"Group account should not be displayed in the assignee pulldown",,"false","invalid"
"Custom label with space not filtering","Clicking on an issue label from the left side of the screen filters the issues by that type. However, it seems that If there is a space in the label the filter fails.  ``` No issues to show. Clear active filters. ```  The url while trying to filter by the ""test case"" label is formed as  ``` http://<domain>/gitbucket/gituser/testrepo/issues?labels=test+case+test+case&state=open&sort=created&direction=desc ```  Anyone else able to reproduce this error?  using 1.10 ","false","bug"
"Improve H2 connectivity","Under high load (or slow remote connections) H2 brings the whole app to HTTP 500:  ``` [...] Caused by: org.h2.jdbc.JdbcSQLException: Timeout trying to lock table ""ACCOUNT""; [...] ```  As [reported](http://stackoverflow.com/questions/4162557/timeout-error-trying-to-lock-table-in-h2), it should be enough to append `;MVCC=true` to JDBC URL to enhance this. I am currently testing this solution and everything seems to be working. ","false","improvement"
"Add group to collaborators","When adding collaborators to your repos you can only add individual users. It would be nice if you could add groups aswell to make managing permissions easier.  The other way around to add users/groups to group owned repos would also be helpful. ","false","duplicate,feature"
"Label for pull request","In the current version of GitBucket, we can't set labels to the pull request. It was same as Github. But recently, a new design of issue system in Girhub, it became possible. So there are no reason to continue to block it. ","false","improvement"
"Fix #257, ""org.scalatra.ForceHttps"" set to true, if --https=true","ScalatraBase.redirect() use ""org.scalatra.ForceHttps"" in servlet context init parameter when choice 'http' or 'https'. ","true","bug"
"Instance Resets in Heroku","I figured out how to deploy GitBucket to Heroku however when I get logged out (due to non-activity) the ""instance"" appears to reset and anything I've added (users/repositories) gets removed. The root user is set back to the default root/root login.  Any ideas why this might be happening. I assume it probably has to do with the Heroku setup, but I am not 100% sure. ","false","question"
"Add id for line number","Quickly and provisional modification for #232. This makes it possible to jump to the line by URL hash. ","true","feature"
"WebHook for issues","Currently (1.9) it seems that webhooks are invoked only on push: would it be possible to let them be invoke when an issue is created / commented / ....? ","false","feature"
"repository url box to follow reverse proxy","#257 ","true","improvement,wontfix"
"Markdown 'underlined' doesn't work","pegdown supported  'underlined' but *.md or Wiki doesn't draw underline. ex.     This is an H1     =============     This is an H2     -------------     # This is an H1     ## This is an H2 ","false","improvement"
"Mailing list notification","Is there any way to configure gitbucket to notify a certain e-mail address associated to the repository (or the repository owner) whenever any of the [notification events](https://github.com/takezoe/gitbucket/wiki/Notification) takes place?  Thanks. ","false",
"HTTPS Reverse proxy with Apache","I have the frontend Apache HTTPD with HTTPS enabled, and GitBucket (that looks great, anyway, compliments!) running on a standalone Tomcat listening on port  8080.  By applying [your suggestions](https://github.com/takezoe/gitbucket/wiki/Reverse-proxy-with-Apache), things work quite well, even though any URL indicated (clone URL, for example) is referring to HTTP, not HTTPS.  For example, while browsing https://myhost/gitbucket/Tirasa/CAS, the clone URL is shown as http://myhost/gitbucket/git/Tirasa/CAS.git instead of https://myhost/gitbucket/git/Tirasa/CAS.git  Is there any place where I can configure this? Thanks. ","false","improvement"
"Error authenticating removed LDAP user","1. Authenticate LDAP user 2. Delete account 3. Authenticate the same LDAP user  then you get a exception below.  ``` org.h2.jdbc.JdbcSQLException: ユニークインデックス、またはプライマリキー違反: ""PRIMARY_KEY_C9 ON PUBLIC.ACCOUNT(USER_NAME) VALUES ( /* 23 */ 'tak.miura' )"" Unique index or primary key violation: ""PRIMARY_KEY_C9 ON PUBLIC.ACCOUNT(USER_NAME) VALUES ( /* 23 */ 'tak.miura' )""; SQL statement: INSERT INTO ""ACCOUNT"" (""USER_NAME"",""FULL_NAME"",""MAIL_ADDRESS"",""PASSWORD"",""ADMINISTRATOR"",""URL"",""REGISTERED_DATE"",""UPDATED_DATE"",""LAST_LOGIN_DATE"",""IMAGE"",""GROUP_ACCOUNT"",""REMOVED"") VALUES (?,?,?,?,?,?,?,?,?,?,?,?) [23505-173]     org.h2.message.DbException.getJdbcSQLException(DbException.java:331)     org.h2.message.DbException.get(DbException.java:171)     org.h2.message.DbException.get(DbException.java:148)     org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:101)     org.h2.index.PageBtree.find(PageBtree.java:121)     org.h2.index.PageBtreeLeaf.addRow(PageBtreeLeaf.java:148)     org.h2.index.PageBtreeLeaf.addRowTry(PageBtreeLeaf.java:101)     org.h2.index.PageBtreeIndex.addRow(PageBtreeIndex.java:95)     org.h2.index.PageBtreeIndex.add(PageBtreeIndex.java:86)     org.h2.table.RegularTable.addRow(RegularTable.java:125)     org.h2.command.dml.Insert.insertRows(Insert.java:127)     org.h2.command.dml.Insert.update(Insert.java:86)     org.h2.command.CommandContainer.update(CommandContainer.java:79)     org.h2.command.Command.executeUpdate(Command.java:235)     org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:154)     org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:140)     scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:87)     scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:84)     scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)     scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)     scala.slick.driver.BasicInvokerComponent$InsertInvoker.prepared(BasicInvokerComponent.scala:81)     scala.slick.driver.BasicInvokerComponent$InsertInvoker.insert(BasicInvokerComponent.scala:84)     service.AccountService$class.createAccount(AccountService.scala:68)     app.SignInController.createAccount(SignInController.scala:9)     service.AccountService$class.ldapAuthentication(AccountService.scala:43)     service.AccountService$class.authenticate(AccountService.scala:20)     app.SignInController.authenticate(SignInController.scala:9)  ``` ","false","bug"
"Create new repository from existing repository URL",,"false","feature,plugin"
"Why v1.9 responses much more slower than previous versions?","In my machine, v1.9 responses much slower. I don't know is it machine specific or common to all? ","false","improvement"
"Is it really necessary to have LDAP email attribute as required?","I am trying to configure the LDAP authentication against my Active Directory database. It happens that, in my LDAP database, the email field is empty for all users. So, I just can't log into the gitbucket because of this (the system complains that the email couldn't be found for the user logging in and refuses to log the user in). Should the email field really be required for the LDAP authentication to work in GitBucket? I cannot see why... ","false","question"
"Noob installation issue: Announced Git URLs only return 403 (embedded mode)","I tried to install & run gitbucket the noob way. This is what I did 1. Download Release 1.9 warfile 2. Run `java -jar gitbucket.war` and log in with root/root under http://localhost:8080/ 3. Create a user ben, pw: ben  4. Log in as user ben, create a new repo myfirstrepo  GitBucket now tells me:  ``` git remote add origin http://localhost:8080/git/ben/myfirstrepo.git ```  But this doesn't work  ``` $ git remote add local http://localhost:8080/git/ben/myfirstrepo.git $ git push local master fatal: unable to access 'http://localhost:8080/git/ben/myfirstrepo.git/': The requested URL returned error: 403 ```  Console is empty. Other URLs like http://localhost:8080/ben/myfirstrepo.git don't work either. Giving up here. ","false",
"Markdown rendering fails when it include BOM","When Readme.md's encoding isUTF-8 with BOM, first line is not renderd correctly.  ![gitbucket_readme_bom](https://f.cloud.github.com/assets/170036/1970612/45ffe9fa-830e-11e3-9c5c-9ab682388941.jpg) ","false","bug"
"Download ZIP file name","In v1.9, downloaded zip file has named BRANCH_NAME.zip. So ""master"" branch of every repository downloads ""master.zip"",  I wish it named REPOS_NAME-BRANCH_NAME.zip. ","false","improvement"
"Wiki page to set up Apache HTTP revers proxy","I have written brief instruction on how to set up Apache HTTP reverse proxy here: https://github.com/liucijus/gitbucket/wiki/Reverse-proxy-with-Apache  Please merge back if you see it useful. ","false","task"
"Support for other DVCS/DRCS ","It would be great to have support for other DVCS/DRCS going forward.  E.g. 1) Mercurial - main alternative to Git. More easy to use. 2) Bazzar - Git alternative. Middle road from Mercurial and Git 3) Darcs - many functional programming languages use this format  Good to have 4) Fossil - sourceforge supports this 5) Any other system supported by Souceforge, BerliOS, etc. 6) Veracity  ","false","feature,wontfix"
"servlet.CommitLogHook.onPostReceive takes minutes","Hello,  When trying out Gitbucket with an example repository (I used [RethinkDB](https://github.com/rethinkdb/rethinkdb)), I found git push was taking inordinately long:  ``` $ time git push origin --all real    0m22.742s  $ time git push origin --tags real    3m52.697s ```  Given that it's a modern machine & localhost, I thought taking 4 minutes was a bit odd. I took a look using jVisualVM, and found out more:  ![screenshot from 2014-01-18 15 18 02](https://f.cloud.github.com/assets/265071/1948268/2d266014-8087-11e3-92ea-852d801843a7.png)  As you can see, the bulk of this problem is jGit's `getCommitLog()` and a scala collection `flatMap()`. Based on the structure of the trace, it looks like the core problem here is that GitBucket is running this for each commit, and redundantly discovering+flattening the graph many times.  An easy solution to this could be caching that information instead of re-generating the entire log from disk each time.  Hope this helps! ","false","improvement"
"Can't edit submitted issue.","## Steps to reproduce  1) Open issues page 2) Open some issue (Click the row) 3) Push ""Edit"" button    contents area was changed editable 4) Modify some text at the title or body 5) Push ""Update Issue"" or ""Cancel"" ## Expected Result  Issue will be updated.(when ""Update Issue"" was clicked) And the view returns to the list.  ## Actual Result  Nothing happens No changes the view and data ## Client Environment  Windows7 IE11, Firefox 26.0, Chrome 32.0.1700.76 Mac OSX 10.8.5 Firefox 26.0 ## Server Environment  Apache Tomcat/7.0.47 on Windows Server 2003 R2 Standard Edition GitBucket 1.9 ","false","bug"
"LDAP display name attribute","In LDAP setting, you can set ""User name attribute"", which is used as login id and display name. For example, I set ""sAMAccountName"" to the column so a ActiveDirectory user ""john""'s gitcucket account display name will be set to ""john"". But ActiveDirecroy holds display name, like ""John Smith"", that I want to  set to the gitbucket account display name. (The attribute name is ""dispName"").  It would be great that LDAP setting has ""User display name attribute"" column which I can set ""dispName"" to.  拙い英語で伝わった自信がないので日本語でも。 LDAP設定の""User name attribute""欄は、LDAP認証の際のログインネームにも、そこから取得したユーザの表示名取得にも使われています。 ユーザの表示名取得には別のLDAP属性(ActiveDirectoryであれば""dispName"")を使用したく、その設定欄も設けていただけないでしょうか。 ","false","improvement"
"Change default data directory to HOME/.gitbucket","Currently, the default data directory is HOME/gitbucket. But when we run gitbucket at the home directory by embedded Jetty, Jetty looks HOME/gitbucket instead of contents in gitbucket.war. It causes some troubles such as #243.  So since GitBucket 1.10, the default data directory is changed to HOME/,gitbucket, old data directory (HOME/gitbucket) is moved to HOME/.gitbucket automatically on  initial boot after upgrading to 1.10. ","false","improvement"
"java -jar gitbucket.war broken after Control-C","If I stop ""java -jar gitbucket.war"" using Control-C, when I start it again, the site is broken.  Is there a better way to shutdown gitbucket nicely? ","false","question"
"Fixed pull request messages.They are a bit different from GitHub","修正点 - pull request画面 上部のメッセージにおける、マージ先とマージ元の入れ替え - pull request画面 マージ後のメッセージを、GitHubや画面上部のメッセージにあわせて merged commit into - fromに修正  ","true","bug"
"Only root can configure group-contained repos","There is no owner stored with a repository, and therefore for group-contained repos there is no person (except root) who can edit it.  I suggest to add the owner property to repository. This might equal to the user for user-contained ones, but should be configurable for group-contained. The selected owner should have the `Settings` tab available. ","false","improvement"
"Global search","Hello,  It would be very good if GitBucket had a global search like GitHub has, so we could search through all repositories. ","false","feature,plugin"
"https not started","Using the `--https=true` flag, this is the output from console  ``` $ java -jar /usr/local/opt/gitbucket/libexec/gitbucket.war --host=127.0.0.1 --port=8383 --https=true 2013-12-19 18:24:59.224:INFO:oejs.Server:jetty-8.y.z-SNAPSHOT 2013-12-19 18:24:59.273:INFO:oejw.WebInfConfiguration:Extract jar:file:/usr/local/Cellar/gitbucket/1.8/libexec/gitbucket.war!/ to /private/var/folders/_0/bvqq9l5d2ngg0stvkf53jrbr0000gn/T/jetty-127.0.0.1-8383-gitbucket.war-_-any-/webapp 2013-12-19 18:25:02.350:INFO:oejw.StandardDescriptorProcessor:NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet Null identity service, trying login service: null Finding identity service: null 2013-12-19 18:25:02.722:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/private/var/folders/_0/bvqq9l5d2ngg0stvkf53jrbr0000gn/T/jetty-127.0.0.1-8383-gitbucket.war-_-any-/webapp/},file:/usr/local/Cellar/gitbucket/1.8/libexec/gitbucket.war 2013-12-19 18:25:02.722:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/private/var/folders/_0/bvqq9l5d2ngg0stvkf53jrbr0000gn/T/jetty-127.0.0.1-8383-gitbucket.war-_-any-/webapp/},file:/usr/local/Cellar/gitbucket/1.8/libexec/gitbucket.war 18:25:02.855 [main] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap 2013-12-19 18:25:03.188:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/private/var/folders/_0/bvqq9l5d2ngg0stvkf53jrbr0000gn/T/jetty-127.0.0.1-8383-gitbucket.war-_-any-/webapp/},file:/usr/local/Cellar/gitbucket/1.8/libexec/gitbucket.war 2013-12-19 18:25:03.521:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/private/var/folders/_0/bvqq9l5d2ngg0stvkf53jrbr0000gn/T/jetty-127.0.0.1-8383-gitbucket.war-_-any-/webapp/},file:/usr/local/Cellar/gitbucket/1.8/libexec/gitbucket.war 2013-12-19 18:25:03.560:INFO:oejs.AbstractConnector:Started HttpsSupportConnector@127.0.0.1:8383 ```  Connecting to https://127.0.0.1:8383/ result in an SSL error, although connecting to http://127.0.0.1:8383/ works fine.   Attempting to connect from `openssl`:  ``` OpenSSL> s_client -connect localhost:8383 CONNECTED(00000003) 22178:error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:/SourceCache/OpenSSL098/OpenSSL098-50/src/ssl/s23_clnt.c:607: ``` ","false","question"
"Error opening database: ""Concurrent update""","No idea what caused it (I didn't see the error), no idea if the warning has anything to do with it as the stacktrace doesn't have a timestamp on it.  ``` 2013-12-18 13:19:45.674:WARN:oejs.ServletHandler:/gitbucket/git/aidanhs/my_repo.git/info/refs org.h2.jdbc.JdbcSQLException: Error opening database: ""Concurrent update"" [8000-173]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:331)         at org.h2.message.DbException.get(DbException.java:160)         at org.h2.store.FileLock.getExceptionFatal(FileLock.java:437)         at org.h2.store.FileLock.lockFile(FileLock.java:348)         at org.h2.store.FileLock.lock(FileLock.java:129)         at org.h2.engine.Database.open(Database.java:568)         at org.h2.engine.Database.openDatabase(Database.java:226)         at org.h2.engine.Database.<init>(Database.java:221)         at org.h2.engine.Engine.openSession(Engine.java:56)         at org.h2.engine.Engine.openSession(Engine.java:160)         at org.h2.engine.Engine.createSessionAndValidate(Engine.java:139)         at org.h2.engine.Engine.createSession(Engine.java:122)         at org.h2.engine.Engine.createSession(Engine.java:28)         at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:313)         at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:105)         at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:90)         at org.h2.Driver.connect(Driver.java:73)         at java.sql.DriverManager.getConnection(DriverManager.java:571)         at java.sql.DriverManager.getConnection(DriverManager.java:187)         at scala.slick.session.Database$$anon$2.createConnection(Database.scala:105)         at scala.slick.session.BaseSession.conn$lzycompute(Session.scala:207)         at scala.slick.session.BaseSession.conn(Session.scala:207)         at scala.slick.session.BaseSession.withTransaction(Session.scala:230)         at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)         at scala.slick.session.Database.withSession(Database.scala:38)         at scala.slick.session.Database.withSession(Database.scala:46)         at scala.slick.session.Database.withTransaction(Database.scala:58)         at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)         at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)         at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)         at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)         at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)         at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)         at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)         at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)         at org.eclipse.jetty.server.Server.handle(Server.java:365)         at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)         at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)         at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)         at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)         at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)         at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)         at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)         at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)         at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)         at java.lang.Thread.run(Thread.java:724) ``` ","false","bug"
"Add plist launcher for OS X and installation instructions","User friendly daemon launcher and instructions in `README.md` for OS X users ","true",
"Compile error due to scalaz","This error results when running `ant`  ```      [exec] [error] (test:compile) scala.reflect.internal.Types$TypeError: bad symbolic reference. A signature in SideEffectingCreationPaths.class refers to term scalaz ```  Full error message at https://gist.github.com/8036820 ","false","question"
"LDAP auth freezes?","Hi,  I've been trying to configure LDAP for Gitbucket, and when I try to log in after my configuration, it just freezes for a long time (I've been seeing [this](http://puu.sh/5OQ7n.jpg) for almost an hour). My configuration looks like [this](http://puu.sh/5OQf1.png). Is there any reason for it to hang when I try to log in via LDAP? I also can't seem to find much in the logs either... ","false","question"
"ldap authentication error","I'm fairly new to gitbucket. ldap server: FreeIPA  Caused by:  LDAPException: No Such Object (32) No Such Object LDAPException: Matched DN: dc=foo     at com.novell.ldap.LDAPResponse.getResultException(LDAPResponse.java:407)     at com.novell.ldap.LDAPResponse.chkResultCode(LDAPResponse.java:370)     at com.novell.ldap.LDAPSearchResults.next(LDAPSearchResults.java:289)     at util.LDAPUtil$.liftedTree1$1(LDAPUtil.scala:118)     at util.LDAPUtil$.getEntries$1(LDAPUtil.scala:117)     at util.LDAPUtil$.util$LDAPUtil$$findUser(LDAPUtil.scala:126)     at util.LDAPUtil$$anonfun$authenticate$1.apply(LDAPUtil.scala:34)     at util.LDAPUtil$$anonfun$authenticate$1.apply(LDAPUtil.scala:33)     at util.LDAPUtil$.withConnection(LDAPUtil.scala:107)     at util.LDAPUtil$.authenticate(LDAPUtil.scala:33)     at service.AccountService$class.ldapAuthentication(AccountService.scala:38)     at service.AccountService$class.authenticate(AccountService.scala:20)     at app.SignInController.authenticate(SignInController.scala:9)     at app.SignInControllerBase$$anonfun$4.apply(SignInController.scala:29)     at app.SignInControllerBase$$anonfun$4.apply(SignInController.scala:28)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:24)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:19)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:23)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:23)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:23)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:442)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:23)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:23)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:23)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:23)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:23)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:23)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:23)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:23)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:23)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:23)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:23)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:23)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:23)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:54)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:744)  I wasn't able to try it on the latest master code, because when I run the war file:  Error: Could not find or load main class JettyLauncher ","false","question"
"Fix style markdown table on README.md","Fix style of Markdown table on README.md equalize wiki page. ","true",
"Source code selection by specified line or region","Github supports following URLs which specify a line or region of source code: - https://github.com/takezoe/gitbucket/blob/master/LICENSE#L2 - https://github.com/takezoe/gitbucket/blob/master/LICENSE#L2-L10  GitBucket should support these URLs too. ","false","improvement"
"Generate headline anchor in Wiki pages",,"false","improvement"
"Allow markdown preview for all .md files","Hi, it would be nice if I could see `*.md` (or `*.markdown`) files rendered in html. In some cases it is better to have some markdown docs in code rather than in separate (wiki) repository. Currently there is only support for README.md at the top dir. Sometimes it's not enough. ","false","feature"
"adding new commit to branch should be add the pull request","1. create project 2. clone it to local eclipse 3. create ""foo-branch"" and edit something. 4. commit & push to upstream 5. create pull request from ""foo-branch"" to ""master"" 6. edit newly on ""foo-branch"" 7. commit & push to upstream 8. pull request is not modified. this is not same on github.com behavier.  github.comでは、送ったpull requestのブランチにコミットを追加していけば、 そのコミットは送信済みのpull requestに自動的に追加されていくようですが、 GitBucketはそうはならないようです。 ","false",
"Silenced compiler warnings",,"true",
"Provide common Single Sign On options","Some resources - Pac4j, example with Play framework, https://github.com/leleuj/play-pac4j - Or maybe Spring security.  My interest, Jasig CAS, is particularly important in academic environments others have asked for social media based SSO ","false","LDAP/SSO,feature"
"can't change gitbucket.home, did I miss anything?","after deployed gitbucket to Tomcat server, the default gitbucket.home is /root/gitbucket    I want change the path, so I add envirenment variable $GITBUCKET_HOME = /media/work/Work/gitbucket  add below content to WEB-INF/web.xml     < context-param>     < param-name>gitbucket.home< /param-name>     < param-value>/media/work/Work/gitbucket< /param-value>   < /context-param>  OS : UBUNTU 12.04  after I restart Tomcat, the gitbucket.home still point to /root/gitbucket  is there anything I missed? ","false","question"
"Fix for #123: The change password page needs to require old password and 2 copies of the new password.",,"true","improvement"
"enable to delete branch","Implement function to delete branch. After a pull request has been merged in particular.  https://help.github.com/articles/tidying-up-pull-requests  ![deletebranch](https://f.cloud.github.com/assets/2757759/1656279/6223b140-5b70-11e3-9b79-5d96f4314b56.gif) ","false","feature"
"Provide the way to know where GITBUCKET_HOME is","GitBucket offers several ways to configure GITBUCKET_HOME. Users are confused about where GITBUCKET_HOME is. It would be nice if GITBUCKET_HOME is displayed on System Settings screen. ","false","feature"
"move old repository into new dir","Why move a old git repository into new $gitbucket.home/repository/root/ ,the server not display this repository. thanks ","false","question"
"Fixes issue #216","Added a div element to wrap the buttons so they are vertically aligned with each other. Also converted input and a elements to button elements as Bootstrap recommends: http://getbootstrap.com/css/#buttons-tags  Verified fix in Chrome, Safari, Firefox and Opera on OS X. ","true",
"Turn off autocomplete on ""Add collaborator"" form","You have already created js autocomplete for that input, so it is good to turn off the browser autocomplete. If there are more forms that have custom autocomplete, this change should be applied to them, too. ","true",
"Fix for #217: Sort milestones by due date","Open milestones are now sorted by due date ascending. I've added sorting of closed milestones by close date descending, because otherwise it looked random. ","true","feature"
"Close issues via commit messages","Reference https://help.github.com/articles/closing-issues-via-commit-messages ","true","feature"
"Sort milestones by due date",,"false","improvement"
"Cancel button position in the issue editing form","Cancel button in the issue editing form is displayed at illegal position in Chrome. There are no problem in IE or Firefox.  ![cancel](https://f.cloud.github.com/assets/1094760/1628884/4aa3c7d0-5724-11e3-9ce7-eb23cb66b83c.png) ","false","bug"
"Ingore whitespace in diff","Is there a way to force the diff views to ignore whitespace? ","false","improvement"
"What's the default username/password","After I install it under tomcat, what's the default username and password? or where to set them? Can I just login by ssh keys? ","false","question"
"New wiki page","I have written a quick guide to using Nginx as a reverse proxy for Gitbucket and would to know what's the best way of sharing it?  ","false","task"
"improve ldap support","reference  Stash - Atlassian‘s ldap ? User Object Filter Group Object Filter ","false","feature"
"Project page won't show readme unless named in all caps","`README.md` works, `Readme.md` does not. ","false","improvement"
"Broken markdown","If I create a README.md with the following content:  ---[ README.md START]---  ``` cd /tmp mkdir aaa cd aaa ```  ---[ README.md END]---  it shows the code block as one line. ","false","improvement"
"SSH key authentication","Is it possible to add SSH key support for pushing/pulling to remotes on gitbucket? ","false","duplicate"
"Allow non-users to submit issues","It would be great if there were a way for non-users to submit issues to public repositories. I wouldn't want to allow anonymous issues, however perhaps you could add GitHub authentication which defaults to a new User Type of Issues Only... just a suggestion. Great project. ","false","improvement"
"Group member can not delete its own repo","If a normal user creates a repo in a group, the same user can not delete the repo. I would expect that if the user has permissions to create repo in the group, the same user should be able to delete it. ","false","duplicate"
"Pushing branch deletion does not return correct response",,"false","invalid"
"Fetch pull request from source repository after updating repository.","This PR resolves error access to /:owner/:repository/pull/:id after request branch is deleted. ","true",
"Allow multiple GitBucket instances to run in a single servlet container (need separate databases)","If you try to deploy two instances of GitBucket to Tomcat (or any other servlet container I am assuming) the first instance gets an exclusive lock on the database causing the second to fail since it tries to use the same database.  Yes - GitBucket has groups and I could use those instead of running multiple instances, but my use case is more about user segregation.  I work at a University which means we have a very high turnover of users (students, and researchers).  Having a completely separate GitBucket database for each instance means that we can safely destroy an entire GitBucket instance (for example once a course has completed) without affecting other instances.  If we used groups then we would need to be careful not to remove users who were members of other still-active groups.  Creating a unique database name or sub-directory for each GitBucket instance is all that would need to be done.  I would do this myself, but I have 0 experience with Scala. ","false","improvement"
"Remove superfluous context.path","It was generating URLs that look like http://server.example.com/gitbucket/gitbucket/git/user/repo.git (notice the extra ""/gitbucket""?) when the WAR was deployed in Tomcat.  If you look in the rest of the file for `baseUrl`, you'll see it's used without `context.path` to generate URLs. ","true",
"Resolves Error when deleting repository which has PR.","When someone deletes repository which has one ore more pull requests, an error is reported.  This error is caused by deleting row of ISSUE table before deleting row of PULL_REQUEST table. PULL_REQUEST table has foreign key references ISSUE table, so row of ISSUE table should be deleted after deletion of PULL_REQUEST table. ","true",
"Added process to update pull request in push.","Updates ""Commits"" and ""Files Changed"" of pull request when request branch is updated.  TODO: This PR is consider only UPDATE of branch, probably  DELETION and RENAMING of branch should be treated. ","true",
"Make diff type customizable","Adds a switch to accounts for users to be able to select side-by-side diffs instead of inline diffs.  jsdifflib already supports this (through the `viewType` parameter); all I did was: 1. add the flag to the model/database 2. update methods that create/update accounts 3. update forms that create/update accounts 4. propagate the setting to the controllers 5. propagate the setting to the twirl templates  My testing shows that a sign-out/sign-in is necessary after changing the `inlineDiff` setting for the results to be visible. ","true","improvement"
"Add single sign-on (SSO) support","Jenkins and Artifactory both support SSO through the use of an HTTP header sent by a reverse proxy.  In Jenkins, this is handled by the [Reverse Proxy Auth Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Reverse+Proxy+Auth+Plugin) while in Artifactory, it's part of the [Pro Power Pack](http://www.jfrog.com/home/v_artifactorypro_overview).  **How to configure SSO for GitBucket** 1. Configure a front-end reverse proxy to authenticate a request (such as IIS with Windows Authentication) and then delegate the request to the servlet container, augmenting it with a special header (let's call it `auth-user`). 2. Configure the servlet app to look for the [configurable] `auth-user` header, and if it's set, you can assume that the user named by the header is logged in, otherwise you continue with other authentication mechanisms. (this is the part I am submitting for review)  **Implementation details** 1. The LDAP configuration needs to record the name of the reverse-proxied SSO header (this is totally optional, if no value is provided, SSO won't be attempted and it will work as before). 2. When retrieving the `LoginAccount`, if the session is empty AND the SSO header has a value, then construct an `Option[Account]`, looking up the user's e-mail address, save the account in the session and return it, otherwise proceed as before.  **Manual testing** 1. Install Tomcat 7.0 and have it listen for requests on port 8080. 2. Deploy GitBucket in Tomcat. 3. Test GitBucket by visiting http://localhost:8080/gitbucket/ 3.1 Notice that you can sign in as root and operate as usual. 3.2 Configure LDAP but don't set the `HTTP Single Sign-On header` field. 3.3 Notice that you can sign on as domain users, etc. 4. Configure IIS on port 80 to use Windows authentication. 5. Install the [BonCode Apache Tomcat AJP 1.3 Connector](http://boncode.net/connector/webdocs/Tomcat_Connector.htm) and configure it to bridge IIS to Tomcat. 5.1 You may want to test that you can navigate to http://localhost/gitbucket/ and it works like it did on Tomcat. 6. Configure the `HTTP Single Sign-On header` field to `auth-user`. 7. Test GitBucket w/SSO by visiting http://localhost/gitbucket/ 7.1 You will be signed in automatically. 7.2 Clicking ""Sign out"" does nothing. (perhaps we would eventually want to hide that link when we detect SSO is enabled?) ","true","feature"
"Allow users can create and management their groups.","I added a feature that members can manage their group. If you are turned OFF by default, this feature is not the same as ever. When the administrator to change the settings from the System Settings, user can use this function. - The user can create a group from the account page of their own. - Automatically, member list of the group has been created, it contains the author of the group. - Members will be able to edit the profile of the group to which they belong, to manage the member list. - The user will not be able to leaves a group themselves. - The user can not be deleted group. ","true","duplicate,feature"
"performance limitations?","I have read that GitBucket is for small groups of users but haven't seen any information about how small, or what the the limitations are.  Want I want to know is are the performance limitations on concurrent access to a single repository or concurrent access to a GitBucket server itself?  Basically I am considering using GitBucket for teaching a University class of 80 or so students.  Each would have their own repositories, so there would be a one-to-one mapping between users and repositories.  The repositories would contain up to 50 source files.  We would likely be seeing up to 10 users concurrently pushing at the same time during peak times.  I will do some performance tests of my own using scripted clients, but am interesting on what those of you with knowledge of the internals think.  Is GitBucket going to be able to handle this (assuming it is running on decent hardware)?  We have used GitHub for this in the past but would prefer to use something self-hosted. ","false","question"
"Merging via the Web GUI does not fire WebHook","Merging via command line fires WebHook. But merging via the gui does not fire WebHook. ","false","bug"
"Can Gitbucket has ""organization"" account type ?","I feel gitbucket is great! :-)  and so, I feel that gitbucket should has ""organization"" account type like a ""jenkinci"" account on github. https://github.com/jenkinsci  for detail,  see ""What's the difference between user and organization accounts?"" on github.com: https://help.github.com/articles/what-s-the-difference-between-user-and-organization-accounts ","false","question"
"Load Gravatar images always through HTTPS","This patch will force to load Gravatar images always through HTTPS which will fix the problem with mixed content when accessing the page through HTTPS.  The problem is that if an HTTPS page includes HTTP content, the HTTP portion can be read or modified by attackers, even though the main page is served over HTTPS. ","true",
"Web hook for pull request",,"false","invalid"
"add HARDWRAPS option","fix #191  https://github.com/sirthias/pegdown/blob/1.4.1/src/main/java/org/pegdown/Extensions.java#L52-L57 ","true",
"In comment, keep a style as it is.","Issueやpull requestのコメントについて。  ほげ。 ふが。  とコメントした時に ほげ。ふが。 という体裁になってしまうのが、少し困ります。 2点課題を伝えたい時に、1つにしか回答がつかなかったりするので、見た目上ちゃんと2つ課題があるように表示されてほしいです。 ","false",
"Adding LDAP StartTLS support","Some LDAP server do not allow authenticate with unencrypted password. This patch is adding the StartTLS support which takes care of the encryption.  In order to enable the StartTLS, go to ""System Settings"" and select the ""Enable TLS"" in the Authentication section. Then make sure that you add your LDAP certificate into the Java keystore:  $ keytool -import \           -file /etc/pki/tls/certs/cacert.pem \           -alias myName \           -keystore /var/lib/gitbucket/keystore  You can list all keys from the keystore like this:  $ keytool -list -keystore /var/lib/gitbucket/keystore ","true",
"Can't save LINK_FIRST wiki page","1. in some page create link for new wiki page [[LINK_FIRST]] and click it. 2. edit page ""LINK_FIRST"" and save 3. following error occured.   > Someone has edited the wiki since you started. Please reload this page and re-apply your changes.  reload and try to save again, but I couldn't save this page any more.   I expect either Bitbucket style or Github style.  **Bitbucket wiki** - alert there isn't LINK_FIRST page, and show CREATE_LINK_FIRST page button.  **Github wiki**  - same behavior with GitBucket but can save LINK_FIRST page. ","false","bug"
"Documentation  update for wiki page ""Installation on IIS and Helicontech Zoo""","After working with GitBucket on IIS for awhile now, I've found that IIS is still filtering out files named ""web.config"" so they cannot be viewed. These files often appear in the ASP.NET projects that I have in my GitBucket repos.  Adding the ""hiddenSegments""  section to the GitBucket IIS web.config file fixes the problem.  Wiki page: https://github.com/takezoe/gitbucket/wiki/Installation-on-IIS-and-Helicontech-Zoo #### Updated web.config  ``` xml <?xml version=""1.0"" encoding=""UTF-8""?> <configuration>   <system.webServer>     <heliconZoo>             <clear />             <application name=""gitbucket"">                 <environmentVariables>                     <add name=""WAR_EXTRACT_PATH"" value=""%APPL_PHYSICAL_PATH%"" />                     <add name=""WAR_FILE"" value=""gitbucket.war"" />                     <add name=""JDK_HOME"" value=""C:\Program Files\Java\jdk1.7.0_40"" />                     <add name=""JAVA_HOME"" value=""C:\Program Files\Java\jdk1.7.0_40"" />                     <add name=""GITBUCKET_HOME"" value=""C:\gitbucket_data"" />                     <add name=""CONTEXT_PATH"" value=""/gitbucket"" />                 </environmentVariables>             </application>     </heliconZoo>         <handlers>             <add name=""gitbucket#x64"" path=""*"" verb=""*"" modules=""HeliconZoo_x64"" scriptProcessor=""java.jetty.8"" resourceType=""Unspecified"" requireAccess=""Script"" preCondition=""bitness64"" />             <add name=""gitbucket#x86"" path=""*"" verb=""*"" modules=""HeliconZoo_x86"" scriptProcessor=""java.jetty.8"" resourceType=""Unspecified"" requireAccess=""Script"" preCondition=""bitness32"" />         </handlers>         <security>             <requestFiltering>                 <fileExtensions>                     <remove fileExtension="".ldb"" />                     <remove fileExtension="".refresh"" />                     <remove fileExtension="".webinfo"" />                     <remove fileExtension="".vjsproj"" />                     <remove fileExtension="".vbproj"" />                     <remove fileExtension="".vb"" />                     <remove fileExtension="".resx"" />                     <remove fileExtension="".resources"" />                     <remove fileExtension="".mdf"" />                     <remove fileExtension="".mdb"" />                     <remove fileExtension="".master"" />                     <remove fileExtension="".exclude"" />                     <remove fileExtension="".java"" />                     <remove fileExtension="".csproj"" />                     <remove fileExtension="".config"" />                     <remove fileExtension="".ascx"" />                     <remove fileExtension="".asax"" />                     <remove fileExtension="".cs"" />                 </fileExtensions>                 <hiddenSegments>                     <remove segment=""App_Browsers"" />                     <remove segment=""App_WebReferences"" />                     <remove segment=""App_LocalResources"" />                     <remove segment=""App_GlobalResources"" />                     <remove segment=""App_Data"" />                     <remove segment=""App_code"" />                     <remove segment=""web.config"" />                 </hiddenSegments>             </requestFiltering>         </security>   </system.webServer> </configuration> ``` ","false","task"
"Update repository icons","We are using some bootstrap icons as repository icons. But these icons are not similar to Github. So we should create new repository icons below: - Public repository - Private repository - Forked repository ","false","improvement"
"No private repos at the user's profile page","If I create a private repo as a **Normal** user, the repo is not listed at the user's profile page (only public repos are listed there). I can see the private repos at the main page under **Your repositories**. ","false","improvement"
"buildhive console output unreadable","I think we should setting `-Dsbt.log.noformat=true` when buildhive.  https://buildhive.cloudbees.com/job/takezoe/job/gitbucket/36/console http://stackoverflow.com/a/4269307/605582 http://www.scala-sbt.org/0.12.3/docs/Detailed-Topics/Command-Line-Reference#command-line-options  ![screen shot 2013-10-31 at 23 31 35](https://f.cloud.github.com/assets/389787/1446546/30ae02aa-4239-11e3-821d-ca075093fa95.png) ","false","task"
"allow multibyte repository name","マルチバイトをリポジトリ名に使うなという話もあるかもしれませんが、どうしても欲しいので検討お願いします。 もっとかっこ良いやり方があるかもしれませんが、とりあえず動いています。 ","true","improvement,wontfix"
"Option to create git bundle","There are applications like Android repo script (http://source.android.com/source/developing.html) which are trying to fetch git bundle (http://git-scm.com/blog/2010/03/10/bundles.html) first before accessing the repo itself. The advantage is that getting the bundle takes less bandwidth than accessing the repo directly.  It would be nice to have an option which would allow to create these bundles automatically. ","false","feature"
"Gravatar always pulled through HTTP","The Gravatar image is always pulled through HTTP protocol. I would expect that it will be pulled via HTTPS if the GitBucket instance is running through HTTPS.  This should be simple to fix in the AvatarImageProvider.scala file. ","false","improvement"
"Notify mail characters were garbled.","I use japanese.  Garbled reason is that charset=us-ascii ( maybe, UTF-8 )  ``` Message-ID: <898317280.5.1383017921373.JavaMail.root@git-bucket> Subject: =?UTF-8?Q?[xxxx]_redmine=E9=80=A3=E6=90=BA=EF=BC=9F_(#3)?= MIME-Version: 1.0 Content-Type: multipart/mixed;      boundary=""----=_Part_4_2014381319.1383017921370""  ------=_Part_4_2014381319.1383017921370 Content-Type: text/html; charset=us-ascii Content-Transfer-Encoding: 7bit   <p>???</p><br/> --<br/> <a href=""http://xxxx/nazoking/gitbucket/issues/3"">View it on GitBucket</a> ```  run command is that java -jar gitbucket.war --port=9888 version 1.7  I try that java option. -Dmail.mime.charset=UTF-8 -Dfile.encoding=UTF-8  but not resolved. ","false","bug"
"Wiki doesn't clone the repository","The current gitbucket wiki system clones the repository to create commits and push them into the original repository.  But I think it's possible to do these process directly using CommiBuilder. ","false","improvement"
"Improve pull request performance",,"false","improvement"
"Version bump in spec file",,"true",
"Create links only odd issue numbers for commit message","on GitBucket 1.6 / 1.7  ``` git commit -m 'test #1 #2 #3 #4 #5 #6' ```  it turns into the screen shot below  ![img](https://dl.dropboxusercontent.com/u/5777452/Screen%20Shot%202013-10-24%2010.53.50.png) ","false","bug"
"Error when browsing a submodule","Hi, when I click on a git submodule from the web interface I get the following error:  ``` HTTP ERROR 500  Problem accessing /gitbucket/myuser/myrepo/blob/mybranch/dir/mysubmodule. Reason:      Missing unknown 83e... Caused by:  org.eclipse.jgit.errors.MissingObjectException: Missing unknown 83e...     at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:148)     at org.eclipse.jgit.lib.ObjectDatabase.open(ObjectDatabase.java:176)     at org.eclipse.jgit.lib.ObjectDatabase.open(ObjectDatabase.java:147)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:103)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:80)     at util.ControlUtil$.using(ControlUtil.scala:26)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8.apply(RepositoryViewerController.scala:80)     at app.RepositoryViewerControllerBase$$anonfun$8$$anonfun$apply$8.apply(RepositoryViewerController.scala:76)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$11.apply(Authenticator.scala:124)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1$$anonfun$apply$11.apply(Authenticator.scala:118)     at scala.Option.map(Option.scala:145)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:118)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:117)     at util.ControlUtil$.defining(ControlUtil.scala:12)     at util.ReferrerAuthenticator$class.util$ReferrerAuthenticator$$authenticate(Authenticator.scala:117)     at util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:112)     at app.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:16)     at app.RepositoryViewerControllerBase$$anonfun$8.apply(RepositoryViewerController.scala:76)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.AccountController.org$scalatra$FlashMapSupport$$super$handle(AccountController.scala:10)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.AccountController.handle(AccountController.scala:10)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.SystemSettingsController.org$scalatra$FlashMapSupport$$super$handle(SystemSettingsController.scala:9)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply$mcV$sp(flashMap.scala:162)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at org.scalatra.FlashMapSupport$$anonfun$handle$1.apply(flashMap.scala:136)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.FlashMapSupport$class.handle(flashMap.scala:136)     at app.SystemSettingsController.handle(SystemSettingsController.scala:9)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)     at org.eclipse.jetty.server.Server.handle(Server.java:365)     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)     at java.lang.Thread.run(Thread.java:724) ```  The ""83e..."" commit is the referenced one, and belongs to the _submodule_, that's probably the problem. Let me know if it's a JGit problem so I can report the bug upstream, if appropriated.  Thanks. ","false","bug,duplicate"
"Add support for Markdown in Wiki and Issues","Markdown is already supported for README.md files, it would be nice to be able to write Wiki pages and issues using Markdown too.  Thanks for this great piece of software. ","false","question"
"MissingObjectException when delete remote branch","Caused following error when run `git push origin :remote_branch_name`  GitBucket 1.6 / jetty-9.0.4.v20130625  ``` 2013-10-25 17:33:26.822:WARN:/gitbucket:qtp19625264-19: Internal error during receive-pack org.eclipse.jgit.errors.MissingObjectException: Missing unknown 0000000000000000000000000000000000000000         at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:148)         at org.eclipse.jgit.lib.ObjectReader.open(ObjectReader.java:229)         at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:809)         at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:722)         at util.JGitUtil$$anonfun$getCommitLogs$1.apply(JGitUtil.scala:279)         at util.JGitUtil$$anonfun$getCommitLogs$1.apply(JGitUtil.scala:278)         at util.ControlUtil$.using(ControlUtil.scala:35)         at util.JGitUtil$.getCommitLogs(JGitUtil.scala:278)         at util.JGitUtil$.getCommitLog(JGitUtil.scala:295)         at servlet.CommitLogHook$$anonfun$onPostReceive$1$$anonfun$apply$1.apply(GitRepositoryServlet.scala:87)         at servlet.CommitLogHook$$anonfun$onPostReceive$1$$anonfun$apply$1.apply(GitRepositoryServlet.scala:86)         at scala.collection.Iterator$class.foreach(Iterator.scala:727)         at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)         at scala.collection.IterableLike$class.foreach(IterableLike.scala:72)         at scala.collection.AbstractIterable.foreach(Iterable.scala:54)         at servlet.CommitLogHook$$anonfun$onPostReceive$1.apply(GitRepositoryServlet.scala:86)         at servlet.CommitLogHook$$anonfun$onPostReceive$1.apply(GitRepositoryServlet.scala:85)         at util.ControlUtil$.using(ControlUtil.scala:26)         at servlet.CommitLogHook.onPostReceive(GitRepositoryServlet.scala:85)         at org.eclipse.jgit.transport.ReceivePack.service(ReceivePack.java:236)         at org.eclipse.jgit.transport.ReceivePack.receive(ReceivePack.java:160)         at org.eclipse.jgit.http.server.ReceivePackServlet.doPost(ReceivePackServlet.java:187)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)         at org.eclipse.jgit.http.server.glue.UrlPipeline$Chain.doFilter(UrlPipeline.java:237)         at org.eclipse.jgit.http.server.ReceivePackServlet$Factory.doFilter(ReceivePackServlet.java:144)         at org.eclipse.jgit.http.server.glue.UrlPipeline$Chain.doFilter(UrlPipeline.java:235)         at org.eclipse.jgit.http.server.RepositoryFilter.doFilter(RepositoryFilter.java:151)         at org.eclipse.jgit.http.server.glue.UrlPipeline$Chain.doFilter(UrlPipeline.java:235)         at org.eclipse.jgit.http.server.NoCacheFilter.doFilter(NoCacheFilter.java:80)         at org.eclipse.jgit.http.server.glue.UrlPipeline$Chain.doFilter(UrlPipeline.java:235)         at org.eclipse.jgit.http.server.glue.UrlPipeline.service(UrlPipeline.java:215)         at org.eclipse.jgit.http.server.glue.SuffixPipeline.service(SuffixPipeline.java:101)         at org.eclipse.jgit.http.server.glue.MetaFilter.doFilter(MetaFilter.java:175)         at org.eclipse.jgit.http.server.glue.MetaServlet.service(MetaServlet.java:133)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)         at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) ... ``` ","false","bug"
"SQLException when deploying to Tomcat 7","GitBucket Version: gitbucket_2.10-0.0.1 Tomcat Version: Apache Tomcat/7.0.22 JDK Version: 1.7.0_21-b11  I can successfully run GitBucket in standalone mode (java -jar).  java.sql.SQLException: No implicit session available; threadLocalSession can only be used within a withSession block     scala.slick.session.Database$.threadLocalSession(Database.scala:74)     service.ActivityService$class.getRecentActivities(ActivityService.scala:31)     app.IndexController.getRecentActivities(IndexController.scala:7)     app.IndexControllerBase$$anonfun$1.apply(IndexController.scala:18)     app.IndexControllerBase$$anonfun$1.apply(IndexController.scala:15)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     app.ControllerBase.invoke(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     scala.Option.flatMap(Option.scala:170)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     scala.collection.immutable.Stream.flatMap(Stream.scala:446)     org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     app.ControllerBase.runRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     app.ControllerBase.executeRoutes(ControllerBase.scala:22)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     app.ControllerBase.withResponse(ControllerBase.scala:22)     org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     app.ControllerBase.withRequest(ControllerBase.scala:22)     org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     app.ControllerBase.handle(ControllerBase.scala:22)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     app.ControllerBase.doFilter(ControllerBase.scala:53) ","false","improvement"
"Collaborators in group repo","There is no option to add collaborators to a repo created in a group. In the case of user repo, the option is there.  User repo: Setting -> Collaborators -> |_________| [ Add ]  Group repo: Setting -> Collaborators -> {only list of collaborators inherited from the group setting}  Collaborators defined in the group settings should not be removable in the group repo setting. Only users added in the group repo settings should be removable.  Please add the ""Add collaborator"" functionality to the group repo settings.  ---  Team management would be nicer than adding only single users. ","false","improvement,wontfix"
"Incorrect link used for pull request commit messages","I ran into a problem when using the demo app at: http://gitbucket.herokuapp.com/foo/test  Pull request numbers (e.g. #2 in ""Merge pull request #2 from bar/test"") are linked to /issues/2 instead of /pulls/2.  The result of following the link is a 500 with error: java.util.NoSuchElementException: None.get ","false","bug"
"Allow to force HTTPS scheme","If the standalone GitBucket instance runs behind HTTPS proxy, the repository URL always shows HTTP scheme dispute the fact that the connection is HTTPS. This patch is adding a command line option which allows to force the HTTPS scheme. ","true",
"Cannot launch gitbucket on tomcat 7 and 6","°Context :  Linux Mint 15 ""Olivia"" Cinnamon 64-bits tomcat6 (6.0.35-6) GitBucket 1.6 .war Deploy on tomcat Jenkins launched w/o problem  Message on manager screen : ECHEC - L'application pour le chemin de contexte /gitbucket n'a pas pu être démarrée  Message (catalina 2013-10-21.log) :   oct. 21, 2013 9:01:18 AM org.apache.catalina.core.StandardContext start SEVERE: Error listenerStart oct. 21, 2013 9:01:18 AM org.apache.catalina.core.StandardContext start SEVERE: Erreur de démarrage du contexte [/gitbucket] suite aux erreurs précédentes oct. 21, 2013 9:01:18 AM org.apache.coyote.http11.Http11Protocol start INFO: Démarrage de Coyote HTTP/1.1 sur http-8080 oct. 21, 2013 9:01:18 AM org.apache.catalina.startup.Catalina start INFO: Server startup in 8400 ms oct. 21, 2013 9:01:30 AM org.apache.catalina.core.StandardContext start SEVERE: Error listenerStart oct. 21, 2013 9:01:30 AM org.apache.catalina.core.StandardContext start SEVERE: Erreur de démarrage du contexte [/gitbucket] suite aux erreurs précédentes #   Message (catalina.out) :  oct. 21, 2013 9:01:18 AM org.apache.coyote.http11.Http11Protocol start INFO: Démarrage de Coyote HTTP/1.1 sur http-8080 oct. 21, 2013 9:01:18 AM org.apache.catalina.startup.Catalina start INFO: Server startup in 8400 ms 09:01:30.246 [http-8080-1] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap 09:01:30.555 [http-8080-1] ERROR o.scalatra.servlet.ScalatraListener - Failed to initialize scalatra application at /gitbucket java.lang.NoSuchMethodError: javax.servlet.ServletContext.getFilterRegistration(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;     at org.scalatra.servlet.RichServletContext.mountFilter(RichServletContext.scala:119) ~[scalatra_2.10-2.2.1.jar:2.2.1]     at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:70) ~[scalatra_2.10-2.2.1.jar:2.2.1]     at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:76) ~[scalatra_2.10-2.2.1.jar:2.2.1]     at ScalatraBootstrap.init(ScalatraBootstrap.scala:7) ~[ScalatraBootstrap.class:na]     at org.scalatra.servlet.ScalatraListener.configureCycleClass(ScalatraListener.scala:67) ~[scalatra_2.10-2.2.1.jar:2.2.1]     at org.scalatra.servlet.ScalatraListener.contextInitialized(ScalatraListener.scala:23) ~[scalatra_2.10-2.2.1.jar:2.2.1]     at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1276) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:625) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136) ~[catalina-6.0.35.jar:6.0.35]     at javax.servlet.http.HttpServlet.service(HttpServlet.java:617) ~[servlet-api-2.5.jar:na]     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717) ~[servlet-api-2.5.jar:na]     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:193) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293) ~[catalina-6.0.35.jar:6.0.35]     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859) ~[tomcat-coyote-6.0.35.jar:6.0.35]     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602) ~[tomcat-coyote-6.0.35.jar:6.0.35]     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489) ~[tomcat-coyote-6.0.35.jar:6.0.35]     at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25] oct. 21, 2013 9:01:30 AM org.apache.catalina.core.StandardContext start SEVERE: Error listenerStart oct. 21, 2013 9:01:30 AM org.apache.catalina.core.StandardContext start SEVERE: Erreur de démarrage du contexte [/gitbucket] suite aux erreurs précédentes java.lang.NullPointerException     at org.h2.server.web.DbStarter.contextDestroyed(DbStarter.java:73)     at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:4245)     at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4886)     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4750)     at org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1276)     at org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:625)     at org.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:193)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)     at java.lang.Thread.run(Thread.java:724) java.lang.NullPointerException     at org.h2.server.web.DbStarter.contextDestroyed(DbStarter.java:80)     at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:4245)     at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4886)     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4750)     at org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1276)     at org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:625)     at org.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:193)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)     at java.lang.Thread.run(Thread.java:724) 09:01:30.572 [http-8080-1] INFO  o.scalatra.servlet.ScalatraListener - Destroying life cycle class: ScalatraBootstrap #   Message (localhost 2013-10-21.log) :  oct. 21, 2013 9:01:18 AM org.apache.catalina.core.StandardContext listenerStart SEVERE: Exception lors de l'envoi de l'évènement contexte initialisé (context initialized) à l'instance de classe d'écoute (listener) org.scalatra.servlet.ScalatraListener java.lang.NoSuchMethodError: javax.servlet.ServletContext.getFilterRegistration(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;     at org.scalatra.servlet.RichServletContext.mountFilter(RichServletContext.scala:119)     at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:70)     at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:76)     at ScalatraBootstrap.init(ScalatraBootstrap.scala:7)     at org.scalatra.servlet.ScalatraListener.configureCycleClass(ScalatraListener.scala:67)     at org.scalatra.servlet.ScalatraListener.contextInitialized(ScalatraListener.scala:23)     at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)     at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:799)     at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)     at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)     at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:943)     at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:778)     at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:504)     at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1317)     at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:324)     at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:142)     at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1065)     at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)     at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)     at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)     at org.apache.catalina.core.StandardService.start(StandardService.java:525)     at org.apache.catalina.core.StandardServer.start(StandardServer.java:754)     at org.apache.catalina.startup.Catalina.start(Catalina.java:595)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)     at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)  oct. 21, 2013 9:01:18 AM org.apache.catalina.core.StandardContext listenerStart SEVERE: Exception lors de l'envoi de l'évènement contexte initialisé (context initialized) à l'instance de classe d'écoute (listener) servlet.AutoUpdateListener java.lang.NoSuchMethodError: javax.servlet.ServletContext.setInitParameter(Ljava/lang/String;Ljava/lang/String;)Z     at servlet.AutoUpdateListener.contextInitialized(AutoUpdateListener.scala:118)     at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)     at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:799)     at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)     at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)     at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:943)     at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:778)     at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:504)     at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1317)     at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:324)     at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:142)     at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1065)     at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)     at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)     at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)     at org.apache.catalina.core.StandardService.start(StandardService.java:525)     at org.apache.catalina.core.StandardServer.start(StandardServer.java:754)     at org.apache.catalina.startup.Catalina.start(Catalina.java:595)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)     at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)  oct. 21, 2013 9:01:21 AM org.apache.catalina.core.ApplicationContext log INFO: HTMLManager: init: Associated with Deployer 'Catalina:type=Deployer,host=localhost' oct. 21, 2013 9:01:21 AM org.apache.catalina.core.ApplicationContext log INFO: HTMLManager: init: Global resources are available oct. 21, 2013 9:01:21 AM org.apache.catalina.core.ApplicationContext log INFO: HTMLManager: list: Listing contexts for virtual host 'localhost' oct. 21, 2013 9:01:29 AM org.apache.catalina.core.ApplicationContext log INFO: HTMLManager: start: Starting web application at '/gitbucket' oct. 21, 2013 9:01:30 AM org.apache.catalina.core.StandardContext listenerStart SEVERE: Exception lors de l'envoi de l'évènement contexte initialisé (context initialized) à l'instance de classe d'écoute (listener) org.scalatra.servlet.ScalatraListener java.lang.NoSuchMethodError: javax.servlet.ServletContext.getFilterRegistration(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;     at org.scalatra.servlet.RichServletContext.mountFilter(RichServletContext.scala:119)     at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:70)     at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:76)     at ScalatraBootstrap.init(ScalatraBootstrap.scala:7)     at org.scalatra.servlet.ScalatraListener.configureCycleClass(ScalatraListener.scala:67)     at org.scalatra.servlet.ScalatraListener.contextInitialized(ScalatraListener.scala:23)     at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)     at org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1276)     at org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:625)     at org.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:193)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)     at java.lang.Thread.run(Thread.java:724)  oct. 21, 2013 9:01:30 AM org.apache.catalina.core.StandardContext listenerStart SEVERE: Exception lors de l'envoi de l'évènement contexte initialisé (context initialized) à l'instance de classe d'écoute (listener) servlet.AutoUpdateListener java.lang.NoSuchMethodError: javax.servlet.ServletContext.setInitParameter(Ljava/lang/String;Ljava/lang/String;)Z     at servlet.AutoUpdateListener.contextInitialized(AutoUpdateListener.scala:118)     at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)     at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)     at org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1276)     at org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:625)     at org.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:193)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)     at java.lang.Thread.run(Thread.java:724)  oct. 21, 2013 9:01:30 AM org.apache.catalina.core.ApplicationContext log INFO: HTMLManager: list: Listing contexts for virtual host 'localhost' ","false",
"Add pusher info to WebHook","Jenkins GitBucket Plugin supports WebHook. But it misses pusher information such as  ``` ""pusher"":{     ""email"":""lolwut@noway.biz"",     ""name"":""Garen Torikian""  } ```  I woud like to show pusher information  on Jenkins build page. ","false","duplicate"
"Add pusher info to WebHook","Jenkins GitBucket Plugin supports WebHook. But it misses pusher information such as  ``` ""pusher"":{     ""email"":""lolwut@noway.biz"",     ""name"":""Garen Torikian""  } ```  I woud like to show pusher information  on Jenkins build page. ","false","improvement"
"Keyboard shortcuts",,"false","feature"
"Add single sign-on (SSO) support","Jenkins and Artifactory both support SSO through the use of an HTTP header sent by a reverse proxy.  In Jenkins, this is handled by the [Reverse Proxy Auth Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Reverse+Proxy+Auth+Plugin) while in Artifactory, it's part of the [Pro Power Pack](http://www.jfrog.com/home/v_artifactorypro_overview).  **How to configure SSO for GitBucket** 1. Configure a front-end reverse proxy to authenticate a request (such as IIS with Windows Authentication) and then delegate the request to the servlet container, augmenting it with a special header (let's call it `auth-user`). 2. Configure the servlet app to look for the [configurable] `auth-user` header, and if it's set, you can assume that the user named by the header is logged in, otherwise you continue with other authentication mechanisms. (this is the part I am submitting for review)  **Implementation details** 1. The LDAP configuration needs to record the name of the reverse-proxied SSO header (this is totally optional, if no value is provided, SSO won't be attempted and it will work as before). 2. When retrieving the `LoginAccount`, if the session is empty AND the SSO header has a value, then construct an `Option[Account]`, looking up the user's e-mail address, save the account in the session and return it, otherwise proceed as before.  **Manual testing** 1. Install Tomcat 7.0 and have it listen for requests on port 8080. 2. Deploy GitBucket in Tomcat. 3. Test GitBucket by visiting http://localhost:8080/gitbucket/ 3.1 Notice that you can sign in as root and operate as usual. 3.2 Configure LDAP but don't set the `HTTP Single Sign-On header` field. 3.3 Notice that you can sign on as domain users, etc. 4. Configure IIS on port 80 to use Windows authentication. 5. Install the [BonCode Apache Tomcat AJP 1.3 Connector](http://boncode.net/connector/webdocs/Tomcat_Connector.htm) and configure it to bridge IIS to Tomcat. 5.1 You may want to test that you can navigate to http://localhost/gitbucket/ and it works like it did on Tomcat. 6. Configure the `HTTP Single Sign-On header` field to `auth-user`. 7. Test GitBucket w/SSO by visiting http://localhost/gitbucket/ 7.1 You will be signed in automatically. 7.2 Clicking ""Sign out"" does nothing. (perhaps we would eventually want to hide that link when we detect SSO is enabled?) ","true",
"Fix a problem to redirect wikipage named by multi-byte characters","In some specific case, redirect path (created from route params) is incorrect.  (from src/main/scala/app/SignInController.scala)  ```  46     session.getAndRemove[String](Keys.Session.Redirect).map { redirectUrl => ```  `redirectUrl` is expected to be encoded, but scalatra decodes route params by rl.UrlCodingUtils via ScalatraBase.UriDecoder.  In this result, we can't redirect wikipage named by multi-byte characters.  Demo: - from http://cdn-ak.f.st-hatena.com/images/fotolife/s/smly/20131019/20131019134651.png - to http://cdn-ak.f.st-hatena.com/images/fotolife/s/smly/20131019/20131019134652.png  To avoid this problem, I add dirty workaround to encode redirect path. ","true",
"Regex for username acceptability is too strict, unable to edit group membership","## Problem  My username has a dot (.) in it. Whilst the user is imported from LDAP correctly, the user cannot be made an Administrator in user management: admin/users/{firstname.lastname}/_edituser  The following error message is shown when attempting to hit Update User: ""Username contains invalid character."" ## Steps to reproduce 1. Log in as a user from LDAP with a '.' in the username (to register the user in gitbucket) 2. Log back out 3. Log in as an Administrator (root) 4. Go to edit the user from step 1 5. Attempt to make them an Administrator user type, hit Update User 6. Error message is presented, user is unchanged ## Possible steps to fix  https://github.com/takezoe/gitbucket/blob/master/src/main/scala/util/Validations.scala  Change  ``` java if(!value.matches(""^[a-zA-Z0-9\\-_]+$"")){ ... } ```  to  ``` java if(!value.matches(""^[a-zA-Z0-9\\-_.]+$"")){ ... } ```  (notice added '.') Note: I haven't tested this. I can't get scala to compile in the 15 minutes I've been introduced to it. ## Other notes  I cannot create any repositories as that user either. Whilst I cannot track down exactly why, this is probably related (creating repos as the root user works) ","false","improvement"
"Repository URL doesn't show HTTPS","I have set up reverse proxy providing SSL for gitbucket running in standalone mode. The problem is that gitbucket is showing repository URL as http (http://&lt;host&gt;/git/&lt;user&gt;/&lt;repo&gt;.git) instead of https (https://&lt;host&gt;/git/&lt;user&gt;/&lt;repo&gt;.git). ","false","question"
"System support for RedHat","This commit is adding init.d script and sysconfig file which allows to run GitBucket in the standalone mode. It also adds the spec file which allows to build RPM package. ","true",
"System support for RedHat","This commit is adding init.d script and sysconfig file which allows to run GitBucket in the standalone mode. It also adds the spec file which allows to build RPM package. ","true",
"Add note about troubleshooting 404 errors when running under IIS and Helicontech Zoo","May want to add the following note to this [wiki page](https://github.com/takezoe/gitbucket/wiki/Installation-on-IIS-and-Helicontech-Zoo) about running under IIS to the troubleshooting section:  When running under IIS certain file extensions will not be viewable in the repository and by default you will get a 404 error.  IIS itself has a ""Request Filtering"" setting and by default all requests for files with extensions ""java"", ""cs"",""vb"", ""csproj"",""vbproj"",""ascx"", and ""asax"" will return a 404 error when you try to view them in an IIS web application.  The entries for these extensions need to be removed from the ""Request Filtering"" settings of the IIS web application before they can be viewed in your gitbucket repositories. ","false","task"
"GitBucket doesn't work under Tomcat6","I'm trying to run GitBucket on Tomcat6. When tomcat starts I can see the following error:  INFO: Deploying web application archive gitbucket.war 10:02:15.463 [main] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class: ScalatraBootstrap 10:02:15.760 [main] ERROR o.scalatra.servlet.ScalatraListener - Failed to initialize scalatra application at /gitbucket java.lang.NoSuchMethodError: javax.servlet.ServletContext.getFilterRegistration(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;         at org.scalatra.servlet.RichServletContext.mountFilter(RichServletContext.scala:119) ~[scalatra_2.10-2.2.1.jar:2.2.1]         at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:70) ~[scalatra_2.10-2.2.1.jar:2.2.1]         at org.scalatra.servlet.RichServletContext.mount(RichServletContext.scala:76) ~[scalatra_2.10-2.2.1.jar:2.2.1]         at ScalatraBootstrap.init(ScalatraBootstrap.scala:7) ~[ScalatraBootstrap.class:na]         at org.scalatra.servlet.ScalatraListener.configureCycleClass(ScalatraListener.scala:67) ~[scalatra_2.10-2.2.1.jar:2.2.1]         at org.scalatra.servlet.ScalatraListener.contextInitialized(ScalatraListener.scala:23) ~[scalatra_2.10-2.2.1.jar:2.2.1]         at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3972) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.StandardContext.start(StandardContext.java:4467) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:526) [catalina-6.0.24.jar:na]         at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:905) [catalina-6.0.24.jar:na]         at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:740) [catalina-6.0.24.jar:na]         at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:500) [catalina-6.0.24.jar:na]         at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1277) [catalina-6.0.24.jar:na]         at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:321) [catalina-6.0.24.jar:na]         at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.StandardHost.start(StandardHost.java:722) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.StandardService.start(StandardService.java:516) [catalina-6.0.24.jar:na]         at org.apache.catalina.core.StandardServer.start(StandardServer.java:710) [catalina-6.0.24.jar:na]         at org.apache.catalina.startup.Catalina.start(Catalina.java:593) [catalina-6.0.24.jar:na]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.6.0_24]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.6.0_24]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.6.0_24]         at java.lang.reflect.Method.invoke(Method.java:616) ~[na:1.6.0_24]         at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289) [bootstrap-6.0.24.jar:na]         at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414) [bootstrap-6.0.24.jar:na] 16-Oct-2013 10:02:15 org.apache.catalina.core.StandardContext start SEVERE: Error listenerStart  Other servlets work just fine. Any idea what could be wrong? ","false","question"
"Abort build process if sbt reports errors",,"true",
"fix deprecation warning",,"true",
"Add plugin, Update versions","I've added the [sbt-updates](https://github.com/rtimush/sbt-updates) plugin, and updated the suggested versions (except jetty, which needs the jars to be updated manually). ","true",
"Small bugfix (Comparing String and Option[String])",,"true",
"avoid NumberFormatException",,"true",
"refactoring. avoid Option#get",,"true",
"throw 500 error when I created same name group and user.","When you create a group with a name that is registered as a user name already, an error occurs.  ``` Problem accessing /gitbucket/admin/users/_newgroup. Reason:      Server Error Caused by:  org.h2.jdbc.JdbcSQLException: ???????????????????????: ""PRIMARY_KEY_AB ON PUBLIC.ACCOUNT(USER_NAME)"" Unique index or primary key violation: ""PRIMARY_KEY_AB ON PUBLIC.ACCOUNT(USER_NAME)""; SQL statement: INSERT INTO ""ACCOUNT"" (""USER_NAME"",""MAIL_ADDRESS"",""PASSWORD"",""ADMINISTRATOR"",""URL"",""REGISTERED_DATE"",""UPDATED_DATE"",""LAST_LOGIN_DATE"",""IMAGE"",""GROUP_ACCOUNT"") VALUES (?,?,?,?,?,?,?,?,?,?) [23505-171]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)     at org.h2.message.DbException.get(DbException.java:169)     at org.h2.message.DbException.get(DbException.java:146)     at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:82)     at org.h2.index.PageBtree.find(PageBtree.java:121)     at org.h2.index.PageBtreeLeaf.addRow(PageBtreeLeaf.java:147)     at org.h2.index.PageBtreeLeaf.addRowTry(PageBtreeLeaf.java:100)     at org.h2.index.PageBtreeIndex.addRow(PageBtreeIndex.java:102)     at org.h2.index.PageBtreeIndex.add(PageBtreeIndex.java:93)     at org.h2.table.RegularTable.addRow(RegularTable.java:122)     at org.h2.command.dml.Insert.insertRows(Insert.java:124)     at org.h2.command.dml.Insert.update(Insert.java:84)     at org.h2.command.CommandContainer.update(CommandContainer.java:75)     at org.h2.command.Command.executeUpdate(Command.java:230)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:87)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:84)     at scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)     at scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker.prepared(BasicInvokerComponent.scala:81)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker.insert(BasicInvokerComponent.scala:84)     at service.AccountService$class.createGroup(AccountService.scala:89)     at app.UserManagementController.createGroup(UserManagementController.scala:9)     at app.UserManagementControllerBase$$anonfun$14.apply(UserManagementController.scala:104)     at app.UserManagementControllerBase$$anonfun$14.apply(UserManagementController.scala:103)     at util.AdminAuthenticator$$anonfun$adminOnly$1$$anonfun$apply$6.apply(Authenticator.scala:73)     at util.AdminAuthenticator$class.util$AdminAuthenticator$$authenticate(Authenticator.scala:78)     at util.AdminAuthenticator$$anonfun$adminOnly$1.apply(Authenticator.scala:73)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:22)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:19)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:21)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)     at app.ControllerBase.runRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1497)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1497)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1497)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1497)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$2.apply(ScalatraBase.scala:166)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:165)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)     at app.ControllerBase.executeRoutes(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:22)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:22)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:22)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:53)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1497)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1489)     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:517)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:540)     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1097)     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:446)     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1031)     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)     at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:200)     at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:317)     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.eclipse.jetty.server.Server.handle(Server.java:445)     at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:269)     at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:229)     at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)     at java.lang.Thread.run(Thread.java:722) ``` ","false","bug"
"configure sbt to use the junitxml option with specs2","This is  usefull for CI ","true",
"Fix activity message problem (related to #120)",,"true",
"Deleting a repo referencing (via PR) a deleted repo errors","- Create a repo as user A - Fork the repo as user B - Make a change as user B - Make a PR as user B - Delete the repo as user B - Delete the repo as user A - Observe error:  ``` Referential integrity constraint violation: ""IDX_PULL_REQUEST_FK0: PUBLIC.PULL_REQUEST FOREIGN KEY(USER_NAME, REPOSITORY_NAME, ISSUE_ID) REFERENCES PUBLIC.ISSUE(USER_NAME, REPOSITORY_NAME, ISSUE_ID) ('root', 'test', 1)""; SQL statement: delete from ""ISSUE"" where (""ISSUE"".""USER_NAME"" = ?) and (""ISSUE"".""REPOSITORY_NAME"" = ?) [23503-171] ```  This is on the latest head. ","false","bug"
"add AccountServiceSpec",,"true",
"Proxying GitBucket breaks login/logout","I'm running GitBucket on an obscure port on my machine, and using nginx to proxy it to a subdomain. When I visit `git.mymachine.com:12345`, it works perfectly, but when i visit `git.mymachine.com` it breaks on login/logout, attempting to redirect my browser to `localhost:12345`. When I retype `git.mymachine.com` in my location bar, I see that the login/logout was in fact successful.  Behavior: Redirects to `localhost:12345` after successful login/logout. Expected behavior: Shows post-login/post-logout page. ","false","question"
"refactoring","- add `FileUtil.withTmpDir` - use `FileUtil.using` ","true",
"Add note that installation on windows server IIS is possible",,"true",
"retrieve LDAP emails as lowercase to avoid confusion","Our LDAP has my email address in the system with capital characters.  This is causing my gravatar to not be found.  I tried entering my email address with the capitalization into my gravatar account. Gravatar only takes email accounts as lowercase. So instead of retrieving the LDAP email address as-is, we should make it lowercase. Capitalized email addresses dont make good sense anyways. ","true",
".head on empty list","http://gitbucket.herokuapp.com/Roch/test/compare ","false","bug"
"Performance: Pushing and viewing large repositories","When I push a large repository (e.g. git://git.kernel.org/pub/scm/git/git.git) it takes a very long time and 100% CPU until push is finished.  Browsing repository main page takes some minutes to load. ","false","duplicate,improvement"
"remove unnecessary code",,"true",
"Add document about LDAP configuration","Add a wiki page about LDAP configuration. ","false","task"
"compitability with tomcat 8.0","Tried to deploy the latest release .war file on tomcat8.0 (32bit), and it runs very slow and eventually shut down automatically, meanwhile in the log:  09-Oct-2013 11:31:02.387 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive C:\tomcat8\tomcat8\webapps\gitbucket.war 09-Oct-2013 11:31:08.293 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time. e.coyote.AbstractProtocol.start Starting ProtocolHandler [""http-apr-7070""] 09-Oct-2013 11:31:12.090 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [""ajp-apr-8009""] 09-Oct-2013 11:31:12.090 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 9739 ms 09-Oct-2013 11:31:38.433 SEVERE [http-apr-7070-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Poller failed with error [610,038] : [APR does not understand this error code] ","false","improvement"
"Spacing in large files with long lines is not displayed correctly","The spacing in large file with long lines is not correct. Somehow, it tends to increase - please see the attached image. To reproduce - just push https://github.com/takezoe/gitbucket/blob/master/src/main/scala/service/IssuesService.scala to GitBucket repo and view it in the ""files"" tab.  ![image](https://f.cloud.github.com/assets/5267637/1290308/aa166776-302e-11e3-9d2a-681b0f65f1a3.png) ","false","help wanted,improvement"
"Change link text to 'Older'","Updates the link text for previous commits to read 'Older' and not 'Order'. ","true",
"Latest 1.6 war self execute does not work","✦  java -jar ~/Downloads/gitbucket.war Exception in thread ""main"" java.lang.UnsupportedClassVersionError: JettyLauncher : Unsupported major.minor version 51.0     at java.lang.ClassLoader.defineClass1(Native Method)     at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)     at java.lang.ClassLoader.defineClass(ClassLoader.java:615)     at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)     at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)     at java.net.URLClassLoader.access$000(URLClassLoader.java:58)     at java.net.URLClassLoader$1.run(URLClassLoader.java:197)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(URLClassLoader.java:190)     at java.lang.ClassLoader.loadClass(ClassLoader.java:306)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)     at java.lang.ClassLoader.loadClass(ClassLoader.java:247)  ✦  java -version java version ""1.6.0_41"" Java(TM) SE Runtime Environment (build 1.6.0_41-b02-445-11M4107) Java HotSpot(TM) 64-Bit Server VM (build 20.14-b01-445, mixed mode)  OS X 10.7 ","false","duplicate"
"(refs #120) Use encodeBranchName to tab links",,"true",
"Directory listing","優秀なプロジェクト、直樹さん。私は本当にそれが好きです  On a clean Ubuntu 12.04 x32 install, I am able to install and run GitBucket very quickly, as per the documentation;  $ apt-get install openjdk-7-jre $ cd ~ $ wget https://github.com/takezoe/gitbucket/releases/download/1.6/gitbucket.war $ java -jar gitbucket.war  I can load the GitBucket UI in my browser, it works as expected. When I CTRL+C to end the process, and run it again  ^C $ java -jar gitbucket.war  This time my browser presents a directory listing of the newly created /gitbucket/ directory, rather than the GitBucket UI.  Am I doing something wrong, or is this a bug?  Thanks! ","false","question"
"Using gitbucket on existing repository","I just evaluated gitbucket and I'd like to use it in production. Is it possible and safe just to set GITBUCKET_HOME location to an existing bare git repository that exists for years in our company :-) ?  1) If I create a new repository via gitbucket, 2 new repositories are created, main one and one for wiki, do I have to also create the one for wiki ?  2) Using jgit presumably, how much does gitbucket WRITE to the underlying repository ? I'm just worried about the safety of the repository.  Great job Naoki ! ","false","question"
"Unable to add a user to a group","Using WAR 1.6 and chrome browser  1) Create normal user 2) Create group 3) Edit group        - in chrome console, there is a javascript error, anyway Add button next to Members input doesn't do anything, no request, no error and if I just fill the memberName input with an existing user name and save the group, nothing happens...  Uncaught Error: Invalid dropzone element. dropzone.js:624 Dropzone dropzone.js:624 (anonymous function) _editgroup:113 fire jquery-1.9.1.js:1037 self.fireWith jquery-1.9.1.js:1148 jQuery.extend.ready jquery-1.9.1.js:433 completed ","false","bug"
"Add capabilities to configure $HOME/gitbacket","GitBucket data seems to grow up a lot. So it is convenience to make the location of stored data configurable.    ","false",
"Add a launch with cloudify image + link","Hi there, in this PR I'm adding a button that lets anyone launch a new live instance of GitBucket in their browser.  :smile:  When users click on the ""Launch with Cloudify"" button, they get a dedicated virtual machine that automatically installs GitBucket for them to play - for 20 minutes.  Under the hood it uses Cloudify to achieve that.  I work with Gigaspaces, the company behind Cloudify to get community feedback for the new Cloudify product and we chose GitBucket as an interesting use case.  This is a proof of concept, not actual production code, so please don't just merge this PR yet...  Although just POC, it's functional so feel free to play with it and most importantly - send feedback.  Ideally, if you like it, I'll make it production ready and if not, I'm very much interested in getting your constructive feedback.  BTW we're enabling users to try it out directly from the your site/readme page, it's white-label. We provide a free trial machine for 20m without any additional cost to users.  Thank you! And looking forward to getting your feedback! ","true",
"Cannot run the gitbucket.war on Windows 7","I am trying to run the gitbucket.war on WIndows 7 machine using the java -jar gitbucket.war command. This results in:  C:\Users>java -jar gitbucket.war Exception in thread ""main"" java.lang.UnsupportedClassVersionError: JettyLauncher : Unsupported major.minor version 51.0         at java.lang.ClassLoader.defineClass1(Native Method)         at java.lang.ClassLoader.defineClassCond(Unknown Source)         at java.lang.ClassLoader.defineClass(Unknown Source)         at java.security.SecureClassLoader.defineClass(Unknown Source)         at java.net.URLClassLoader.defineClass(Unknown Source)         at java.net.URLClassLoader.access$000(Unknown Source)         at java.net.URLClassLoader$1.run(Unknown Source)         at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(Unknown Source)         at java.lang.ClassLoader.loadClass(Unknown Source)         at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)         at java.lang.ClassLoader.loadClass(Unknown Source) Could not find the main class: JettyLauncher. Program will exit. ","false","improvement,question"
"Add full name to account and use it to create commits (#125)","The Git practice is to use the full name when creating commits, not a user name. This commit fixes that by introducing a fullName field to Account and using it when creating commits.  For migrating from earlier versions, the user name is used as an initial value for the full name field. ","true",
"Add padding around repository readme content","It looks quite bad without padding. ","true",
"Commits created by GitBucket use user name instead of real name","Currently (in 1.6) there is no way to configure a real name (e.g. ""John Doe"") for a user. The only thing that can be configured is the user name (e.g. ""jdoe"").  When merging pull requests or when editing wikis, currently the user name is used for author/committer of the new commit. This goes against the universal Git practice of using real names in commits.  So, to fix this, the following would need to be implemented: 1. Allow to configure a real name for a user 2. Use the real name instead of user name when creating a merge commit  This is also connected to #33, because when using the real name for commits, the correct user page has to be found via e-mail address, not the real name (which may not be unique). ","false","feature"
"Issues while running on Raspberry Pi","Steps I used to reproduce the problem: - Raspberry Pi, with raspbian. - Installed java JDK as instructed on http://www.raspberrypi.org/archives/4920 - Browsing the page returns in getting the directory listing instead of the app interface  ``` $ java -jar gitbucket.war 2013-10-05 17:41:01.962:INFO:oejs.Server:jetty-8.y.z-SNAPSHOT 2013-10-05 17:41:04.646:INFO:oejw.StandardDescriptorProcessor:NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet Null identity service, trying login service: null Finding identity service: null 2013-10-05 17:41:05.234:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/home/lily/gitbucket/},file:/home/lily/gitbucket.war 2013-10-05 17:41:05.239:INFO:oejsh.ContextHandler:started o.e.j.w.WebAppContext{/,file:/home/lily/gitbucket/},file:/home/lily/gitbucket.war 2013-10-05 17:41:05.826:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8080 ``` ","false","question"
"The change password page needs to require old password and 2 copies of the new password.","When you go to the page: http://localhost:8080/gitbucket/root/_edit  It just says enter the new password. If the user's session is ever hijacked or they walk away from their computer, an attacker could change their password easily.  To make sure they can't, require the user to enter their old password first. And then verify this is the correct original password before trying to change it.  In addition, to make sure the user actually knows their new password, require them to enter the new password twice and make sure the 2 values match before changing the password. ","false","LDAP/SSO,improvement"
"Fix typo when assigning issues",,"true",
"Large size repository cannot push correctly","when i push to gitbucket, after write objects and refs, hang up.  ``` $ git clone --mirror https://github.com/openstack/nova.git $ cd nova.git $ git push --all http://localhost:8080/git/root/nova.git Username for 'http://localhost:8080': root Password for 'http://root@localhost:8080': Counting objects: 209314, done. Delta compression using up to 4 threads. Compressing objects: 100% (52511/52511), done. Writing objects: 100% (209314/209314), 125.07 MiB | 19.94 MiB/s, done. Total 209314 (delta 167448), reused 190719 (delta 150619) remote: Resolving deltas: 100% (167448/167448) remote: Updating references: 100% (4/4) ### HANGUP HERE ### ### And after about 5 minutes got this error ### error: RPC failed; result=18, HTTP code = 200 fatal: The remote end hung up unexpectedly fatal: The remote end hung up unexpectedly Everything up-to-date ```  And more after about 5minute, got this error.  ``` [info] Started SelectChannelConnector@0.0.0.0:8080 [success] Total time: 2 s, completed 2013/10/05 13:15:06 1. Waiting for source changes... (press enter to interrupt) [warn] Internal error during receive-pack ```  But all git objects and refs are updated correctly, so I can clone from gitbucket. maybe spent much time for around ACTIVITY creation. ","false","improvement"
"Failed to handle branch name that contains #","Failed to handle branch name like a [ #33_match-by-email ]  How to reproduce  ``` $ git clone --mirror https://github.com/takezoe/gitbucket $ cd gitbucket $ git push --mirror http://localhost:8080/git/root/gitbucket.git ```  Open URL http://localhost:8080/root/gitbucket/tree/#33_match-by-email But displays master branch content. ","false","bug"
"Did a lot of design-optimizations","Mainly added icons and set correct bootstrap classes for forms, but also used some new fonts, provided via google webfonts. I also added (more) padding to some Settings-Boxes etc. Tell me if something's broken/not ok with the code I made ;) ","true",
"Password security","Do not use SHA-1 for password hashing, it's insecure. Use PBKDF2 or bcrypt for secure password storage. ","false","LDAP/SSO,improvement"
"Packaging","I'd like to give a shot at packaging gitbucket (a similar way as I'm doing here: https://aur.archlinux.org/packages/me/mediacrush-server-git/PKGBUILD)  How are the dependencies supposed to be grabbed though? On a system-wide level, the sysadmin is expected to take care of them and install all deps on a system-wide basis.  If you have a packaging document that'd be great. ","false","improvement"
"Allow binding to an IP, for instance only to localhost","Since we're paranoid with our code and won't host it on github/bitbucket we have looked at gitbucket. Though we're still paranoid and would like bind gitbucket to only 127.0.0.1 and access is by establishing an SSH tunnel.  Can this be implemented with a command line ioption? It'd prob. have to go somehwere here:  https://github.com/takezoe/gitbucket/blob/master/src/main/java/JettyLauncher.java#L13  and:  http://stackoverflow.com/a/1955591/684167  or maybe this can be supported:  ``` java -Djetty.host=127.0.0.1 -jar gitbucket.war ```  Cheers &Thanks ","false","feature"
"Plans for SSH/git protocol","Is this planned? Would it be impossible to achieve without making the install process a lot more complex?  ","false","feature"
"User and group deletion","It would be nice to have the possibility to delete a user or a group. ","false","feature"
"Max length of passwords should not be 20 characters (/src/main/scala/app/AccountController.scala)","That's too short; what if I like to use [easy-to-remember passphrases](http://xkcd.com/936/)? 64 would probably be okay. ","false","duplicate,improvement"
"Database issue","Hi,  when I try to push a project (~2Go), I get the following issue:  I run it with java -jar gitbucket.war GitBucket 1.6 java version ""1.7.0_40""  org.h2.jdbc.JdbcSQLException: Timeout trying to lock table ""ACCOUNT""; SQL statement:|select x2.""USER_NAME"", x2.""MAIL_ADDRESS"", x2.""PASSWORD"", x2.""ADMINISTRATOR"", x2.""URL"", x2.""REGISTERED_DATE"", x2.""UPDATED_DATE"", x2.""LAST_LOGIN_DATE"", x2.""IMAGE"", x2.""GROUP_ACCOUNT"" from ""ACCOUNT"" x2 where x2.""USER_NAME"" = ? [xxxx]           at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)         at org.h2.message.DbException.get(DbException.java:169)         at org.h2.message.DbException.get(DbException.java:146)         at org.h2.table.RegularTable.doLock(RegularTable.java:501)         at org.h2.table.RegularTable.lock(RegularTable.java:435)         at org.h2.table.TableFilter.lock(TableFilter.java:143)         at org.h2.command.dml.Select.queryWithoutCache(Select.java:608)         at org.h2.command.dml.Query.query(Query.java:311)         at org.h2.command.dml.Query.query(Query.java:281)         at org.h2.command.dml.Query.query(Query.java:36)         at org.h2.command.CommandContainer.query(CommandContainer.java:86)         at org.h2.command.Command.executeQuery(Command.java:191)         at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:190)         at scala.slick.jdbc.StatementInvoker.results(StatementInvoker.scala:34)         at scala.slick.jdbc.StatementInvoker.elementsTo(StatementInvoker.scala:17)         at scala.slick.jdbc.Invoker$class.foreach(Invoker.scala:90)         at scala.slick.jdbc.StatementInvoker.foreach(StatementInvoker.scala:10)         at scala.slick.jdbc.Invoker$class.firstOption(Invoker.scala:41)         at scala.slick.jdbc.StatementInvoker.firstOption(StatementInvoker.scala:10)         at scala.slick.jdbc.UnitInvoker$class.firstOption(Invoker.scala:148)         at scala.slick.driver.BasicInvokerComponent$QueryInvoker.firstOption(BasicInvokerComponent.scala:19)         at service.AccountService$class.getAccountByUserName(AccountService.scala:49)         at service.RequestCache$$anonfun$getAccountByUserName$1$$anon$3.getAccountByUserName(RequestCache.scala:27)         at service.RequestCache$$anonfun$getAccountByUserName$1.apply(RequestCache.scala:27)         at service.RequestCache$$anonfun$getAccountByUserName$1.apply(RequestCache.scala:27)         at app.Context$$anonfun$cache$1$$anonfun$apply$1.apply(ControllerBase.scala:140)         at scala.Option.getOrElse(Option.scala:120)         at app.Context$$anonfun$cache$1.apply(ControllerBase.scala:139)         at app.Context$$anonfun$cache$1.apply(ControllerBase.scala:138)         at util.ControlUtil$.defining(ControlUtil.scala:12)         at app.Context.cache(ControllerBase.scala:138)         at service.RequestCache$class.getAccountByUserName(RequestCache.scala:26)         at view.helpers$.getAccountByUserName(helpers.scala:11)         at view.AvatarImageProvider$class.getAvatarImageHtml(AvatarImageProvider.scala:16)         at view.helpers$.getAvatarImageHtml(helpers.scala:11)         at view.helpers$.avatar(helpers.scala:42)         at html.main$.apply(main.template.scala:70)         at html.index$.apply(index.template.scala:22)         at app.IndexControllerBase$$anonfun$1.apply(IndexController.scala:18)         at app.IndexControllerBase$$anonfun$1.apply(IndexController.scala:15)         at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:250)         at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)         at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:245)         at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)         at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)         at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:244)         at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:22)         at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)         at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)         at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)         at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:22)         at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)         at app.ControllerBase.invoke(ControllerBase.scala:22)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:220)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$7.apply(ScalatraBase.scala:218)         at scala.Option.flatMap(Option.scala:170)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:218)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:217)         at scala.collection.immutable.Stream.flatMap(Stream.scala:446)         at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:217)         at app.ControllerBase.runRoutes(ControllerBase.scala:22)         at org.scalatra.ScalatraBase$class.runActions$1(ScalatraBase.scala:163)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply$mcV$sp(ScalatraBase.scala:175)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:175)         at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$cradleHalt(ScalatraBase.scala:190)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:175)         at app.ControllerBase.executeRoutes(ControllerBase.scala:22)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:113)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:113)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:22)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:22)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:22)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:111)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:22)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:22)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:53)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)         at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:25)         at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)         at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:23)         at scala.slick.session.BaseSession.withTransaction(Session.scala:236)         at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)         at scala.slick.session.Database.withSession(Database.scala:38)         at scala.slick.session.Database.withSession(Database.scala:46)         at scala.slick.session.Database.withTransaction(Database.scala:58)         at servlet.TransactionFilter.doFilter(TransactionFilter.scala:23)         at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)         at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)         at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)         at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)         at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)         at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)         at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)         at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)         at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)         at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)         at org.eclipse.jetty.server.Server.handle(Server.java:365)         at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)         at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)         at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)         at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:635)         at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)         at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)         at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)         at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)         at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)         at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)         at java.lang.Thread.run(Thread.java:724) ","false","bug"
"Add support for other SCM","It'd be awesome to see support added for other types of source control, such as Mercurial and maybe subversion.  As well as providing a boost to the project with supporting a greater audience, it'd hopefully help build in a more agnostic layer between the app and the SCM of choice.  Then if something else ever comes along to threaten the domination of GIT or perhaps a requirement to support multiple versions of it, gitbucket would already be flexible enough to make it's implementation less painful. ","false","feature,wontfix"
"Fix bug dot not skip migration when first init","This pull request fixed this error. (master branch, not in 1.6) this but related 4afbfcb016db0ef6c5e8eb4d3fe1df989fd1fdea. (refs #106)  ``` HTTP ERROR 500  Problem accessing /. Reason:      ???? ""ACTIVITY"" ???????? Table ""ACTIVITY"" not found; SQL statement: select x2.x3, x2.x4, x2.x5, x2.x6, x2.x7, x2.x8, x2.x9, x2.x10 from (select x11.x12 as x3, x11.x13 as x4, x11.x14 as x5, x11.x15 as x6, x11.x16 as x7, x11.x17 as x8, x11.x18 as x9, x11.x19 as x10 from (select x20.""ACTIVITY_ID"" as x12, x20.""USER_NAME"" as x13, x20.""REPOSITORY_NAME"" as x14, x20.""ACTIVITY_USER_NAME"" as x15, x20.""ACTIVITY_TYPE"" as x16, x20.""MESSAGE"" as x17, x20.""ADDITIONAL_INFO"" as x18, x20.""ACTIVITY_DATE"" as x19 from ""ACTIVITY"" x20) x11 inner join (select x21.""USER_NAME"" as x22, x21.""REPOSITORY_NAME"" as x23, x21.""PRIVATE"" as x24 from ""REPOSITORY"" x21) x25 on (x11.x13 = x25.x22) and (x11.x14 = x25.x23) where x25.x24 = ? order by x11.x12 desc limit 30) x2 [42102-171]  Caused by:  org.h2.jdbc.JdbcSQLException: ???? ""ACTIVITY"" ???????? Table ""ACTIVITY"" not found; SQL statement: select x2.x3, x2.x4, x2.x5, x2.x6, x2.x7, x2.x8, x2.x9, x2.x10 from (select x11.x12 as x3, x11.x13 as x4, x11.x14 as x5, x11.x15 as x6, x11.x16 as x7, x11.x17 as x8, x11.x18 as x9, x11.x19 as x10 from (select x20.""ACTIVITY_ID"" as x12, x20.""USER_NAME"" as x13, x20.""REPOSITORY_NAME"" as x14, x20.""ACTIVITY_USER_NAME"" as x15, x20.""ACTIVITY_TYPE"" as x16, x20.""MESSAGE"" as x17, x20.""ADDITIONAL_INFO"" as x18, x20.""ACTIVITY_DATE"" as x19 from ""ACTIVITY"" x20) x11 inner join (select x21.""USER_NAME"" as x22, x21.""REPOSITORY_NAME"" as x23, x21.""PRIVATE"" as x24 from ""REPOSITORY"" x21) x25 on (x11.x13 = x25.x22) and (x11.x14 = x25.x23) where x25.x24 = ? order by x11.x12 desc limit 30) x2 [42102-171]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)     at org.h2.message.DbException.get(DbException.java:169)     at org.h2.message.DbException.get(DbException.java:146)     at org.h2.command.Parser.readTableOrView(Parser.java:4782)     at org.h2.command.Parser.readTableFilter(Parser.java:1091)     at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1697)     at org.h2.command.Parser.parseSelectSimple(Parser.java:1804)     at org.h2.command.Parser.parseSelectSub(Parser.java:1691)     at org.h2.command.Parser.parseSelectUnion(Parser.java:1534)     at org.h2.command.Parser.readTableFilter(Parser.java:1033)     at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1697) ```  How to reproduce 1. `rm -rf $HOME/gitbucket` 2. `./sbt.sh ~container:start` ","true",
"Change link color for absent Wiki pages",,"false","improvement"
"Add ZIP download button to the repository viewer tab","Add ZIP download button to the repository viewer tab. We can download the current displayed revision on the repository viewer as ZIP file by this button. ","false","feature"
"Follow Github New UI",,"false","improvement"
"I had org.h2.jdbc.JdbcSQLException on update 1.5 to 1.6","Update 1.5 to 1.6 on Jetty(9.0.5.v20130815). 1. update war file to version 1.6. 2. restart Jetty. 3. Error(503) 4. Back to 1.5 and restart... OK! 5. retry update to 1.6 and restart... OK!  ``` 2013-10-01 11:15:58.420:INFO:oejpw.PlusConfiguration:Scanner-0: No Transaction manager found - if yo ur webapp requires one, please configure one.   11:16:02.037 [Scanner-0] INFO  o.scalatra.servlet.ScalatraListener - Initializing life cycle class:  ScalatraBootstrap   2013-10-01 11:16:02.867:INFO:oejsh.ContextHandler:Scanner-0: Started o.e.j.w.WebAppContext@48a301e{/gitbucket,file:/tmp/jetty-0.0.0.0-8085-gitbucket.war-_gitbucket-any-/webapp/,AVAILABLE}{/gitbucket.war} 2013-10-01 11:16:09.414:INFO:oejs.ServerConnector:Thread-3: Stopped ServerConnector@450f14ba{HTTP/1.1}{0.0.0.0:8085} 2013-10-01 11:16:09.415:INFO:oejs.ServerConnector:Thread-3: Stopped ServerConnector@3876e500{SSL-http/1.1}{0.0.0.0:8443} org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add "";DB_CLOSE_ON_EXIT=FALSE"" to the db URL) [90121-171]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)           at org.h2.message.DbException.get(DbException.java:169)         at org.h2.message.DbException.get(DbException.java:146)           at org.h2.message.DbException.get(DbException.java:135)         at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1391)         at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1366)         at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:192)         at org.h2.server.web.DbStarter.contextDestroyed(DbStarter.java:73)         at org.eclipse.jetty.server.handler.ContextHandler.callContextDestroyed(ContextHandler.java:794)         at org.eclipse.jetty.servlet.ServletContextHandler.callContextDestroyed(ServletContextHandler.java:447)         at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:828)         at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:212)         at org.eclipse.jetty.webapp.WebAppContext.doStop(WebAppContext.java:514)         at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:90)           at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:119)           at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:138)           at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:69)           at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:90)           at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:119)           at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:138)           at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:69)           at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:90)         at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:119)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:138)         at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:69)           at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:90)         at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:119)         at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:138)           at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:69)           at org.eclipse.jetty.server.Server.doStop(Server.java:409)         at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:90)         at org.eclipse.jetty.util.thread.ShutdownThread.run(ShutdownThread.java:133) 11:16:09.432 [Thread-3] INFO  o.scalatra.servlet.ScalatraListener - Destroying life cycle class: ScalatraBootstrap 2013-10-01 11:16:09.432:INFO:oejsl.ELContextCleaner:Thread-3: javax.el.BeanELResolver purged 2013-10-01 11:16:09.432:INFO:oejsh.ContextHandler:Thread-3: Stopped o.e.j.w.WebAppContext@48a301e{/gitbucket,file:/tmp/jetty-0.0.0.0-8085-gitbucket.war-_gitbucket-any-/webapp/,UNAVAILABLE}{/gitbucket.war} ```  ``` org.h2.jdbc.JdbcSQLException: テーブル ""ACCOUNT"" はすでに存在します Table ""ACCOUNT"" already exists; SQL statement: CREATE TABLE ACCOUNT(                 USER_NAME VARCHAR(100) NOT NULL,                 MAIL_ADDRESS VARCHAR(100) NOT NULL, ...  [42101-171]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)         at org.h2.message.DbException.get(DbException.java:169)         at org.h2.message.DbException.get(DbException.java:146)         at org.h2.command.ddl.CreateTable.update(CreateTable.java:108)         at org.h2.command.CommandContainer.update(CommandContainer.java:75)         at org.h2.command.Command.executeUpdate(Command.java:230)         at org.h2.command.CommandList.update(CommandList.java:41)         at org.h2.command.Command.executeUpdate(Command.java:230)         at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:125)         at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:110)         at servlet.AutoUpdate$Version.update(AutoUpdateListener.scala:35)         at servlet.AutoUpdateListener$$anonfun$contextInitialized$2.apply(AutoUpdateListener.scala:1 26)         at servlet.AutoUpdateListener$$anonfun$contextInitialized$2.apply(AutoUpdateListener.scala:1 26)         at scala.collection.immutable.List.foreach(List.scala:318)         at servlet.AutoUpdateListener.contextInitialized(AutoUpdateListener.scala:126)         at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.jav a:787) ``` ","false","improvement"
"Specify Content-Type for download file","In the repository viewer, Content-Type of all download files is ""application/octet-stream"". So they are always downloaded, we can't see them on the browser.  It should specify suitable Content-Type to the response header for file downloading. ","false",
"Improve ZIP export perfomance",,"false","improvement"
"Delete issue comment",,"false","feature"
"Transfer repository ownership",,"false","feature"
"Change repository name",,"false","feature"
"Email working?","I'm running exim4 on the same machine as GitBucket, so that there's as a mailserver. This host is running on Debian.   I am not seeing anything appear in /var/log/exim4/mainlog when User A comments on User B's issue.   It looks to me as if GitBucket isn't currently attempting to send mail notifications.   My settings are:  SMTP host: 127.0.0.1 SMTP port: 25  There is no authentication on the SMTP server, if the request is coming from localhost, it should work alright. Sending mail via Telnet on this host does work.   I have tried to put some logging statements in place to see where the failure is happening, but nothing comes out in the terminal - I can't figure out what's eating those, otherwise I'd be able to be a bit more helpful.   Secondary question: is GitBucket set up to log to a specific file that I can't find? ","false","bug"
"Ability to configure email sending host","Currently the email sending host is hard-coded into the Notifier class:  https://github.com/takezoe/gitbucket/blob/master/src/main/scala/util/Notifier.scala#L78  It would be nice to be able to set this in the site-wide email notification settings, alongside smtp host, smpt port, etc.  ","false","improvement"
"Question: Is JGit good enough?","Hi,  Is JGit good enough for the purpose of managing Git repos correctly?  We tried to use it a while ago because of the Java API, but was performing badly (performance but also featurewise ) so we ended up using native GIT with a wrapper for the required API.  Considering that GitBucket would need so many git specific features, does JGit work as good as the native version now ?  regards. ","false","question"
"Sync Gitbuckets?","Hi,  I would like to have a few instances of GitBucket running on different machines. How would one keep those installations in sync while the systems still run ?  regards. ","false","question"
"Executable war file",,"false","improvement"
"Fix a problem in making link to commit in activities","When I push local change that is cutting a new branch having no commit, app display follow StackTrace.  <pre> HTTP Status 500 - String index out of range: 40  type Exception report  message String index out of range: 40  description The server encountered an internal error that prevented it from fulfilling this request.  exception  java.lang.StringIndexOutOfBoundsException: String index out of range: 40     java.lang.String.substring(String.java:1907)     helper.html.activities$$anonfun$apply$1$$anonfun$apply$2.apply(activities.template.scala:80)     helper.html.activities$$anonfun$apply$1$$anonfun$apply$2.apply(activities.template.scala:75)     scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244) ... </pre>   Fix that error by refference to [Ignore error in activity timeline caused by invalid data. · 3546a5d · takezoe/gitbucket](https://github.com/takezoe/gitbucket/commit/3546a5d392206a1e343de33cfaa5546b19957a3d) ","true",
"Improve pull request performance","GitBucket clones the repository to check the pull request can be merged without conflicts. But it's heavy for large repositories.  We have to fix this performance problem by a certain way. ","false","improvement"
"Make configurable data(git,db) dir using env vars",,"true",
"Fix Content-Type.","Fix content type in response header. - change from `application/octet-stream` to `application/zip` for downloading zip. - remove `;charset=UTF-8` for non-text resources. ","true",
"Add ContentTypeFilter to specify Content-Type","This is alternative solution for #89. ","true",
"Could not change private, public setting.","Create repository and move to setting page. Could not change private, public setting. The looks like doesn't submit.  Version 1.4, 1.5(8/28) ","false","improvement"
"Specifies Content-Type excluding assets","Excluding /assets/\* for specifying Content-Type. ","true",
"Support i18n",,"true","wontfix"
"Specify ContentType","Internet Explorer sometimes sends funny accept heade as below. `Accept: image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/x-shockwave-flash, */*`  In such situation, Content-Type header in response becomes `application/x-shockwave-flash`, and Internet Explorer renders nothing.  So, gitbucket should specify Content-Type header. ","true",
"Add encoding detection","Add encoding detection. ","true",
"File attachement in Wiki","File uploading via browser is not supported in Github. But I think it's very useful for many users. ","false","feature"
"Expand textarea for long text automatically","It might be possible by jQuery.elastic: http://www.unwrongest.com/projects/elastic/ ","false","improvement"
"Add sbt.sh for UNIX users",,"true",
"LDAP authentication by using bind account",,"true",
"NullPointerException happen when access to file after show commit history","Ver 1.4 (+Jetty)  I encounterd NullPointerException as follows. 1. Click a commited file. ( /test1/blob/master/README.md ) 2. Move to cmmits tab. 3. Click a commit ( /test1/commit/e30cbde9921f6ebae880e5a8e51b5c35cf7b66bb) 4. Move back to Files tab. 5. Click README.md ( /test1/blob/e30cbde9921f6ebae880e5a8e51b5c35cf7b66bb/README.md )  Problem accessing /gitbucket/yoyama/test1/blob/e30cbde9921f6ebae880e5a8e51b5c35cf7b66bb/README.md. Reason:  ``` Server Error ```  Caused by:  java.lang.NullPointerException     at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131) ","false","duplicate"
"Toggle repository features (Issue and Wiki)","In the Github, the repository owner can disable Issue and Wiki. ","false","feature"
"Search Wiki pages","In Github, repository search does not support wiki page but it might be useful. ","false","feature"
"LDAP Authentication","I have many servers for develop.(ex: Jenkins,Gerrit,Redmine,Samba, and more) So i need to itegrate them with LDAP authentication. ","false","feature"
"Display issue and pull request count on the global navi",,"false","feature"
"Failed to handle special file (/dev/null)","``` HTTP ERROR 500  Problem accessing /root/gitbucket/blob/1a509a9a13cba407ecb012174a3c18797ad97965//dev/null. Reason:      false (of class java.lang.Boolean)  Caused by:  scala.MatchError: false (of class java.lang.Boolean)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8$$anonfun$apply$9.getPathObjectId$1(RepositoryViewerController.scala:82)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:91)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:78)     at util.JGitUtil$.withGit(JGitUtil.scala:129)     at util.JGitUtil$.withGit(JGitUtil.scala:121)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8.apply(RepositoryViewerController.scala:78)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8.apply(RepositoryViewerController.scala:74)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:115)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:113)     at scala.Option.map(Option.scala:145)     at util.ReferrerAuthenticator$class.util$ReferrerAuthenticator$$authenticate(Authenticator.scala:113)     at util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:107)     at app.RepositoryViewerController.referrersOnly(RepositoryViewerController.scala:14)     at app.RepositoryViewerControllerBase$$anonfun$7.apply(RepositoryViewerController.scala:74) ```  I got this error in my branch (refs #75) ","false","bug"
"Ensure display file content of specified commit","fix this error  ``` HTTP ERROR 500  Problem accessing /root/gitbucket/blob/71751ae4bc7a4a2fedcfb3a6b4a19d62e90642d1/src/main/scala/service/IssuesService.scala. Reason:      Server Error  Caused by:  java.lang.NullPointerException     at org.eclipse.jgit.lib.ObjectIdOwnerMap.get(ObjectIdOwnerMap.java:131)     at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:807)     at util.JGitUtil$.getRevCommitFromId(JGitUtil.scala:144)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:79)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8$$anonfun$apply$9.apply(RepositoryViewerController.scala:78)     at util.JGitUtil$.withGit(JGitUtil.scala:129)     at util.JGitUtil$.withGit(JGitUtil.scala:121)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8.apply(RepositoryViewerController.scala:78)     at app.RepositoryViewerControllerBase$$anonfun$7$$anonfun$apply$8.apply(RepositoryViewerController.scala:74) ```  I think splitPath should be split by / when specified commit. ","true",
"Web Hook","Web hook is convenient to cooperate with other services.  We'll implement it according to the specification in Github: https://help.github.com/articles/post-receive-hooks ","false","feature"
"Conflict detection in Wiki",,"false","improvement"
"(refs #49)Add favicon and header logo",,"true",
"error if not logged in user press the fork button","in https://github.com/takezoe/gitbucket/tree/5300641822  I think this line https://github.com/takezoe/gitbucket/blob/530064182/src/main/scala/app/CreateRepositoryController.scala#L116 `referrersOnly` filter is wrong  here stacktrace  ``` text java.util.NoSuchElementException: None.get     at scala.None$.get(Option.scala:313)     at scala.None$.get(Option.scala:311)     at app.CreateRepositoryControllerBase$$anonfun$5$$anonfun$apply$4.apply(CreateRepositoryController.scala:117)     at app.CreateRepositoryControllerBase$$anonfun$5$$anonfun$apply$4.apply(CreateRepositoryController.scala:116)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:115)     at util.ReferrerAuthenticator$$anonfun$util$ReferrerAuthenticator$$authenticate$1.apply(Authenticator.scala:113)     at scala.Option.map(Option.scala:145)     at util.ReferrerAuthenticator$class.util$ReferrerAuthenticator$$authenticate(Authenticator.scala:113)     at util.ReferrerAuthenticator$class.referrersOnly(Authenticator.scala:107)     at app.CreateRepositoryController.referrersOnly(CreateRepositoryController.scala:12)     at app.CreateRepositoryControllerBase$$anonfun$5.apply(CreateRepositoryController.scala:116)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:183)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:178)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:178)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:20)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:177)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:20)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:20)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:20)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$3.apply(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$3.apply(ScalatraBase.scala:162)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:162)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:161)     at scala.collection.immutable.Stream.flatMap(Stream.scala:442)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:161)     at app.ControllerBase.runRoutes(ControllerBase.scala:20)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:114)     at app.ControllerBase.executeRoutes(ControllerBase.scala:20)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:20)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60) ``` ","false","bug"
"Toggle gravatar support","(refs #65)Add option to disable gravatar support. ","true",
"Fork repository does not delete","``` HTTP ERROR 500  Problem accessing /rabitarochan/pullreq-test/settings/delete. Reason:      ?????????: ""IDX_PULL_REQUEST_FK1: PUBLIC.PULL_REQUEST FOREIGN KEY(REQUEST_USER_NAME, REQUEST_REPOSITORY_NAME) REFERENCES PUBLIC.REPOSITORY(USER_NAME, REPOSITORY_NAME) ('rabitarochan', 'pullreq-test')"" Referential integrity constraint violation: ""IDX_PULL_REQUEST_FK1: PUBLIC.PULL_REQUEST FOREIGN KEY(REQUEST_USER_NAME, REQUEST_REPOSITORY_NAME) REFERENCES PUBLIC.REPOSITORY(USER_NAME, REPOSITORY_NAME) ('rabitarochan', 'pullreq-test')""; SQL statement: delete from ""REPOSITORY"" where (""REPOSITORY"".""USER_NAME"" = ?) and (""REPOSITORY"".""REPOSITORY_NAME"" = ?) [23503-171] ``` ","false","bug"
"Encrypt the h2 database.","Add support to encrypt the database. H2 fully supports this: http://www.h2database.com/html/features.html#file_encryption ","false","improvement"
"Fork and Pull Request","(refs #2)Basic features of fork and pull request is available. ","true",
"public newsfeed should show only public actions.","Public newsfeed should show only public actions. For now, every action is displayed, so un-authorized users can see everything. ","false",
"Option to deactivate Gravatar icon with an internal default image.","Please add support to replace the use of Gravatar with an internal default image.  E.g. the Trello style is even nicer, they generate Icons from the name initials, unless the users specifies an icon. ","false","improvement"
"questions - how to run it behind a proxy?","How to run gitbucket behind a proxy? e.g. a NginX one?  Most Tomcat/Jetty installations are hidden behind some sort of Proxy like Apache Httpd or newly behind NginX.  Also how to enforce HTTPS for everything ? ","false","question"
"Website and screenshots?","Please add a ""website"" (Github has support for it, and it's better than the Wiki pages) and most important: some screenshots :). ","false","task"
"Live demo hosting?","Any plans to host a live version of gitbucket for demo purposes?  There are quite a few cloud providers that offer free hosting for demo/non-commercial purposes.  http://stackoverflow.com/questions/14606788/hosting-java-app-on-free-web-hosting-site  (and many more) ","false","task"
"question - how to build the WAR file?","As a Java developer with no Scala know-how, how to build the WAR file from the sources (e.g. on Linux or OSX) ? ","false","question"
"Reference issue from  issue comment","When #xxx is in issue comment, display reference in the comment list of the referenced issue. ","false","feature"
"(fix #58) Fix bug that failed to view tag tree",,"true",
"Failed to show tag tree view","I got this error when access tag tree view.  ``` HTTP ERROR 500  Problem accessing /root/gitbucket/tree/1.0. Reason:      Object 1f164ecf2f59190afc8d7204a221c739e707df4c is not a commit.  Caused by:  org.eclipse.jgit.errors.IncorrectObjectTypeException: Object 1f164ecf2f59190afc8d7204a221c739e707df4c is not a commit.     at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:152)     at org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(RevWalk.java:853)     at org.eclipse.jgit.revwalk.RevCommit.parseHeaders(RevCommit.java:142)     at org.eclipse.jgit.revwalk.RevWalk.markStart(RevWalk.java:276)     at org.eclipse.jgit.api.LogCommand.add(LogCommand.java:312)     at org.eclipse.jgit.api.LogCommand.add(LogCommand.java:172)     at util.JGitUtil$$anonfun$getLatestCommitFromPaths$1.apply(JGitUtil.scala:353)     at util.JGitUtil$$anonfun$getLatestCommitFromPaths$1.apply(JGitUtil.scala:352)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)     at scala.collection.immutable.List.foreach(List.scala:318)     at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)     at scala.collection.AbstractTraversable.map(Traversable.scala:105)     at util.JGitUtil$.getLatestCommitFromPaths(JGitUtil.scala:352)     at util.JGitUtil$.getFileList(JGitUtil.scala:234)     at app.RepositoryViewerControllerBase$$anonfun$app$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$17.apply(RepositoryViewerController.scala:214)     at app.RepositoryViewerControllerBase$$anonfun$app$RepositoryViewerControllerBase$$fileList$1$$anonfun$apply$17.apply(RepositoryViewerController.scala:210) ``` ### How to reproduce. 1. start gitbucket by sbt 2. create repository for gitbucket by root user 3. push mirror        ```    $ git clone --mirror https://github.com/takezoe/gitbucket.git    $ cd gitbucket.git    $ git push --mirror http://localhost:8080/git/root/gitbucket.git    ``` 4. open browser http://localhost:8080/root/gitbucket/tree/1.0  Hmm, i think this is related lightweight tag or annotated tag.  ``` $ git show-ref --tags --dereference 1f164ecf2f59190afc8d7204a221c739e707df4c refs/tags/1.0 07512f1df9974fd394fdc999a7bda7993912ea11 refs/tags/1.0^{} 8aec16bf7f164e99605a26b337a79246ca374303 refs/tags/1.1 bdd83a84fd38bf91f7be094e51921d95b807fe00 refs/tags/1.1^{} f9cf451ceabdc9bd422ce6ac24b1c2aa397a00c2 refs/tags/1.2 777142b9926997b3c3272761ad7a9258e2fabfa1 refs/tags/1.2^{} d57ec0c73dd5538697d34c56eaa39d8daec0aad0 refs/tags/1.3 188237db2451d10e2e2e27236d64f3e95dbe615b refs/tags/1.3^{} fd84b3f1c4f6b5d505e72d0585c035347a58dfc2 refs/tags/1.4 ```  I'll try to fix this. ","false",
"Upgrade to sbt-idea 1.5.1","Many bug fixes are contains. ","true",
"Fix UnsupportedOperationException","Create new user and access to dashboard/issues/repos.  ``` HTTP ERROR 500  Problem accessing /dashboard/issues/repos. Reason:      empty.reduceLeft Caused by:  java.lang.UnsupportedOperationException: empty.reduceLeft     at scala.collection.LinearSeqOptimized$class.reduceLeft(LinearSeqOptimized.scala:124)     at scala.collection.immutable.List.reduceLeft(List.scala:84)     at service.IssuesService$$anonfun$searchIssueQuery$1.apply(IssuesService.scala:164)     at service.IssuesService$$anonfun$searchIssueQuery$1.apply(IssuesService.scala:160)     at scala.slick.lifted.Query.filter(Query.scala:37)     at service.IssuesService$class.searchIssueQuery(IssuesService.scala:160)     at service.IssuesService$class.searchIssue(IssuesService.scala:119)     at app.DashboardController.searchIssue(DashboardController.scala:6)     at app.DashboardControllerBase$class.app$DashboardControllerBase$$searchIssues(DashboardController.scala:43)     at app.DashboardControllerBase$$anonfun$1$$anonfun$apply$1.apply(DashboardController.scala:14) ... ``` ","true",
"Make more fast and github-like repository viewer",,"true",
"Cookie authentication instead of HttpSession",,"false","improvement"
"Repository viewer does not work for branch which contains '/'",,"false","bug"
"Initial commiter should be repository creator","like wiki repository. Now it seems that set $HOME/.gitconfig user.name,user.email or machine username and username@hostname. ","true",
"(refs #50)Fix search logic in empty repository","Fix #50 ","true","bug"
"Failed to search in empty repository","When search in empty repository, GitBucket returns HTTP 500 Error. ![gb_failed_search](https://f.cloud.github.com/assets/748569/847173/c2f57dda-f434-11e2-931c-82ccdf347886.PNG) ","false","bug"
"GitBucket logo and favicon",,"false","improvement"
"Show milestone progress bar in issue detail","This fixes #44   ![2013-07-21-22-14-32](https://f.cloud.github.com/assets/789929/831742/f30ddf78-f20c-11e2-8657-2b590ed3d09d.png) ","true",
"Set icon when assignee is changed in page (via JS)","The javascript code did not set icon, whereas the view script does. ","true",
"Select issues satisfying all specified labels","This fixes #29.  Old sql is  ``` sql select x2.""USER_NAME"", x2.""REPOSITORY_NAME"", x2.""ISSUE_ID"", x2.""OPENED_USER_NAME"", x2.""MILESTONE_ID"", x2.""ASSIGNED_USER_NAME"", x2.""TITLE"", x2.""CONTENT"", x2.""CLOSED"", x2.""REGISTERED_DATE"", x2.""UPDATED_DATE"" from ""ISSUE"" x2   where (((x2.""USER_NAME"" = ?) and (x2.""REPOSITORY_NAME"" = ?)) and (x2.""CLOSED"" = ?)) and     exists(select x3.""USER_NAME"", x3.""REPOSITORY_NAME"", x3.""ISSUE_ID"", x3.""LABEL_ID"" from ""ISSUE_LABEL"" x3       where (((x3.""USER_NAME"" = x2.""USER_NAME"") and (x3.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x3.""ISSUE_ID"" = x2.""ISSUE_ID""))       and (x3.""LABEL_ID"" in (select x4.""LABEL_ID"" from ""LABEL"" x4 where ((x4.""USER_NAME"" = x2.""USER_NAME"") and (x4.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x4.""LABEL_NAME"" in (?, ?))))) ```  New sql is  ``` sql select x2.""USER_NAME"", x2.""REPOSITORY_NAME"", x2.""ISSUE_ID"", x2.""OPENED_USER_NAME"", x2.""MILESTONE_ID"", x2.""ASSIGNED_USER_NAME"", x2.""TITLE"", x2.""CONTENT"", x2.""CLOSED"", x2.""REGISTERED_DATE"", x2.""UPDATED_DATE"" from ""ISSUE"" x2   where ((((x2.""USER_NAME"" = ?) and (x2.""REPOSITORY_NAME"" = ?)) and (x2.""CLOSED"" = ?)) and     exists(select x3.""USER_NAME"", x3.""REPOSITORY_NAME"", x3.""ISSUE_ID"", x3.""LABEL_ID"" from ""ISSUE_LABEL"" x3       where (((x3.""USER_NAME"" = x2.""USER_NAME"") and (x3.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x3.""ISSUE_ID"" = x2.""ISSUE_ID"")) and (x3.""LABEL_ID"" in (select x4.""LABEL_ID"" from ""LABEL"" x4 where ((x4.""USER_NAME"" = x2.""USER_NAME"") and (x4.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x4.""LABEL_NAME"" = 'enhancement'))))) and     exists(select x5.""USER_NAME"", x5.""REPOSITORY_NAME"", x5.""ISSUE_ID"", x5.""LABEL_ID"" from ""ISSUE_LABEL"" x5       where (((x5.""USER_NAME"" = x2.""USER_NAME"") and (x5.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x5.""ISSUE_ID"" = x2.""ISSUE_ID"")) and (x5.""LABEL_ID"" in (select x6.""LABEL_ID"" from ""LABEL"" x6 where ((x6.""USER_NAME"" = x2.""USER_NAME"") and (x6.""REPOSITORY_NAME"" = x2.""REPOSITORY_NAME"")) and (x6.""LABEL_NAME"" = 'bug')))) ```  This repeats similar select sub-queries, so slow. Another idea is to select all labels with `INNER JOIN`, then filter-out not satisfying issues in Scala. ","true","improvement"
"Add participants to issue detail","The design is inherited from Github. This fixes #37.  Scala に不慣れなので、妙なところがあったら是非指摘してください。  ![2013-07-21-18-20-26](https://f.cloud.github.com/assets/789929/831477/af15553c-f1e7-11e2-8d6d-4378c96a47b0.png) ","true",
"Milestone progress bar at the issue detail page",,"false","feature"
"Fix resource leak.","When you create or update a wiki page, an exception occurs when you delete the project.  ATTENTION: If this exception occurs, gitbucket will not work. 1.  Create new repository. 2.  Create or update some wiki pages. 3.  Delete this repository by repository setting. 4.  Exception occurs!! 5.  gitbucket will not work. (all pages)  (日本語で失礼します。) Wikiページを作成または更新した際、gitbucketはtmpディレクトリにwikiページ用のリポジトリからclone(pull)し、そのページを作成または更新しています。  上記の操作をJGitで実行した際に、cloneしたリポジトリやwikiページ用のリポジトリの参照が残っているようです。  ですので、`JGitUtil.withGit`を極力利用したり、参照が残っているオブジェクトで`close()`を実行するように修正しました。 ","true",
"Can't push from Eclipse (EGit)","GitBucket returns 401 only for /git-receive-pack. But EGit send authentication information at only the first GET request to /info/refs.  So in the next POST request to /git-receive-pack, EGit receives 401, And it's reported as error to users. ","false","bug"
"Providing JSON style API","like GitHub. http://developer.github.com/  Especially about issues because one of Github problems is poor issues management. The API will make up for it and enable cooperate with other systems. ","false","feature"
"H2 database administration console",,"false","feature"
"Add copy to clipboard git clone URL","I made copy git clone URL to clipboard by using ZeroClipboard(v1.1.7 MIT License). http://zeroclipboard.github.io/ZeroClipboard/  Please confirm this request, when you have time.  NOTE : I think need to choice more nice icon...(I have no sense of design) and if you know good way to find swf file URL(in the gitbucket.js), please advise me. ","true",
"Revert wiki page from history",,"false","feature"
"Add participant avatars of issue","Add participant avatars of issue to the issue detail page. ","false","feature"
"user_name/repo_name/commits/invalid_branch_name cause NullPointerException","in d59e358caac957465265  ![screen shot 2013-07-11 at 20 26 22](https://f.cloud.github.com/assets/389787/781261/f8a62e88-ea1c-11e2-948f-5ac14fd66f50.png) ","false","bug"
"Allow multi-byte characters in Wiki page name ",,"false","improvement"
"Convert @xxxx to link to the account page",,"false","feature"
"Match committer to username by email address","If gitbucket's Account(cf. USER_NAME in ACCOUNT table) was different from Committer(cf. git config user.name), ""Not Found"" is displayed when click link to commiter name on commit message.  I think that to match committer to username by email address is one of solution.  ","false","improvement"
"Add third-party plugin support","Do you have any plan to add ""plugin"" mechanism in the future release?  It's my understanding that ""Easy to setup"" is a core value of the gitbucket. Plugins can easily extend it's feature, but may cause some troubles. ","false","feature"
"Make it possible to create empty repository","GitBucket always add README.md after repository creation.  But it's inconvenient to port existing git repository to GitBucket. In such a case, we want to create an empty repository. Then, we can only push to that.   So 'Create empty repository' option should be added to the new repository creation form. ","false","improvement"
"Unclear license","There's no LICENSE file. ","false","task"
"Issue label search should be AND condition",,"false","improvement,pending"
"Add user icon setting or Gravatar support",,"false","feature"
"Display assigned user on issue list",,"false","feature"
"Display issues for users on the dashborad",,"false","feature"
"Alert by milestone due date","Highlight milestone due date if due date is near or passed. ","false","feature"
"Show GitBucket version on the header",,"false","improvement"
"Add branch tab to repository viewer",,"false","feature"
"Admin user cannot add itself to Collaborators","It is inconvenient for issue management because admin user cannot assign him/herself to an issue. I think it is nice if we could do that. ","false","improvement"
"Multi-byte label support","Usually English is enough for issue label name but it would be better if we can create multi-byte label. ","false","improvement"
"Git 1.8 not available ","Git 1.7 is OK. But 1.8 is maybe not available.  Result  ``` sh $ /usr/local/bin/git --version git version 1.8.3.2 $ /usr/local/bin/git clone http://<mydomain>/gitbucket/git/testuser/test.git Cloning into 'test'... fatal: http://<mydomain>/gitbucket/git/testuser/test.git/info/refs not valid: is this a git repository? ```  I' m wondering this is jgit problem, but I don't have enough information about it.  Please state that gitbucket users have to do use Git 1.7 in README.md. ","false","bug"
"Return 500 when registering/updating a user whose email address is already taken","ユーザ情報の登録/変更時、すでに存在するメールアドレスを設定すると 500 が返されます。  StackTrace  ``` SEVERE: Servlet.service() for servlet [default] in context with path [/gitbucket] threw exception [フィルタの実行により例外を投げました] with root cause org.h2.jdbc.JdbcSQLException: ユニークインデックス、またはプライマリキー違反: ""IDX_ACCOUNT_1_INDEX_E ON PUBLIC.ACCOUNT(MAIL_ADDRESS)"" Unique index or primary key violation: ""IDX_ACCOUNT_1_INDEX_E ON PUBLIC.ACCOUNT(MAIL_ADDRESS)""; SQL statement: INSERT INTO ""ACCOUNT"" (""USER_NAME"",""MAIL_ADDRESS"",""PASSWORD"",""ADMINISTRATOR"",""URL"",""REGISTERED_DATE"",""UPDATED_DATE"",""LAST_LOGIN_DATE"") VALUES (?,?,?,?,?,?,?,?) [23505-171]     at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)     at org.h2.message.DbException.get(DbException.java:169)     at org.h2.message.DbException.get(DbException.java:146)     at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:82)     at org.h2.index.PageBtree.find(PageBtree.java:121)     at org.h2.index.PageBtreeLeaf.addRow(PageBtreeLeaf.java:147)     at org.h2.index.PageBtreeLeaf.addRowTry(PageBtreeLeaf.java:100)     at org.h2.index.PageBtreeIndex.addRow(PageBtreeIndex.java:102)     at org.h2.index.PageBtreeIndex.add(PageBtreeIndex.java:93)     at org.h2.table.RegularTable.addRow(RegularTable.java:122)     at org.h2.command.dml.Insert.insertRows(Insert.java:124)     at org.h2.command.dml.Insert.update(Insert.java:84)     at org.h2.command.CommandContainer.update(CommandContainer.java:75)     at org.h2.command.Command.executeUpdate(Command.java:230)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)     at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:87)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:84)     at scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)     at scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker.prepared(BasicInvokerComponent.scala:81)     at scala.slick.driver.BasicInvokerComponent$InsertInvoker.insert(BasicInvokerComponent.scala:84)     at service.AccountService$class.createAccount(AccountService.scala:16)     at app.UserManagementController.createAccount(UserManagementController.scala:8)     at app.UserManagementControllerBase$$anonfun$5.apply(UserManagementController.scala:40)     at app.UserManagementControllerBase$$anonfun$5.apply(UserManagementController.scala:39)     at util.AdminAuthenticator$$anonfun$adminOnly$1$$anonfun$apply$4.apply(Authenticator.scala:69)     at util.AdminAuthenticator$class.util$AdminAuthenticator$$authenticate(Authenticator.scala:74)     at util.AdminAuthenticator$$anonfun$adminOnly$1.apply(Authenticator.scala:69)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:22)     at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:19)     at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:21)     at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:183)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:178)     at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:178)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:177)     at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:13)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)     at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)     at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)     at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:13)     at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)     at app.ControllerBase.invoke(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$3.apply(ScalatraBase.scala:163)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$3.apply(ScalatraBase.scala:162)     at scala.Option.flatMap(Option.scala:170)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:162)     at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:161)     at scala.collection.immutable.Stream.flatMap(Stream.scala:446)     at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:161)     at app.ControllerBase.runRoutes(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:114)     at app.ControllerBase.executeRoutes(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:13)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:13)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:13)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:13)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)     at app.ControllerBase.executeRoutes(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:13)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:13)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:13)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:13)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)     at scala.Option.getOrElse(Option.scala:120)     at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)     at app.ControllerBase.executeRoutes(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)     at app.ControllerBase.withResponse(ControllerBase.scala:13)     at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)     at app.ControllerBase.withRequest(ControllerBase.scala:13)     at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)     at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)     at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)     at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)     at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)     at app.ControllerBase.handle(ControllerBase.scala:13)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)     at app.ControllerBase.doFilter(ControllerBase.scala:13)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:30)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)     at scala.slick.session.BaseSession.withTransaction(Session.scala:236)     at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)     at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)     at scala.slick.session.Database.withSession(Database.scala:38)     at scala.slick.session.Database.withSession(Database.scala:46)     at scala.slick.session.Database.withTransaction(Database.scala:58)     at servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:724) ``` ","false","bug"
"Two or more users cannot add as Collaborators","When I add collaborators, 1st user can be added, but 2nd user can not be added. ## The following is a stack trace.  SEVERE: Servlet.service() for servlet [default] in context with path [/gitbucket] threw exception [フィルタの実行により例外を投げました] with root cause org.h2.jdbc.JdbcSQLException: ユニークインデックス、またはプライマリキー違反: ""PRIMARY_KEY_F ON PUBLIC.COLLABORATOR(USER_NAME, REPOSITORY_NAME)"" Unique index or primary key violation: ""PRIMARY_KEY_F ON PUBLIC.COLLABORATOR(USER_NAME, REPOSITORY_NAME)""; SQL statement: INSERT INTO ""COLLABORATOR"" (""USER_NAME"",""REPOSITORY_NAME"",""COLLABORATOR_NAME"") VALUES (?,?,?) [23505-171]         at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)         at org.h2.message.DbException.get(DbException.java:169)         at org.h2.message.DbException.get(DbException.java:146)         at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:82)         at org.h2.index.PageBtree.find(PageBtree.java:121)         at org.h2.index.PageBtreeLeaf.addRow(PageBtreeLeaf.java:147)         at org.h2.index.PageBtreeLeaf.addRowTry(PageBtreeLeaf.java:100)         at org.h2.index.PageBtreeIndex.addRow(PageBtreeIndex.java:102)         at org.h2.index.PageBtreeIndex.add(PageBtreeIndex.java:93)         at org.h2.table.RegularTable.addRow(RegularTable.java:122)         at org.h2.command.dml.Insert.insertRows(Insert.java:124)         at org.h2.command.dml.Insert.update(Insert.java:84)         at org.h2.command.CommandContainer.update(CommandContainer.java:75)         at org.h2.command.Command.executeUpdate(Command.java:230)         at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)         at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)         at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:87)         at scala.slick.driver.BasicInvokerComponent$InsertInvoker$$anonfun$insert$1.apply(BasicInvokerComponent.scala:84)         at scala.slick.session.Session$class.withPreparedStatement(Session.scala:68)         at scala.slick.session.BaseSession.withPreparedStatement(Session.scala:201)         at scala.slick.driver.BasicInvokerComponent$InsertInvoker.prepared(BasicInvokerComponent.scala:81)         at scala.slick.driver.BasicInvokerComponent$InsertInvoker.insert(BasicInvokerComponent.scala:84)         at service.RepositoryService$class.addCollaborator(RepositoryService.scala:152)         at app.SettingsController.addCollaborator(SettingsController.scala:9)         at app.SettingsControllerBase$$anonfun$8.apply(SettingsController.scala:70)         at app.SettingsControllerBase$$anonfun$8.apply(SettingsController.scala:69)         at util.OwnerAuthenticator$$anonfun$ownerOnly$1$$anonfun$apply$2.apply(Authenticator.scala:31)         at util.OwnerAuthenticator$$anonfun$ownerOnly$1$$anonfun$apply$2.apply(Authenticator.scala:31)         at util.OwnerAuthenticator$$anonfun$util$OwnerAuthenticator$$authenticate$1.apply(Authenticator.scala:38)         at util.OwnerAuthenticator$$anonfun$util$OwnerAuthenticator$$authenticate$1.apply(Authenticator.scala:36)         at scala.Option.map(Option.scala:145)         at util.OwnerAuthenticator$class.util$OwnerAuthenticator$$authenticate(Authenticator.scala:36)         at util.OwnerAuthenticator$$anonfun$ownerOnly$1.apply(Authenticator.scala:31)         at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1$$anonfun$apply$2.apply(ClientSideValidationFormSupport.scala:22)         at jp.sf.amateras.scalatra.forms.package$.withValidation(package.scala:19)         at jp.sf.amateras.scalatra.forms.ClientSideValidationFormSupport$$anonfun$post$1.apply(ClientSideValidationFormSupport.scala:21)         at org.scalatra.ScalatraBase$class.org$scalatra$ScalatraBase$$liftAction(ScalatraBase.scala:183)         at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:178)         at org.scalatra.ScalatraBase$$anonfun$invoke$1.apply(ScalatraBase.scala:178)         at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)         at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.invoke(ScalatraBase.scala:177)         at app.ControllerBase.org$scalatra$json$JsonSupport$$super$invoke(ControllerBase.scala:13)         at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:65)         at org.scalatra.json.JsonSupport$$anonfun$invoke$1.apply(JsonSupport.scala:57)         at org.scalatra.ApiFormats$class.withRouteMultiParams(ApiFormats.scala:175)         at app.ControllerBase.withRouteMultiParams(ControllerBase.scala:13)         at org.scalatra.json.JsonSupport$class.invoke(JsonSupport.scala:57)         at app.ControllerBase.invoke(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$3.apply(ScalatraBase.scala:163)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1$$anonfun$apply$3.apply(ScalatraBase.scala:162)         at scala.Option.flatMap(Option.scala:170)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:162)         at org.scalatra.ScalatraBase$$anonfun$runRoutes$1.apply(ScalatraBase.scala:161)         at scala.collection.immutable.Stream.flatMap(Stream.scala:446)         at org.scalatra.ScalatraBase$class.runRoutes(ScalatraBase.scala:161)         at app.ControllerBase.runRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:114)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.scalatra.ScalatraFilter$$anonfun$1.apply$mcV$sp(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at org.scalatra.ScalatraFilter$$anonfun$1.apply(ScalatraFilter.scala:71)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$$anonfun$executeRoutes$1.apply(ScalatraBase.scala:117)         at scala.Option.getOrElse(Option.scala:120)         at org.scalatra.ScalatraBase$class.executeRoutes(ScalatraBase.scala:116)         at app.ControllerBase.executeRoutes(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply$mcV$sp(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at org.scalatra.ScalatraBase$$anonfun$handle$1.apply(ScalatraBase.scala:80)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withResponse(DynamicScope.scala:80)         at app.ControllerBase.withResponse(ControllerBase.scala:13)         at org.scalatra.DynamicScope$$anonfun$withRequestResponse$1.apply(DynamicScope.scala:60)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.DynamicScope$class.withRequest(DynamicScope.scala:71)         at app.ControllerBase.withRequest(ControllerBase.scala:13)         at org.scalatra.DynamicScope$class.withRequestResponse(DynamicScope.scala:59)         at app.ControllerBase.withRequestResponse(ControllerBase.scala:13)         at org.scalatra.ScalatraBase$class.handle(ScalatraBase.scala:78)         at app.ControllerBase.org$scalatra$servlet$ServletBase$$super$handle(ControllerBase.scala:13)         at org.scalatra.servlet.ServletBase$class.handle(ServletBase.scala:43)         at app.ControllerBase.handle(ControllerBase.scala:13)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply$mcV$sp(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at org.scalatra.ScalatraFilter$$anonfun$doFilter$1.apply(ScalatraFilter.scala:33)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at org.scalatra.ScalatraFilter$class.doFilter(ScalatraFilter.scala:32)         at app.ControllerBase.doFilter(ControllerBase.scala:13)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at servlet.TransactionFilter$$anonfun$doFilter$1.apply$mcV$sp(TransactionFilter.scala:30)         at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)         at servlet.TransactionFilter$$anonfun$doFilter$1.apply(TransactionFilter.scala:28)         at scala.slick.session.BaseSession.withTransaction(Session.scala:236)         at scala.slick.session.Database$$anonfun$withTransaction$2.apply(Database.scala:58)         at scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)         at scala.slick.session.Database$$anonfun$withSession$1.apply(Database.scala:46)         at scala.slick.session.Database.withSession(Database.scala:38)         at scala.slick.session.Database.withSession(Database.scala:46)         at scala.slick.session.Database.withTransaction(Database.scala:58)         at servlet.TransactionFilter.doFilter(TransactionFilter.scala:28)         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)         at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)         at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)         at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)         at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)         at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)         at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953)         at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)         at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)         at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1023)         at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)         at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)         at java.lang.Thread.run(Thread.java:722) ","false","bug"
"Wiki link does not work","Wiki link `[[label|page]]` does not work well in GitBucket 1.0. ","false","bug"
"Can't delete repository by foreign key constraint error",,"false","bug"
"Redirects to wrong url when create a new wiki page","When I create a new wiki page, gitbucket show me a blank page because it redirects to wrong url `http://[host]:18080/[user]/[repo]/wiki/NewPage` instead of `http://[host]:18080/gitbucket/[user]/[repo]/wiki/NewPage`.  Environment: Tomcat7 on Amazon Linux. Deployed on http://[host]:18080/gitbucket/ ","false","bug"
"Improvement for the commit page","Add some features like below to the commit page. - Diff stat - Character level diff ","false","feature"
"File editing in the repository viewer",,"false","feature"
"File attachment in Issues",,"false","feature"
"Batch updating for issues",,"false","feature"
"Mail notification","Administrator can toggle mail notification at the system settings page. It also can be viewed and managed read / unread on the web browser. ","false","feature"
"Comment for commit and diff",,"false","duplicate,feature"
"Team management (like Organization in Github)",,"false","feature"
"Star",,"false","feature,plugin"
"Statistics",,"false","feature,plugin"
"Network graph",,"false","feature"
"User (and repository) activity timeline",,"false","feature"
"Repository search",,"false","feature"
"Fork and pull request",,"false","feature"
"Add 'How to use' to README.md","Please let me know if I made any mistakes. ","true",
